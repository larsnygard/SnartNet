{"version":3,"file":"index-DxJNb1HT.js","sources":["../../src/wasm/snartnet_core.js","../../src/lib/torrent.ts","../../src/lib/core.ts","../../src/stores/profileStore.ts","../../src/components/CreatePost.tsx","../../src/stores/postStore.ts","../../src/stores/contactStore.ts","../../src/lib/imageProcessor.ts","../../src/components/PostTimeline.tsx","../../src/pages/HomePage.tsx","../../src/components/CreateProfile.tsx","../../src/components/ProfileAvatar.tsx","../../src/components/ProfilePictureUploader.tsx","../../src/components/ProfilePosts.tsx","../../src/components/ProfileDisplay.tsx","../../src/components/ProgressBar.tsx","../../src/components/WebTorrentStatus.tsx","../../src/lib/backup.ts","../../src/components/BackupRestore.tsx","../../src/pages/ProfilePage.tsx","../../src/pages/MessagesPage.tsx","../../src/components/MagnetLinkManager.tsx","../../src/pages/DiscoverPage.tsx","../../src/pages/ContactsPage.tsx","../../src/components/Navigation.tsx","../../src/components/Layout.tsx","../../src/hooks/useInitializeCore.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["let wasm;\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_4.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_4.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n/**\n * @param {string} username\n * @param {string} key_info_json\n * @returns {any}\n */\nexport function create_profile(username, key_info_json) {\n    const ptr0 = passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(key_info_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.create_profile(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} profile_json\n * @param {string | null} [display_name]\n * @param {string | null} [bio]\n * @returns {any}\n */\nexport function update_profile(profile_json, display_name, bio) {\n    const ptr0 = passStringToWasm0(profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(display_name) ? 0 : passStringToWasm0(display_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(bio) ? 0 : passStringToWasm0(bio, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    const ret = wasm.update_profile(ptr0, len0, ptr1, len1, ptr2, len2);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} profile_json\n * @param {string} keypair_json\n * @returns {any}\n */\nexport function sign_profile(profile_json, keypair_json) {\n    const ptr0 = passStringToWasm0(profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.sign_profile(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} signed_profile_json\n * @returns {boolean}\n */\nexport function verify_profile(signed_profile_json) {\n    const ptr0 = passStringToWasm0(signed_profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_profile(ptr0, len0);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\n/**\n * @param {string} profile_json\n * @returns {string}\n */\nexport function generate_profile_magnet_uri(profile_json) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.generate_profile_magnet_uri(ptr0, len0);\n        var ptr2 = ret[0];\n        var len2 = ret[1];\n        if (ret[3]) {\n            ptr2 = 0; len2 = 0;\n            throw takeFromExternrefTable0(ret[2]);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} sender_fingerprint\n * @param {string} recipient_fingerprint\n * @param {string} content\n * @returns {any}\n */\nexport function create_direct_message(sender_fingerprint, recipient_fingerprint, content) {\n    const ptr0 = passStringToWasm0(sender_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(recipient_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.create_direct_message(ptr0, len0, ptr1, len1, ptr2, len2);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} message_json\n * @param {string} keypair_json\n * @returns {any}\n */\nexport function sign_message(message_json, keypair_json) {\n    const ptr0 = passStringToWasm0(message_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.sign_message(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} signed_message_json\n * @param {string} public_key\n * @returns {boolean}\n */\nexport function verify_message(signed_message_json, public_key) {\n    const ptr0 = passStringToWasm0(signed_message_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_message(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\n/**\n * @returns {any}\n */\nexport function generate_keypair() {\n    const ret = wasm.generate_keypair();\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} keypair_json\n * @param {string} data\n * @returns {string}\n */\nexport function sign_data(keypair_json, data) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.sign_data(ptr0, len0, ptr1, len1);\n        var ptr3 = ret[0];\n        var len3 = ret[1];\n        if (ret[3]) {\n            ptr3 = 0; len3 = 0;\n            throw takeFromExternrefTable0(ret[2]);\n        }\n        deferred4_0 = ptr3;\n        deferred4_1 = len3;\n        return getStringFromWasm0(ptr3, len3);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\n/**\n * @param {string} data\n * @param {string} signature\n * @param {string} public_key\n * @returns {boolean}\n */\nexport function verify_signature_wasm(data, signature, public_key) {\n    const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_signature_wasm(ptr0, len0, ptr1, len1, ptr2, len2);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    for (let i = 0; i < array.length; i++) {\n        const add = addToExternrefTable0(array[i]);\n        getDataViewMemory0().setUint32(ptr + 4 * i, add, true);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n/**\n * @param {string} key\n * @param {string} value\n */\nexport function storage_set_item(key, value) {\n    const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.storage_set_item(ptr0, len0, ptr1, len1);\n    if (ret[1]) {\n        throw takeFromExternrefTable0(ret[0]);\n    }\n}\n\n/**\n * @param {string} key\n * @returns {any}\n */\nexport function storage_get_item(key) {\n    const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.storage_get_item(ptr0, len0);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} key\n */\nexport function storage_remove_item(key) {\n    const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.storage_remove_item(ptr0, len0);\n    if (ret[1]) {\n        throw takeFromExternrefTable0(ret[0]);\n    }\n}\n\n/**\n * @param {string} author_fingerprint\n * @param {string} content\n * @param {string[] | null} [tags]\n * @param {string | null} [reply_to]\n * @returns {any}\n */\nexport function create_post(author_fingerprint, content, tags, reply_to) {\n    const ptr0 = passStringToWasm0(author_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(tags) ? 0 : passArrayJsValueToWasm0(tags, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(reply_to) ? 0 : passStringToWasm0(reply_to, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    const ret = wasm.create_post(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} post_json\n * @param {string} keypair_json\n * @returns {any}\n */\nexport function sign_post(post_json, keypair_json) {\n    const ptr0 = passStringToWasm0(post_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.sign_post(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} signed_post_json\n * @param {string} public_key\n * @returns {boolean}\n */\nexport function verify_post(signed_post_json, public_key) {\n    const ptr0 = passStringToWasm0(signed_post_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_post(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\nexport function main() {\n    wasm.main();\n}\n\nexport function init_core() {\n    const ret = wasm.init_core();\n    if (ret[1]) {\n        throw takeFromExternrefTable0(ret[0]);\n    }\n}\n\nconst SnartNetCoreFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_snartnetcore_free(ptr >>> 0, 1));\n\nexport class SnartNetCore {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        SnartNetCoreFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_snartnetcore_free(ptr, 0);\n    }\n    constructor() {\n        const ret = wasm.snartnetcore_new();\n        this.__wbg_ptr = ret >>> 0;\n        SnartNetCoreFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    init() {\n        const ret = wasm.snartnetcore_init(this.__wbg_ptr);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {string} username\n     * @param {string | null} [display_name]\n     * @param {string | null} [bio]\n     * @returns {string}\n     */\n    create_profile(username, display_name, bio) {\n        let deferred5_0;\n        let deferred5_1;\n        try {\n            const ptr0 = passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            var ptr1 = isLikeNone(display_name) ? 0 : passStringToWasm0(display_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len1 = WASM_VECTOR_LEN;\n            var ptr2 = isLikeNone(bio) ? 0 : passStringToWasm0(bio, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len2 = WASM_VECTOR_LEN;\n            const ret = wasm.snartnetcore_create_profile(this.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2);\n            var ptr4 = ret[0];\n            var len4 = ret[1];\n            if (ret[3]) {\n                ptr4 = 0; len4 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred5_0 = ptr4;\n            deferred5_1 = len4;\n            return getStringFromWasm0(ptr4, len4);\n        } finally {\n            wasm.__wbindgen_free(deferred5_0, deferred5_1, 1);\n        }\n    }\n    /**\n     * @returns {any}\n     */\n    get_current_profile() {\n        const ret = wasm.snartnetcore_get_current_profile(this.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {string | null} [display_name]\n     * @param {string | null} [bio]\n     */\n    update_current_profile(display_name, bio) {\n        var ptr0 = isLikeNone(display_name) ? 0 : passStringToWasm0(display_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(bio) ? 0 : passStringToWasm0(bio, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        const ret = wasm.snartnetcore_update_current_profile(this.__wbg_ptr, ptr0, len0, ptr1, len1);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {string} content\n     * @param {string[] | null} [tags]\n     * @param {string | null} [reply_to]\n     * @returns {any}\n     */\n    create_post(content, tags, reply_to) {\n        const ptr0 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(tags) ? 0 : passArrayJsValueToWasm0(tags, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(reply_to) ? 0 : passStringToWasm0(reply_to, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        const ret = wasm.snartnetcore_create_post(this.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {string} recipient_fingerprint\n     * @param {string} content\n     * @returns {any}\n     */\n    create_message(recipient_fingerprint, content) {\n        const ptr0 = passStringToWasm0(recipient_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.snartnetcore_create_message(this.__wbg_ptr, ptr0, len0, ptr1, len1);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {string}\n     */\n    get_public_key() {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.snartnetcore_get_public_key(this.__wbg_ptr);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @returns {string}\n     */\n    get_fingerprint() {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.snartnetcore_get_fingerprint(this.__wbg_ptr);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    has_profile() {\n        const ret = wasm.snartnetcore_has_profile(this.__wbg_ptr);\n        return ret !== 0;\n    }\n}\nif (Symbol.dispose) SnartNetCore.prototype[Symbol.dispose] = SnartNetCore.prototype.free;\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_String_8f0eb39a4a4c2f66 = function(arg0, arg1) {\n        const ret = String(arg1);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_call_13410aac570ffff7 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_a5400b25a865cfd8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_crypto_574e78ad8b13b65f = function(arg0) {\n        const ret = arg0.crypto;\n        return ret;\n    };\n    imports.wbg.__wbg_error_7534b8e9a36f1ab4 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_getItem_9fc74b31b896f95a = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = arg1.getItem(getStringFromWasm0(arg2, arg3));\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_38a1ff1ea09f6cc7 = function() { return handleError(function (arg0, arg1) {\n        globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_b8f5dbd5f3995a9e = function() { return handleError(function (arg0, arg1) {\n        arg0.getRandomValues(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_getTime_6bb3f64e0f18f817 = function(arg0) {\n        const ret = arg0.getTime();\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Window_12d20d558ef92592 = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Window;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_length_6bb7e81f9d7713e4 = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_localStorage_9330af8bf39365ba = function() { return handleError(function (arg0) {\n        const ret = arg0.localStorage;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    }, arguments) };\n    imports.wbg.__wbg_log_6c7b5f4f00b8ce3f = function(arg0) {\n        console.log(arg0);\n    };\n    imports.wbg.__wbg_msCrypto_a61aeb35a24c1329 = function(arg0) {\n        const ret = arg0.msCrypto;\n        return ret;\n    };\n    imports.wbg.__wbg_new0_b0a0a38c201e6df5 = function() {\n        const ret = new Date();\n        return ret;\n    };\n    imports.wbg.__wbg_new_19c25a3f2fa63a02 = function() {\n        const ret = new Object();\n        return ret;\n    };\n    imports.wbg.__wbg_new_1f3a344cf3123716 = function() {\n        const ret = new Array();\n        return ret;\n    };\n    imports.wbg.__wbg_new_8a6f238a6ece86ea = function() {\n        const ret = new Error();\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_254190557c45b4ec = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_a167dcc7aaa3ba77 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_node_905d3e251edff8a2 = function(arg0) {\n        const ret = arg0.node;\n        return ret;\n    };\n    imports.wbg.__wbg_process_dc0fbacc7c1c06f7 = function(arg0) {\n        const ret = arg0.process;\n        return ret;\n    };\n    imports.wbg.__wbg_prototypesetcall_3d4a26c1ed734349 = function(arg0, arg1, arg2) {\n        Uint8Array.prototype.set.call(getArrayU8FromWasm0(arg0, arg1), arg2);\n    };\n    imports.wbg.__wbg_randomFillSync_ac0988aba3254290 = function() { return handleError(function (arg0, arg1) {\n        arg0.randomFillSync(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_removeItem_487c5a070c7adaf7 = function() { return handleError(function (arg0, arg1, arg2) {\n        arg0.removeItem(getStringFromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_require_60cc747a6bc5215a = function() { return handleError(function () {\n        const ret = module.require;\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_setItem_7add5eb06a28b38f = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        arg0.setItem(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n        arg0[arg1] = arg2;\n    };\n    imports.wbg.__wbg_set_90f6c0f7bd8c0415 = function(arg0, arg1, arg2) {\n        arg0[arg1 >>> 0] = arg2;\n    };\n    imports.wbg.__wbg_stack_0ed75d68575b0f3c = function(arg0, arg1) {\n        const ret = arg1.stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_8921f820c2ce3f12 = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_f0a4409105898184 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_995b214ae681ff99 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_cde3890479c675ea = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_subarray_70fd07feefe14294 = function(arg0, arg1, arg2) {\n        const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_versions_c01dfd4722a88165 = function(arg0) {\n        const ret = arg0.versions;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisfunction_8cee7dce3725ae74 = function(arg0) {\n        const ret = typeof(arg0) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisobject_307a53c6bd97fbf8 = function(arg0) {\n        const val = arg0;\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisstring_d4fa939789f003b0 = function(arg0) {\n        const ret = typeof(arg0) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisundefined_c4b71d073b92f3c5 = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenstringget_0f16a6ddddef376f = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgenthrow_451ec1a8469d7eb6 = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_cast_2241b6af4c4b2941 = function(arg0, arg1) {\n        // Cast intrinsic for `Ref(String) -> Externref`.\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_cb9088102bce6b30 = function(arg0, arg1) {\n        // Cast intrinsic for `Ref(Slice(U8)) -> NamedExternref(\"Uint8Array\")`.\n        const ret = getArrayU8FromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_d6cd19b81560fd6e = function(arg0) {\n        // Cast intrinsic for `F64 -> Externref`.\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_4;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('snartnet_core_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n","import type { Profile } from '@/stores/profileStore'\n\n// Simple torrent service that works in both browser and build\nclass TorrentService {\n  private client: any = null\n  private activeTorrents: Map<string, any> = new Map()\n  private eventCallbacks: Array<(event: any) => void> = []\n  private stats = {\n    torrents: 0,\n    downloadSpeed: 0,\n    uploadSpeed: 0,\n    downloaded: 0,\n    uploaded: 0,\n    peers: 0\n  }\n\n  constructor() {\n    this.initializeClient()\n  }\n\n  private async initializeClient() {\n    // Only initialize in browser environment\n    if (typeof window === 'undefined') return\n    \n    try {\n      // Use global WebTorrent from CDN\n      const WebTorrentConstructor = (window as any).WebTorrent\n      \n      if (!WebTorrentConstructor || typeof WebTorrentConstructor !== 'function') {\n        // Fallback - wait for CDN to load or show error\n        throw new Error('WebTorrent not available - please ensure CDN is loaded')\n      } else {\n        this.client = new WebTorrentConstructor()\n      }\n\n      this.client.on('error', (err: any) => {\n        this.emitEvent({ type: 'error', error: err.message })\n      })\n\n      this.client.on('torrent', (torrent: any) => {\n        this.activeTorrents.set(torrent.infoHash, torrent)\n        this.emitEvent({ type: 'torrent-added', torrent })\n        this.updateStats()\n      })\n\n      console.log('WebTorrent client initialized successfully')\n    } catch (error) {\n      console.error('Failed to initialize WebTorrent:', error)\n      this.emitEvent({ type: 'error', error: `Failed to initialize WebTorrent: ${error}` })\n    }\n  }\n\n  private emitEvent(event: any) {\n    this.eventCallbacks.forEach(callback => {\n      try {\n        callback(event)\n      } catch (err) {\n        console.error('Error in event callback:', err)\n      }\n    })\n  }\n\n  private updateStats() {\n    if (!this.client) return\n    \n    try {\n      this.stats = {\n        torrents: this.client.torrents.length,\n        downloadSpeed: this.client.downloadSpeed || 0,\n        uploadSpeed: this.client.uploadSpeed || 0,\n        downloaded: this.client.downloaded || 0,\n        uploaded: this.client.uploaded || 0,\n        peers: this.client.torrents.reduce((total: number, torrent: any) => {\n          return total + (torrent.numPeers || 0)\n        }, 0)\n      }\n    } catch (error) {\n      console.error('Error updating stats:', error)\n    }\n  }\n\n  async seedProfile(profile: Profile): Promise<string> {\n    if (!this.client) {\n      throw new Error('WebTorrent client not initialized. Are you in a browser environment?')\n    }\n\n    try {\n      const profileData = JSON.stringify(profile, null, 2)\n      const fileName = `${profile.username}_profile.json`\n      \n      // Ensure UTF-8 encoding by converting to Uint8Array first\n      const encoder = new TextEncoder()\n      const encodedData = encoder.encode(profileData)\n      const file = new File([encodedData], fileName, { \n        type: 'application/json; charset=utf-8' \n      })\n\n      return new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Seeding timeout'))\n        }, 10000)\n\n        try {\n          console.log('Seeding profile file:', {\n            fileName,\n            fileSize: file.size,\n            fileType: file.type,\n            profileDataLength: profileData.length\n          })\n          \n          const torrent = this.client.seed([file], (torrent: any) => {\n            clearTimeout(timeoutId)\n            console.log('Profile seeded successfully:', torrent.magnetURI)\n            this.emitEvent({ \n              type: 'seeding-started', \n              profile, \n              magnetURI: torrent.magnetURI \n            })\n            resolve(torrent.magnetURI)\n          })\n\n          torrent.on('error', (err: any) => {\n            clearTimeout(timeoutId)\n            this.emitEvent({ type: 'error', error: err.message })\n            reject(err)\n          })\n\n          torrent.on('wire', (wire: any) => {\n            this.emitEvent({ \n              type: 'peer-connected', \n              peerId: wire.peerId || 'unknown' \n            })\n          })\n\n          torrent.on('upload', () => {\n            this.emitEvent({ \n              type: 'upload-progress', \n              uploadSpeed: torrent.uploadSpeed || 0 \n            })\n            this.updateStats()\n          })\n        } catch (error) {\n          clearTimeout(timeoutId)\n          reject(error)\n        }\n      })\n    } catch (error) {\n      console.error('Error seeding profile:', error)\n      throw error\n    }\n  }\n\n  async downloadProfile(magnetURI: string): Promise<Profile | null> {\n    if (!this.client) {\n      throw new Error('WebTorrent client not initialized. Are you in a browser environment?')\n    }\n\n    try {\n      return new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Download timeout - no peers found'))\n        }, 30000)\n\n        try {\n          const torrent = this.client.add(magnetURI, (torrent: any) => {\n            console.log('Started downloading torrent:', torrent.name || 'unnamed')\n          })\n\n          torrent.on('done', () => {\n            clearTimeout(timeoutId)\n            \n            const profileFile = torrent.files.find((file: any) => \n              file.name && file.name.endsWith('_profile.json')\n            )\n            \n            if (profileFile) {\n              profileFile.getBuffer((err: any, buffer: any) => {\n                if (err) {\n                  this.emitEvent({ type: 'error', error: err.message })\n                  reject(err)\n                  return\n                }\n\n                try {\n                  // Convert buffer to string with proper encoding handling\n                  let jsonString: string\n                  \n                  if (buffer instanceof ArrayBuffer) {\n                    // Handle ArrayBuffer\n                    const uint8Array = new Uint8Array(buffer)\n                    const decoder = new TextDecoder('utf-8', { fatal: false })\n                    jsonString = decoder.decode(uint8Array)\n                  } else if (buffer && typeof buffer.toString === 'function') {\n                    // Handle Buffer-like objects\n                    jsonString = buffer.toString('utf8')\n                  } else {\n                    // Fallback for other buffer types\n                    jsonString = String(buffer)\n                  }\n\n                  // Parse the JSON\n                  const profileData = JSON.parse(jsonString)\n                  this.emitEvent({ type: 'profile-downloaded', profile: profileData })\n                  resolve(profileData)\n                } catch (parseError) {\n                  console.error('Profile parsing error:', parseError)\n                  console.error('Buffer type:', typeof buffer)\n                  console.error('Buffer constructor:', buffer?.constructor?.name)\n                  this.emitEvent({ \n                    type: 'error', \n                    error: `Failed to parse profile data: ${parseError instanceof Error ? parseError.message : 'Unknown error'}`\n                  })\n                  reject(parseError)\n                }\n              })\n            } else {\n              const error = 'Profile file not found in torrent'\n              this.emitEvent({ type: 'error', error })\n              reject(new Error(error))\n            }\n          })\n\n          torrent.on('download', () => {\n            this.emitEvent({ \n              type: 'download-progress', \n              progress: torrent.progress || 0,\n              downloadSpeed: torrent.downloadSpeed || 0\n            })\n            this.updateStats()\n          })\n\n          torrent.on('error', (err: any) => {\n            clearTimeout(timeoutId)\n            this.emitEvent({ type: 'error', error: err.message })\n            reject(err)\n          })\n        } catch (error) {\n          clearTimeout(timeoutId)\n          reject(error)\n        }\n      })\n    } catch (error) {\n      console.error('Error downloading profile:', error)\n      throw error\n    }\n  }\n\n  getStats() {\n    this.updateStats()\n    return { ...this.stats }\n  }\n\n  getActiveTorrents() {\n    if (!this.client) return []\n    \n    try {\n      return this.client.torrents.map((torrent: any) => ({\n        infoHash: torrent.infoHash || '',\n        name: torrent.name || 'Unnamed Torrent',\n        magnetURI: torrent.magnetURI || '',\n        progress: torrent.progress || 0,\n        downloadSpeed: torrent.downloadSpeed || 0,\n        uploadSpeed: torrent.uploadSpeed || 0,\n        numPeers: torrent.numPeers || 0,\n        downloaded: torrent.downloaded || 0,\n        uploaded: torrent.uploaded || 0\n      }))\n    } catch (error) {\n      console.error('Error getting active torrents:', error)\n      return []\n    }\n  }\n\n  onEvent(callback: (event: TorrentEvent) => void): () => void {\n    this.eventCallbacks.push(callback)\n    return () => {\n      const index = this.eventCallbacks.indexOf(callback)\n      if (index > -1) {\n        this.eventCallbacks.splice(index, 1)\n      }\n    }\n  }\n\n  stopSeeding(infoHash: string): boolean {\n    if (!this.client) return false\n    \n    try {\n      const torrent = this.client.get(infoHash)\n      if (torrent) {\n        this.client.remove(torrent)\n        this.activeTorrents.delete(infoHash)\n        this.updateStats()\n        return true\n      }\n      return false\n    } catch (error) {\n      console.error('Error stopping torrent seeding:', error)\n      return false\n    }\n  }\n\n  destroy() {\n    try {\n      if (this.client && typeof this.client.destroy === 'function') {\n        this.client.destroy()\n      }\n    } catch (error) {\n      console.error('Error destroying torrent client:', error)\n    }\n  }\n}\n\n// Global service instance\nlet torrentServiceInstance: TorrentService | null = null\n\nexport function getTorrentService(): TorrentService {\n  if (!torrentServiceInstance) {\n    torrentServiceInstance = new TorrentService()\n  }\n  return torrentServiceInstance\n}\n\n// Event types for better type safety\nexport type TorrentEvent = \n  | { type: 'seeding-started'; profile: Profile; magnetURI: string }\n  | { type: 'peer-connected'; peerId: string }\n  | { type: 'upload-progress'; uploadSpeed: number }\n  | { type: 'profile-downloaded'; profile: Profile }\n  | { type: 'download-progress'; progress: number; downloadSpeed: number }\n  | { type: 'error'; error: string }\n  | { type: 'torrent-added'; torrent: any }\n  | { type: 'download-complete'; torrent: any }\n\nexport { TorrentService }\nexport default getTorrentService","import { useState, useEffect } from 'react'\nimport initWasm, { SnartNetCore as WasmCore, init_core } from '../wasm/snartnet_core'\nimport { getTorrentService } from './torrent'\n\n/**\n * Core bindings for SnartNet Rust WASM module with WebTorrent integration\n */\n\n// Event types that the core can emit\nexport type CoreEvent = \n  | { type: 'ProfileLoaded'; profile: any }\n  | { type: 'ProfileUpdated'; profile: any }\n  | { type: 'PostAdded'; post: any }\n  | { type: 'MessageReceived'; message: any }\n  | { type: 'SyncStateChanged'; state: any }\n  | { type: 'AttachmentProgress'; progress: any }\n\nexport type EventCallback = (event: CoreEvent) => void\n\n/**\n * TypeScript wrapper for the WASM core\n */\nclass SnartNetCore {\n  private wasmCore: WasmCore\n  private eventCallbacks: Set<EventCallback> = new Set()\n\n  constructor(wasmCore: WasmCore) {\n    this.wasmCore = wasmCore\n  }\n\n  // Initialize the core\n  async init(): Promise<void> {\n    try {\n      await this.wasmCore.init()\n      console.log('[SnartNetCore] WASM core initialized')\n    } catch (error) {\n      console.error('[SnartNetCore] Init error:', error)\n      throw error\n    }\n  }\n\n  // Profile management\n  async createProfile(username: string, displayName?: string, bio?: string): Promise<string> {\n    try {\n      const magnetUri = this.wasmCore.create_profile(username, displayName || null, bio || null)\n      console.log('[SnartNetCore] Profile created:', { username, magnetUri })\n      \n      // Emit event\n      const profile = this.wasmCore.get_current_profile()\n      if (profile) {\n        this.emitEvent({ type: 'ProfileLoaded', profile })\n      }\n      \n      return magnetUri\n    } catch (error) {\n      console.error('[SnartNetCore] Create profile error:', error)\n      throw error\n    }\n  }\n\n  async getCurrentProfile(): Promise<any> {\n    try {\n      return this.wasmCore.get_current_profile()\n    } catch (error) {\n      console.error('[SnartNetCore] Get profile error:', error)\n      return null\n    }\n  }\n\n  async updateProfile(displayName?: string, bio?: string): Promise<void> {\n    try {\n      await this.wasmCore.update_current_profile(displayName || null, bio || null)\n      \n      // Emit event\n      const profile = this.wasmCore.get_current_profile()\n      if (profile) {\n        this.emitEvent({ type: 'ProfileUpdated', profile })\n      }\n    } catch (error) {\n      console.error('[SnartNetCore] Update profile error:', error)\n      throw error\n    }\n  }\n\n  // Key management\n  async getPublicKey(): Promise<string> {\n    try {\n      return this.wasmCore.get_public_key()\n    } catch (error) {\n      console.error('[SnartNetCore] Get public key error:', error)\n      throw error\n    }\n  }\n\n  async getFingerprint(): Promise<string> {\n    try {\n      return this.wasmCore.get_fingerprint()\n    } catch (error) {\n      console.error('[SnartNetCore] Get fingerprint error:', error)\n      throw error\n    }\n  }\n\n  // Posts\n  async createPost(content: string, tags?: string[], replyTo?: string): Promise<any> {\n    try {\n      const signedPost = this.wasmCore.create_post(content, tags || null, replyTo || null)\n      console.log('[SnartNetCore] Post created:', signedPost)\n      \n      this.emitEvent({ type: 'PostAdded', post: signedPost })\n      return signedPost\n    } catch (error) {\n      console.error('[SnartNetCore] Create post error:', error)\n      throw error\n    }\n  }\n\n  // Messages\n  async createMessage(recipientFingerprint: string, content: string): Promise<any> {\n    try {\n      const signedMessage = this.wasmCore.create_message(recipientFingerprint, content)\n      console.log('[SnartNetCore] Message created:', signedMessage)\n      \n      this.emitEvent({ type: 'MessageReceived', message: signedMessage })\n      return signedMessage\n    } catch (error) {\n      console.error('[SnartNetCore] Create message error:', error)\n      throw error\n    }\n  }\n\n  // Status\n  hasProfile(): boolean {\n    return this.wasmCore.has_profile()\n  }\n\n  // Events\n  subscribeToEvents(callback: EventCallback): () => void {\n    this.eventCallbacks.add(callback)\n    return () => this.eventCallbacks.delete(callback)\n  }\n\n  private emitEvent(event: CoreEvent): void {\n    this.eventCallbacks.forEach(callback => {\n      try {\n        callback(event)\n      } catch (error) {\n        console.error('[SnartNetCore] Error in event callback:', error)\n      }\n    })\n  }\n\n  // Torrent functionality\n  async seedCurrentProfile(): Promise<string> {\n    try {\n      const profile = this.wasmCore.get_current_profile()\n      if (!profile) {\n        throw new Error('No current profile to seed')\n      }\n\n      console.log('[SnartNetCore] Profile data type:', typeof profile)\n      console.log('[SnartNetCore] Profile data:', profile)\n      \n      // Ensure profile is properly serializable by converting to plain object\n      let cleanProfile: any\n      if (typeof profile === 'object' && profile !== null) {\n        // Convert to plain JavaScript object to ensure proper serialization\n        cleanProfile = JSON.parse(JSON.stringify(profile))\n      } else {\n        cleanProfile = profile\n      }\n\n      console.log('[SnartNetCore] Clean profile:', cleanProfile)\n\n      const torrentService = getTorrentService()\n      const magnetURI = await torrentService.seedProfile(cleanProfile)\n      \n      console.log('[SnartNetCore] Profile seeding started:', magnetURI)\n      return magnetURI\n    } catch (error) {\n      console.error('[SnartNetCore] Failed to seed profile:', error)\n      throw error\n    }\n  }\n\n  async downloadProfileFromMagnet(magnetURI: string): Promise<any> {\n    try {\n      const torrentService = getTorrentService()\n      const profile = await torrentService.downloadProfile(magnetURI)\n      \n      console.log('[SnartNetCore] Profile downloaded:', profile)\n      return profile\n    } catch (error) {\n      console.error('[SnartNetCore] Failed to download profile:', error)\n      throw error\n    }\n  }\n\n  getTorrentStats() {\n    const torrentService = getTorrentService()\n    return torrentService.getStats()\n  }\n\n  getActiveTorrents() {\n    const torrentService = getTorrentService()\n    return torrentService.getActiveTorrents()\n  }\n\n  async stopSeeding(infoHash: string): Promise<void> {\n    const torrentService = getTorrentService()\n    torrentService.stopSeeding(infoHash)\n  }\n\n  // Mock methods for timeline (will be replaced with real P2P later)\n  async getTimeline(): Promise<any[]> {\n    // Return mock timeline data for now\n    return [\n      {\n        id: 'post_1',\n        content: 'Welcome to SnartNet! This is a decentralized social media platform.',\n        author: 'alice',\n        timestamp: new Date(Date.now() - 3600000).toISOString(),\n        tags: ['introduction', 'snartnet']\n      },\n      {\n        id: 'post_2', \n        content: 'Just created my first cryptographically signed post! 🔐',\n        author: 'bob',\n        timestamp: new Date(Date.now() - 1800000).toISOString(),\n        tags: ['crypto', 'security']\n      }\n    ]\n  }\n}\n\n// Global core instance\nlet coreInstance: SnartNetCore | null = null\n\n/**\n * Initialize and get the core instance\n */\nexport async function getCore(): Promise<SnartNetCore> {\n  if (!coreInstance) {\n    try {\n      // Initialize WASM\n      await initWasm()\n      await init_core()\n      \n      // Create WASM core instance\n      const wasmCore = new WasmCore()\n      coreInstance = new SnartNetCore(wasmCore)\n      await coreInstance.init()\n      \n      console.log('[Core] Initialized successfully')\n    } catch (error) {\n      console.error('[Core] Initialization failed:', error)\n      throw error\n    }\n  }\n  return coreInstance\n}\n\n/**\n * Hook for using the core in React components\n */\nexport function useCore() {\n  const [core, setCore] = useState<SnartNetCore | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getCore().then(instance => {\n      setCore(instance)\n      setLoading(false)\n    }).catch(error => {\n      console.error('Failed to initialize core:', error)\n      setLoading(false)\n    })\n  }, [])\n\n  return { core, loading }\n}","import { create } from 'zustand'\n\ninterface ProfilePost {\n  id: string;\n  content: string;\n  createdAt: string;\n}\n\ninterface Profile {\n  username: string;\n  publicKey?: string;\n  displayName?: string;\n  bio?: string;\n  avatarHash?: string;\n  avatar?: string; // URL or base64 data URL for profile picture\n  profilePicture?: string; // Base64 encoded profile picture\n  profilePictureThumbnail?: string; // Base64 encoded thumbnail\n  location?: string;\n  website?: string;\n  magnetUri?: string;\n  createdAt?: string;\n  updatedAt?: string;\n  posts?: ProfilePost[]; // Add posts array\n}\n\ninterface ProfileState {\n  currentProfile: Profile | null;\n  profiles: Map<string, Profile>;\n  loading: boolean;\n  error: string | null;\n  \n  // Actions\n  setCurrentProfile: (profile: Profile | null) => void;\n  addProfile: (profile: Profile) => void;\n  updateProfile: (username: string, updates: Partial<Profile>) => void;\n  updateProfilePicture: (username: string, profilePicture: string, thumbnail?: string) => void;\n  addProfilePost: (username: string, content: string) => void;\n  removeProfilePost: (username: string, postId: string) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearError: () => void;\n}\n\nexport const useProfileStore = create<ProfileState>((set) => ({\n  currentProfile: null,\n  profiles: new Map(),\n  loading: false,\n  error: null,\n\n  setCurrentProfile: (profile) => set({ currentProfile: profile }),\n  \n  addProfile: (profile) => set((state) => {\n    const newProfiles = new Map(state.profiles)\n    newProfiles.set(profile.username, profile)\n    return { profiles: newProfiles }\n  }),\n  \n  updateProfile: (username, updates) => set((state) => {\n    const newProfiles = new Map(state.profiles)\n    const existing = newProfiles.get(username)\n    if (existing) {\n      newProfiles.set(username, { ...existing, ...updates })\n    }\n    \n    // Also update current profile if it matches\n    let newCurrentProfile = state.currentProfile\n    if (state.currentProfile?.username === username) {\n      newCurrentProfile = { ...state.currentProfile, ...updates }\n    }\n    \n    return { \n      profiles: newProfiles,\n      currentProfile: newCurrentProfile\n    }\n  }),\n  \n  updateProfilePicture: (username, profilePicture, thumbnail) => set((state) => {\n    const updates = { \n      profilePicture,\n      profilePictureThumbnail: thumbnail || profilePicture,\n      updatedAt: new Date().toISOString()\n    }\n    \n    const newProfiles = new Map(state.profiles)\n    const existing = newProfiles.get(username)\n    if (existing) {\n      newProfiles.set(username, { ...existing, ...updates })\n    }\n    \n    // Also update current profile if it matches\n    let newCurrentProfile = state.currentProfile\n    if (state.currentProfile?.username === username) {\n      newCurrentProfile = { ...state.currentProfile, ...updates }\n      \n      // Store profile picture in localStorage for persistence\n      localStorage.setItem(`profile-picture-${username}`, profilePicture)\n      if (thumbnail) {\n        localStorage.setItem(`profile-picture-thumb-${username}`, thumbnail)\n      }\n    }\n    \n    return { \n      profiles: newProfiles,\n      currentProfile: newCurrentProfile\n    }\n  }),\n  \n  addProfilePost: (username, content) => set((state) => {\n    const newProfiles = new Map(state.profiles);\n    const existing = newProfiles.get(username);\n    const newPost = {\n      id: Math.random().toString(36).slice(2),\n      content,\n      createdAt: new Date().toISOString(),\n    };\n    if (existing) {\n      const posts = existing.posts ? [newPost, ...existing.posts] : [newPost];\n      newProfiles.set(username, { ...existing, posts });\n    }\n    let newCurrentProfile = state.currentProfile;\n    if (state.currentProfile?.username === username) {\n      const posts = state.currentProfile.posts ? [newPost, ...state.currentProfile.posts] : [newPost];\n      newCurrentProfile = { ...state.currentProfile, posts };\n    }\n    return {\n      profiles: newProfiles,\n      currentProfile: newCurrentProfile,\n    };\n  }),\n  \n  removeProfilePost: (username, postId) => set((state) => {\n    const newProfiles = new Map(state.profiles);\n    const existing = newProfiles.get(username);\n    if (existing && existing.posts) {\n      const posts = existing.posts.filter((p) => p.id !== postId);\n      newProfiles.set(username, { ...existing, posts });\n    }\n    let newCurrentProfile = state.currentProfile;\n    if (state.currentProfile?.username === username && state.currentProfile.posts) {\n      const posts = state.currentProfile.posts.filter((p) => p.id !== postId);\n      newCurrentProfile = { ...state.currentProfile, posts };\n    }\n    return {\n      profiles: newProfiles,\n      currentProfile: newCurrentProfile,\n    };\n  }),\n  \n  setLoading: (loading) => set({ loading }),\n  setError: (error) => set({ error }),\n  clearError: () => set({ error: null }),\n}))\n\nexport type { Profile, ProfilePost }","import { useState } from 'react'\nimport { useProfileStore } from '@/stores/profileStore'\n\nexport default function CreatePost() {\n  const [content, setContent] = useState('')\n  const [isPosting, setIsPosting] = useState(false)\n  const { currentProfile } = useProfileStore()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!content.trim() || !currentProfile) return\n\n    setIsPosting(true)\n    setTimeout(() => {\n      console.log('Post created:', content)\n      setContent('')\n      setIsPosting(false)\n    }, 1000)\n  }\n\n  if (!currentProfile) {\n    return (\n      <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4 mb-6\">\n        <p className=\"text-yellow-700 dark:text-yellow-300\">\n          You need to create a profile before you can make posts.\n        </p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n        Create New Post\n      </h2>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          rows={4}\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n          placeholder=\"What's happening on the swarm?\"\n          disabled={isPosting}\n        />\n        \n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-sm text-gray-500\">Posts are seeded as torrents</span>\n          <button\n            type=\"submit\"\n            disabled={isPosting || !content.trim()}\n            className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isPosting ? '🌱 Seeding...' : '🌱 Seed Post'}\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","import { create } from 'zustand'\n\nexport interface PostImage {\n  id: string\n  data: string // base64 data\n  filename: string\n  size: number\n  mimeType: string\n}\n\nexport interface TorrentPost {\n  id: string\n  author: string\n  authorDisplayName?: string\n  authorAvatar?: string\n  content: string\n  images?: PostImage[]\n  magnetUri?: string // The torrent magnet link for this post\n  createdAt: string\n  updatedAt?: string\n  tags?: string[]\n  isSeeding?: boolean\n  seedProgress?: number\n}\n\ninterface PostState {\n  posts: TorrentPost[]\n  loading: boolean\n  error: string | null\n  \n  // Actions\n  addPost: (post: Omit<TorrentPost, 'id' | 'createdAt'>) => void\n  removePost: (postId: string) => void\n  updatePost: (postId: string, updates: Partial<TorrentPost>) => void\n  updateSeedingStatus: (postId: string, isSeeding: boolean, progress?: number) => void\n  loadPostsFromContacts: () => Promise<void>\n  setLoading: (loading: boolean) => void\n  setError: (error: string | null) => void\n  clearError: () => void\n}\n\nexport const usePostStore = create<PostState>((set) => ({\n  posts: [],\n  loading: false,\n  error: null,\n\n  addPost: (postData) => {\n    const newPost: TorrentPost = {\n      ...postData,\n      id: Math.random().toString(36).slice(2),\n      createdAt: new Date().toISOString(),\n    }\n    \n    set((state) => ({\n      posts: [newPost, ...state.posts].sort((a, b) => \n        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n      )\n    }))\n  },\n\n  removePost: (postId) => {\n    set((state) => ({\n      posts: state.posts.filter(post => post.id !== postId)\n    }))\n  },\n\n  updatePost: (postId, updates) => {\n    set((state) => ({\n      posts: state.posts.map(post => \n        post.id === postId ? { ...post, ...updates } : post\n      )\n    }))\n  },\n\n  updateSeedingStatus: (postId, isSeeding, progress) => {\n    set((state) => ({\n      posts: state.posts.map(post => \n        post.id === postId ? { ...post, isSeeding, seedProgress: progress } : post\n      )\n    }))\n  },\n\n  loadPostsFromContacts: async () => {\n    // TODO: Implement loading posts from contacts via P2P\n    // This would fetch posts from magnet URIs of contacts\n    set({ loading: true })\n    \n    try {\n      // Mock implementation - replace with actual P2P fetching\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      \n      set({ loading: false })\n    } catch (error) {\n      set({ \n        loading: false, \n        error: error instanceof Error ? error.message : 'Failed to load posts'\n      })\n    }\n  },\n\n  setLoading: (loading) => set({ loading }),\n  setError: (error) => set({ error }),\n  clearError: () => set({ error: null }),\n}))","import { create } from 'zustand'\n\nexport type RelationshipType = 'ring-of-trust' | 'friend' | 'acquaintance' | 'group-member'\n\nexport interface ContactPermissions {\n  canMessage: boolean\n  canSeeFullProfile: boolean\n  canShareContacts: boolean\n  canRecoverKeys: boolean // Ring of Trust only\n}\n\nexport interface Contact {\n  id: string // Public key fingerprint\n  username: string\n  displayName: string\n  relationship: RelationshipType\n  trustLevel: number // 1-10 scale\n  addedDate: string\n  lastSeen?: string\n  magnetUri: string\n  avatar?: string\n  notes?: string\n  permissions: ContactPermissions\n}\n\ninterface ContactState {\n  contacts: Contact[]\n  loadContacts: () => void\n  addContact: (contact: Omit<Contact, 'id' | 'addedDate' | 'permissions'>) => void\n  removeContact: (contactId: string) => void\n  updateContact: (contactId: string, updates: Partial<Contact>) => void\n  getContactsByRelationship: (relationship: RelationshipType) => Contact[]\n  getContact: (contactId: string) => Contact | undefined\n}\n\n// Default permissions based on relationship type\nconst getDefaultPermissions = (relationship: RelationshipType): ContactPermissions => {\n  switch (relationship) {\n    case 'ring-of-trust':\n      return {\n        canMessage: true,\n        canSeeFullProfile: true,\n        canShareContacts: true,\n        canRecoverKeys: true\n      }\n    case 'friend':\n      return {\n        canMessage: true,\n        canSeeFullProfile: true,\n        canShareContacts: true,\n        canRecoverKeys: false\n      }\n    case 'acquaintance':\n      return {\n        canMessage: true,\n        canSeeFullProfile: false,\n        canShareContacts: false,\n        canRecoverKeys: false\n      }\n    case 'group-member':\n      return {\n        canMessage: true,\n        canSeeFullProfile: false,\n        canShareContacts: false,\n        canRecoverKeys: false\n      }\n  }\n}\n\n// Generate contact ID from username and public key fingerprint\nconst generateContactId = (username: string, magnetUri: string): string => {\n  // Extract some identifying info from magnet URI or use username\n  const hash = btoa(username + magnetUri).slice(0, 16)\n  return `contact_${hash}`\n}\n\nexport const useContactStore = create<ContactState>((set, get) => ({\n  contacts: [],\n\n  loadContacts: () => {\n    try {\n      const stored = localStorage.getItem('snartnet-contacts')\n      if (stored) {\n        const contacts = JSON.parse(stored)\n        set({ contacts })\n      }\n    } catch (error) {\n      console.error('Failed to load contacts:', error)\n    }\n  },\n\n  addContact: (contactData) => {\n    const contacts = get().contacts\n    \n    // Generate ID and add timestamps\n    const newContact: Contact = {\n      ...contactData,\n      id: generateContactId(contactData.username, contactData.magnetUri),\n      addedDate: new Date().toISOString(),\n      permissions: getDefaultPermissions(contactData.relationship)\n    }\n\n    // Check if contact already exists\n    const existingIndex = contacts.findIndex(c => c.id === newContact.id)\n    if (existingIndex >= 0) {\n      // Update existing contact\n      const updatedContacts = [...contacts]\n      updatedContacts[existingIndex] = { ...updatedContacts[existingIndex], ...newContact }\n      set({ contacts: updatedContacts })\n      localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n    } else {\n      // Add new contact\n      const updatedContacts = [...contacts, newContact]\n      set({ contacts: updatedContacts })\n      localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n    }\n  },\n\n  removeContact: (contactId) => {\n    const contacts = get().contacts\n    const updatedContacts = contacts.filter(c => c.id !== contactId)\n    set({ contacts: updatedContacts })\n    localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n  },\n\n  updateContact: (contactId, updates) => {\n    const contacts = get().contacts\n    const updatedContacts = contacts.map(contact => \n      contact.id === contactId \n        ? { ...contact, ...updates }\n        : contact\n    )\n    set({ contacts: updatedContacts })\n    localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n  },\n\n  getContactsByRelationship: (relationship) => {\n    return get().contacts.filter(c => c.relationship === relationship)\n  },\n\n  getContact: (contactId) => {\n    return get().contacts.find(c => c.id === contactId)\n  }\n}))","/**\n * Image processing utilities for profile pictures\n * Handles upload, resize, crop, and optimization\n */\n\nexport interface ProcessedImage {\n  dataUrl: string\n  blob: Blob\n  width: number\n  height: number\n  size: number\n  format: string\n}\n\nexport interface CropArea {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\nexport class ImageProcessor {\n  // Standard profile picture sizes\n  static readonly PROFILE_SIZE = 200 // 200x200px standard\n  static readonly THUMBNAIL_SIZE = 64 // 64x64px thumbnail\n  static readonly MAX_FILE_SIZE = 2 * 1024 * 1024 // 2MB max\n  static readonly SUPPORTED_FORMATS = ['image/jpeg', 'image/png', 'image/webp']\n  static readonly OUTPUT_FORMAT = 'image/jpeg'\n  static readonly OUTPUT_QUALITY = 0.85\n\n  /**\n   * Process uploaded file into profile picture\n   */\n  static async processProfilePicture(file: File): Promise<ProcessedImage> {\n    // Validate file\n    this.validateFile(file)\n\n    // Load image\n    const img = await this.loadImage(file)\n    \n    // Auto-crop to square (largest centered square)\n    const cropArea = this.calculateSquareCrop(img.width, img.height)\n    \n    // Resize and compress\n    const processed = await this.resizeAndCompress(img, cropArea, this.PROFILE_SIZE)\n    \n    return processed\n  }\n\n  /**\n   * Create thumbnail from processed image\n   */\n  static async createThumbnail(processedImage: ProcessedImage): Promise<ProcessedImage> {\n    const img = await this.loadImageFromDataUrl(processedImage.dataUrl)\n    const cropArea = { x: 0, y: 0, width: img.width, height: img.height }\n    return this.resizeAndCompress(img, cropArea, this.THUMBNAIL_SIZE)\n  }\n\n  /**\n   * Process image with custom crop area\n   */\n  static async processWithCrop(file: File, cropArea: CropArea): Promise<ProcessedImage> {\n    this.validateFile(file)\n    const img = await this.loadImage(file)\n    return this.resizeAndCompress(img, cropArea, this.PROFILE_SIZE)\n  }\n\n  /**\n   * Validate uploaded file\n   */\n  private static validateFile(file: File): void {\n    if (!this.SUPPORTED_FORMATS.includes(file.type)) {\n      throw new Error(`Unsupported file format. Please use: ${this.SUPPORTED_FORMATS.join(', ')}`)\n    }\n\n    if (file.size > this.MAX_FILE_SIZE) {\n      throw new Error(`File too large. Maximum size: ${Math.round(this.MAX_FILE_SIZE / 1024 / 1024)}MB`)\n    }\n  }\n\n  /**\n   * Load image from file\n   */\n  private static loadImage(file: File): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      const url = URL.createObjectURL(file)\n      \n      img.onload = () => {\n        URL.revokeObjectURL(url)\n        resolve(img)\n      }\n      \n      img.onerror = () => {\n        URL.revokeObjectURL(url)\n        reject(new Error('Failed to load image'))\n      }\n      \n      img.src = url\n    })\n  }\n\n  /**\n   * Load image from data URL\n   */\n  private static loadImageFromDataUrl(dataUrl: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      \n      img.onload = () => resolve(img)\n      img.onerror = () => reject(new Error('Failed to load image from data URL'))\n      \n      img.src = dataUrl\n    })\n  }\n\n  /**\n   * Calculate the largest centered square crop area\n   */\n  private static calculateSquareCrop(width: number, height: number): CropArea {\n    const size = Math.min(width, height)\n    const x = (width - size) / 2\n    const y = (height - size) / 2\n    \n    return { x, y, width: size, height: size }\n  }\n\n  /**\n   * Resize image and compress\n   */\n  private static async resizeAndCompress(\n    img: HTMLImageElement, \n    cropArea: CropArea, \n    targetSize: number\n  ): Promise<ProcessedImage> {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    \n    if (!ctx) {\n      throw new Error('Canvas context not available')\n    }\n\n    // Set canvas size to target dimensions\n    canvas.width = targetSize\n    canvas.height = targetSize\n\n    // Enable image smoothing for better quality\n    ctx.imageSmoothingEnabled = true\n    ctx.imageSmoothingQuality = 'high'\n\n    // Draw cropped and resized image\n    ctx.drawImage(\n      img,\n      cropArea.x, cropArea.y, cropArea.width, cropArea.height, // Source\n      0, 0, targetSize, targetSize // Destination\n    )\n\n    // Convert to blob\n    const blob = await new Promise<Blob>((resolve, reject) => {\n      canvas.toBlob(\n        (blob) => {\n          if (blob) {\n            resolve(blob)\n          } else {\n            reject(new Error('Failed to create blob'))\n          }\n        },\n        this.OUTPUT_FORMAT,\n        this.OUTPUT_QUALITY\n      )\n    })\n\n    // Get data URL\n    const dataUrl = canvas.toDataURL(this.OUTPUT_FORMAT, this.OUTPUT_QUALITY)\n\n    return {\n      dataUrl,\n      blob,\n      width: targetSize,\n      height: targetSize,\n      size: blob.size,\n      format: this.OUTPUT_FORMAT\n    }\n  }\n\n  /**\n   * Convert blob to base64 string for storage\n   */\n  static async blobToBase64(blob: Blob): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => {\n        const result = reader.result as string\n        // Remove data URL prefix to get just the base64 data\n        const base64 = result.split(',')[1]\n        resolve(base64)\n      }\n      reader.onerror = () => reject(new Error('Failed to convert blob to base64'))\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  /**\n   * Convert base64 string back to data URL\n   */\n  static base64ToDataUrl(base64: string, format: string = this.OUTPUT_FORMAT): string {\n    return `data:${format};base64,${base64}`\n  }\n\n  /**\n   * Get formatted file size string\n   */\n  static formatFileSize(bytes: number): string {\n    if (bytes === 0) return '0 B'\n    \n    const k = 1024\n    const sizes = ['B', 'KB', 'MB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i]\n  }\n\n  /**\n   * Check if image dimensions are suitable for profile picture\n   */\n  static validateImageDimensions(width: number, height: number): void {\n    const minSize = 100\n    const maxSize = 4000\n    \n    if (width < minSize || height < minSize) {\n      throw new Error(`Image too small. Minimum size: ${minSize}x${minSize}px`)\n    }\n    \n    if (width > maxSize || height > maxSize) {\n      throw new Error(`Image too large. Maximum size: ${maxSize}x${maxSize}px`)\n    }\n  }\n\n  /**\n   * Generate avatar initials as fallback\n   */\n  static generateAvatarInitials(name: string): string {\n    return name\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase())\n      .join('')\n      .substring(0, 2)\n  }\n\n  /**\n   * Generate gradient avatar background\n   */\n  static generateAvatarGradient(seed: string): string {\n    // Simple hash function for consistent colors\n    let hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      const char = seed.charCodeAt(i)\n      hash = ((hash << 5) - hash) + char\n      hash = hash & hash // Convert to 32-bit integer\n    }\n    \n    // Generate two colors based on hash\n    const hue1 = Math.abs(hash % 360)\n    const hue2 = (hue1 + 60) % 360\n    \n    return `linear-gradient(135deg, hsl(${hue1}, 70%, 50%), hsl(${hue2}, 70%, 70%))`\n  }\n}","import React, { useEffect } from 'react'\nimport { usePostStore, TorrentPost } from '../stores/postStore'\nimport { useContactStore } from '../stores/contactStore'\nimport { ImageProcessor } from '../lib/imageProcessor'\n\nconst PostTimeline: React.FC = () => {\n  const { posts, loading, loadPostsFromContacts } = usePostStore()\n  const { loadContacts } = useContactStore()\n\n  useEffect(() => {\n    // Load contacts and their posts\n    loadContacts()\n    loadPostsFromContacts()\n  }, [loadContacts, loadPostsFromContacts])\n\n\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Loading timeline...</span>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {posts.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">🌱</div>\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            No posts yet\n          </h3>\n          <p className=\"text-gray-500 dark:text-gray-400\">\n            Be the first to seed a post on the swarm!\n          </p>\n        </div>\n      ) : (\n        posts.map((post: TorrentPost) => (\n          <PostCard key={post.id} post={post} />\n        ))\n      )}\n    </div>\n  )\n}\n\ninterface PostCardProps {\n  post: TorrentPost\n}\n\nconst PostCard: React.FC<PostCardProps> = ({ post }) => {\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700 p-6\">\n      {/* Post header */}\n      <div className=\"flex items-center space-x-3 mb-4\">\n        <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center text-white font-semibold\">\n          {post.authorAvatar ? (\n            <img \n              src={ImageProcessor.base64ToDataUrl(post.authorAvatar)}\n              alt={post.author}\n              className=\"w-10 h-10 rounded-full object-cover\"\n            />\n          ) : (\n            post.author.charAt(0).toUpperCase()\n          )}\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"flex items-center space-x-2\">\n            <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n              {post.authorDisplayName || post.author}\n            </h3>\n            <span className=\"text-gray-500 dark:text-gray-400\">@{post.author}</span>\n          </div>\n          <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n            <span>{formatTimeAgo(post.createdAt)}</span>\n            {post.isSeeding && (\n              <span className=\"flex items-center text-green-600 dark:text-green-400\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-1\"></span>\n                Seeding\n              </span>\n            )}\n            {post.magnetUri && (\n              <span className=\"flex items-center text-blue-600 dark:text-blue-400\">\n                🧲 Torrent\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Post content */}\n      {post.content && (\n        <div className=\"mb-4\">\n          <p className=\"text-gray-900 dark:text-gray-100 whitespace-pre-line\">\n            {post.content}\n          </p>\n        </div>\n      )}\n\n      {/* Post images */}\n      {post.images && post.images.length > 0 && (\n        <div className={`mb-4 grid gap-2 ${\n          post.images.length === 1 ? 'grid-cols-1' :\n          post.images.length === 2 ? 'grid-cols-2' :\n          post.images.length === 3 ? 'grid-cols-2' :\n          'grid-cols-2'\n        }`}>\n          {post.images.map((image, index) => (\n            <div \n              key={image.id} \n              className={`${\n                post.images!.length === 3 && index === 0 ? 'col-span-2' : ''\n              }`}\n            >\n              <img\n                src={ImageProcessor.base64ToDataUrl(image.data)}\n                alt={image.filename}\n                className=\"w-full h-64 object-cover rounded-lg border border-gray-200 dark:border-gray-600 cursor-pointer hover:opacity-90 transition-opacity\"\n                onClick={() => {\n                  // TODO: Open image in modal/lightbox\n                  window.open(ImageProcessor.base64ToDataUrl(image.data), '_blank')\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Post tags */}\n      {post.tags && post.tags.length > 0 && (\n        <div className=\"mb-4\">\n          <div className=\"flex flex-wrap gap-2\">\n            {post.tags.map((tag) => (\n              <span\n                key={tag}\n                className=\"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full\"\n              >\n                #{tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Post actions */}\n      <div className=\"flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center space-x-4\">\n          <button className=\"flex items-center space-x-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n            </svg>\n            <span className=\"text-sm\">Like</span>\n          </button>\n          \n          <button className=\"flex items-center space-x-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n            <span className=\"text-sm\">Reply</span>\n          </button>\n\n          <button className=\"flex items-center space-x-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\n            </svg>\n            <span className=\"text-sm\">Share</span>\n          </button>\n        </div>\n\n        {post.magnetUri && (\n          <button \n            onClick={() => navigator.clipboard.writeText(post.magnetUri!)}\n            className=\"text-xs text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            title=\"Copy magnet link\"\n          >\n            🧲 Copy Magnet\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst formatTimeAgo = (dateString: string) => {\n  const date = new Date(dateString)\n  const now = new Date()\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000)\n\n  if (diffInSeconds < 60) return 'just now'\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)}d ago`\n  \n  return date.toLocaleDateString()\n}\n\nexport default PostTimeline","import { useEffect, useState } from 'react'\nimport { useCore } from '@/lib/core'\nimport CreatePost from '@/components/CreatePost'\nimport PostTimeline from '@/components/PostTimeline'\nimport { useProfileStore } from '@/stores/profileStore'\n\nconst HomePage: React.FC = () => {\n  const { core, loading: coreLoading } = useCore()\n  const { currentProfile } = useProfileStore()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (core) {\n      setLoading(false)\n    }\n  }, [core])\n\n  if (coreLoading || loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"text-gray-600 dark:text-gray-300\">Loading SnartNet...</div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n        SnartNet\n      </h1>\n      <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-8\">\n        Decentralized social media, powered by swarms.\n      </p>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2\">\n          {/* Create Post Section */}\n          {currentProfile && <CreatePost />}\n          \n          {/* Timeline */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h2 className=\"text-xl font-semibold mb-6 flex items-center\">\n              <span>Timeline</span>\n              <span className=\"ml-2 text-sm text-gray-500 dark:text-gray-400\">(Torrent-seeded posts)</span>\n            </h2>\n            <PostTimeline />\n          </div>\n        </div>\n        \n        <div className=\"space-y-6\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">How It Works</h2>\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n              Every post is a torrent seed! Your content is distributed across the swarm, \n              making it censorship-resistant and decentralized.\n            </p>\n            <div className=\"space-y-2\">\n              <p className=\"text-sm text-gray-500\">\n                🌱 Posts are seeded as torrents\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                📷 Images included in torrent files\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                🔐 Content cryptographically signed\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                🤝 Shared through your Ring of Trust\n              </p>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-semibold mb-3\">Features</h3>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Profile pictures & posts</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Image upload & processing</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Post torrent seeding</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Chronological timeline</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-yellow-500 rounded-full mr-2\"></span>\n                <span>P2P post sharing (WIP)</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage\n","import { useState } from 'react'\nimport { getCore } from '@/lib/core'\nimport { useProfileStore } from '@/stores/profileStore'\n\nexport default function CreateProfile() {\n  const [username, setUsername] = useState('')\n  const [displayName, setDisplayName] = useState('')\n  const [bio, setBio] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n\n  const { setCurrentProfile, setLoading, setError: setStoreError } = useProfileStore()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!username.trim()) {\n      setError('Username is required')\n      return\n    }\n\n    setIsLoading(true)\n    setError(null)\n    setSuccess(null)\n    setStoreError(null)\n    setLoading(true)\n\n    try {\n      console.log('[CreateProfile] Starting profile creation...')\n      \n      // Get the core instance\n      const core = await getCore()\n      console.log('[CreateProfile] Core initialized')\n\n      // Create profile using WASM core\n      const magnetUri = await core.createProfile(\n        username.trim(),\n        displayName.trim() || undefined,\n        bio.trim() || undefined\n      )\n      console.log('[CreateProfile] Profile created with magnet URI:', magnetUri)\n\n      // Get the created profile\n      const profile = await core.getCurrentProfile()\n      console.log('[CreateProfile] Retrieved profile:', profile)\n\n      if (profile) {\n        // Update the store\n        setCurrentProfile(profile)\n        setSuccess(`Profile created successfully! Magnet URI: ${magnetUri}`)\n        \n        // Clear form\n        setUsername('')\n        setDisplayName('')\n        setBio('')\n        \n        console.log('[CreateProfile] Profile creation completed successfully')\n      } else {\n        throw new Error('Failed to retrieve created profile')\n      }\n\n    } catch (err) {\n      console.error('[CreateProfile] Error creating profile:', err)\n      const errorMessage = err instanceof Error ? err.message : 'Failed to create profile'\n      setError(errorMessage)\n      setStoreError(errorMessage)\n    } finally {\n      setIsLoading(false)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n          Create Your Profile\n        </h2>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Username *\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter your username\"\n              disabled={isLoading}\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Display Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"displayName\"\n              value={displayName}\n              onChange={(e) => setDisplayName(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Your display name (optional)\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Bio\n            </label>\n            <textarea\n              id=\"bio\"\n              value={bio}\n              onChange={(e) => setBio(e.target.value)}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Tell us about yourself (optional)\"\n              disabled={isLoading}\n            />\n          </div>\n\n          {error && (\n            <div className=\"p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md\">\n              <p className=\"text-red-700 dark:text-red-300 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {success && (\n            <div className=\"p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md\">\n              <p className=\"text-green-700 dark:text-green-300 text-sm\">{success}</p>\n            </div>\n          )}\n\n          <button\n            type=\"submit\"\n            disabled={isLoading || !username.trim()}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-medium py-2 px-4 rounded-lg transition-colors disabled:cursor-not-allowed\"\n          >\n            {isLoading ? (\n              <span className=\"flex items-center justify-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Creating Profile...\n              </span>\n            ) : (\n              'Create Profile'\n            )}\n          </button>\n        </form>\n\n        <div className=\"mt-6 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n            🔐 What happens when you create a profile?\n          </h3>\n          <ul className=\"text-xs text-gray-600 dark:text-gray-400 space-y-1\">\n            <li>• A new Ed25519 cryptographic key pair is generated</li>\n            <li>• Your profile is signed with your private key</li>\n            <li>• A magnet URI is created for peer-to-peer sharing</li>\n            <li>• Your private keys stay in your browser (never uploaded)</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport { ImageProcessor } from '../lib/imageProcessor'\n\ninterface ProfileAvatarProps {\n  profilePicture?: string\n  username?: string\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  className?: string\n  showOnlineStatus?: boolean\n  isOnline?: boolean\n  alt?: string\n}\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({\n  profilePicture,\n  username = 'User',\n  size = 'md',\n  className = '',\n  showOnlineStatus = false,\n  isOnline = false,\n  alt\n}) => {\n  const sizeClasses = {\n    xs: 'w-6 h-6',\n    sm: 'w-8 h-8',\n    md: 'w-12 h-12',\n    lg: 'w-16 h-16',\n    xl: 'w-24 h-24'\n  }\n\n  const statusSizeClasses = {\n    xs: 'w-1.5 h-1.5 bottom-0 right-0',\n    sm: 'w-2 h-2 bottom-0 right-0',\n    md: 'w-3 h-3 bottom-0.5 right-0.5',\n    lg: 'w-4 h-4 bottom-1 right-1',\n    xl: 'w-6 h-6 bottom-1 right-1'\n  }\n\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase())\n      .slice(0, 2)\n      .join('')\n  }\n\n  const avatarContent = profilePicture ? (\n    <img\n      src={ImageProcessor.base64ToDataUrl(profilePicture)}\n      alt={alt || `${username}'s avatar`}\n      className={`${sizeClasses[size]} rounded-full object-cover ${className}`}\n    />\n  ) : (\n    <div \n      className={`${sizeClasses[size]} rounded-full bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center text-white font-semibold ${className}`}\n      title={username}\n    >\n      <span className={`${\n        size === 'xs' ? 'text-xs' :\n        size === 'sm' ? 'text-sm' :\n        size === 'md' ? 'text-base' :\n        size === 'lg' ? 'text-lg' :\n        'text-xl'\n      }`}>\n        {getInitials(username)}\n      </span>\n    </div>\n  )\n\n  return (\n    <div className=\"relative inline-block\">\n      {avatarContent}\n      \n      {/* Online status indicator */}\n      {showOnlineStatus && (\n        <div\n          className={`absolute ${statusSizeClasses[size]} ${\n            isOnline ? 'bg-green-400' : 'bg-gray-400'\n          } border-2 border-white dark:border-gray-800 rounded-full`}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ProfileAvatar","import React, { useState, useRef, useCallback } from 'react'\nimport { ImageProcessor, type ProcessedImage } from '../lib/imageProcessor'\nimport { useProfileStore } from '../stores/profileStore'\n\ninterface ProfilePictureUploaderProps {\n  onClose?: () => void\n  onSuccess?: (imageData: string) => void\n}\n\nconst ProfilePictureUploader: React.FC<ProfilePictureUploaderProps> = ({ onClose, onSuccess }) => {\n  const { currentProfile, updateProfilePicture } = useProfileStore()\n  const fileInputRef = useRef<HTMLInputElement>(null)\n  \n  const [dragActive, setDragActive] = useState(false)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [preview, setPreview] = useState<string | null>(null)\n  const [processedImage, setProcessedImage] = useState<ProcessedImage | null>(null)\n  const [status, setStatus] = useState('')\n  const [uploadProgress, setUploadProgress] = useState(0)\n\n  const resetState = () => {\n    setPreview(null)\n    setProcessedImage(null)\n    setStatus('')\n    setUploadProgress(0)\n    if (fileInputRef.current) {\n      fileInputRef.current.value = ''\n    }\n  }\n\n  const handleFiles = useCallback(async (files: FileList | File[]) => {\n    const file = files[0]\n    if (!file) return\n\n    try {\n      setIsProcessing(true)\n      setStatus('📤 Processing image...')\n      setUploadProgress(25)\n\n      // Process the image\n      const processed = await ImageProcessor.processProfilePicture(file)\n      setUploadProgress(75)\n      \n      // Create thumbnail (validation step)\n      await ImageProcessor.createThumbnail(processed)\n      setUploadProgress(90)\n\n      setProcessedImage(processed)\n      setPreview(processed.dataUrl)\n      setStatus(`✅ Image processed successfully! Size: ${ImageProcessor.formatFileSize(processed.size)}`)\n      setUploadProgress(100)\n\n      console.log('Image processed:', {\n        originalSize: file.size,\n        processedSize: processed.size,\n        dimensions: `${processed.width}x${processed.height}`,\n        format: processed.format\n      })\n\n    } catch (error) {\n      console.error('Image processing error:', error)\n      setStatus(`❌ Error: ${error instanceof Error ? error.message : 'Unknown error'}`)\n      resetState()\n    } finally {\n      setIsProcessing(false)\n    }\n  }, [])\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (files && files.length > 0) {\n      handleFiles(files)\n    }\n  }\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragActive(false)\n\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      handleFiles(e.dataTransfer.files)\n    }\n  }, [handleFiles])\n\n  const handleDrag = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true)\n    } else if (e.type === 'dragleave') {\n      setDragActive(false)\n    }\n  }, [])\n\n  const handleSave = async () => {\n    if (!processedImage || !currentProfile) {\n      setStatus('❌ No image to save or no current profile')\n      return\n    }\n\n    try {\n      setIsProcessing(true)\n      setStatus('💾 Saving profile picture...')\n\n      // Convert to base64 for storage\n      const base64 = await ImageProcessor.blobToBase64(processedImage.blob)\n      \n      // Create thumbnail and convert to base64\n      const thumbnail = await ImageProcessor.createThumbnail(processedImage)\n      const thumbnailBase64 = await ImageProcessor.blobToBase64(thumbnail.blob)\n\n      // Update profile store\n      updateProfilePicture(currentProfile.username, base64, thumbnailBase64)\n\n      setStatus('✅ Profile picture saved successfully!')\n      \n      // Call success callback\n      if (onSuccess) {\n        onSuccess(processedImage.dataUrl)\n      }\n\n      // Close after delay\n      setTimeout(() => {\n        if (onClose) {\n          onClose()\n        }\n      }, 1500)\n\n    } catch (error) {\n      console.error('Save error:', error)\n      setStatus(`❌ Failed to save: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleRemove = () => {\n    if (!currentProfile) return\n    \n    if (confirm('Remove your profile picture?')) {\n      // Clear profile picture\n      updateProfilePicture(currentProfile.username, '', '')\n      \n      // Remove from localStorage\n      localStorage.removeItem(`profile-picture-${currentProfile.username}`)\n      localStorage.removeItem(`profile-picture-thumb-${currentProfile.username}`)\n      \n      setStatus('✅ Profile picture removed')\n      \n      if (onSuccess) {\n        onSuccess('')\n      }\n      \n      setTimeout(() => {\n        if (onClose) {\n          onClose()\n        }\n      }, 1000)\n    }\n  }\n\n  const getProgressWidth = () => {\n    if (uploadProgress >= 100) return 'w-full'\n    if (uploadProgress >= 90) return 'w-11/12'\n    if (uploadProgress >= 75) return 'w-3/4'\n    if (uploadProgress >= 50) return 'w-1/2'\n    if (uploadProgress >= 25) return 'w-1/4'\n    return 'w-0'\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n          Profile Picture\n        </h3>\n        {onClose && (\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n          >\n            ✕\n          </button>\n        )}\n      </div>\n\n      {/* Upload Area */}\n      {!preview && (\n        <div\n          className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\n            dragActive\n              ? 'border-blue-400 bg-blue-50 dark:bg-blue-900/20'\n              : 'border-gray-300 dark:border-gray-600 hover:border-gray-400 dark:hover:border-gray-500'\n          }`}\n          onDragEnter={handleDrag}\n          onDragLeave={handleDrag}\n          onDragOver={handleDrag}\n          onDrop={handleDrop}\n        >\n          <div className=\"text-4xl mb-4\">📷</div>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n            Drag and drop an image here, or click to select\n          </p>\n          <button\n            onClick={() => fileInputRef.current?.click()}\n            disabled={isProcessing}\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white rounded-lg transition-colors\"\n          >\n            Choose Image\n          </button>\n          \n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileSelect}\n            className=\"hidden\"\n            aria-label=\"Select profile picture file\"\n            title=\"Select profile picture file\"\n          />\n          \n          <div className=\"mt-4 text-xs text-gray-500 dark:text-gray-400\">\n            <p>Supported: JPEG, PNG, WebP</p>\n            <p>Max size: 2MB • Auto-cropped to square</p>\n          </div>\n        </div>\n      )}\n\n      {/* Preview */}\n      {preview && (\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-center\">\n            <div className=\"relative\">\n              <img\n                src={preview}\n                alt=\"Profile preview\"\n                className=\"w-32 h-32 rounded-full object-cover border-4 border-gray-200 dark:border-gray-600\"\n              />\n              {isProcessing && (\n                <div className=\"absolute inset-0 bg-black bg-opacity-50 rounded-full flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-white\"></div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {processedImage && (\n            <div className=\"text-center text-sm text-gray-600 dark:text-gray-400\">\n              <p>Size: {ImageProcessor.formatFileSize(processedImage.size)}</p>\n              <p>Dimensions: {processedImage.width}×{processedImage.height}px</p>\n            </div>\n          )}\n\n          <div className=\"flex gap-2\">\n            <button\n              onClick={handleSave}\n              disabled={isProcessing || !processedImage}\n              className=\"flex-1 px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white rounded-lg transition-colors\"\n            >\n              {isProcessing ? '💾 Saving...' : '💾 Save'}\n            </button>\n            <button\n              onClick={resetState}\n              disabled={isProcessing}\n              className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 disabled:bg-gray-400 text-white rounded-lg transition-colors\"\n            >\n              🔄 Try Again\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Progress Bar */}\n      {isProcessing && uploadProgress > 0 && (\n        <div className=\"mt-4\">\n          <div className=\"bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div\n              className={`bg-blue-600 h-2 rounded-full transition-all duration-300 ${getProgressWidth()}`}\n            ></div>\n          </div>\n        </div>\n      )}\n\n      {/* Remove existing picture option */}\n      {currentProfile?.profilePicture && !preview && (\n        <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <img\n              src={ImageProcessor.base64ToDataUrl(currentProfile.profilePicture)}\n              alt=\"Current profile\"\n              className=\"w-16 h-16 rounded-full object-cover border-2 border-gray-200 dark:border-gray-600\"\n            />\n          </div>\n          <button\n            onClick={handleRemove}\n            className=\"w-full px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors\"\n          >\n            🗑️ Remove Current Picture\n          </button>\n        </div>\n      )}\n\n      {/* Status Message */}\n      {status && (\n        <div className={`mt-4 p-3 rounded-lg text-sm ${\n          status.startsWith('✅') ? 'bg-green-50 dark:bg-green-900/20 text-green-800 dark:text-green-200' :\n          status.startsWith('❌') ? 'bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200' :\n          'bg-blue-50 dark:bg-blue-900/20 text-blue-800 dark:text-blue-200'\n        }`}>\n          {status}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfilePictureUploader","import React, { useState } from 'react';\nimport { useProfileStore, ProfilePost } from '../stores/profileStore';\n\nconst ProfilePosts: React.FC = () => {\n  const { currentProfile, addProfilePost, removeProfilePost } = useProfileStore();\n  const [postContent, setPostContent] = useState('');\n  const [posting, setPosting] = useState(false);\n\n  if (!currentProfile) return null;\n\n  const handlePost = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!postContent.trim()) return;\n    setPosting(true);\n    addProfilePost(currentProfile.username, postContent.trim());\n    setPostContent('');\n    setPosting(false);\n  };\n\n  return (\n    <div className=\"w-full max-w-xl mx-auto mt-8\">\n      <form onSubmit={handlePost} className=\"mb-6 flex flex-col gap-2\">\n        <textarea\n          className=\"w-full p-3 border border-gray-300 dark:border-gray-700 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white resize-vertical\"\n          rows={3}\n          placeholder=\"What's on your mind?\"\n          value={postContent}\n          onChange={e => setPostContent(e.target.value)}\n          disabled={posting}\n        />\n        <button\n          type=\"submit\"\n          className=\"self-end px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg disabled:bg-gray-400\"\n          disabled={posting || !postContent.trim()}\n        >\n          {posting ? 'Posting...' : 'Post'}\n        </button>\n      </form>\n      <div className=\"space-y-4\">\n        {currentProfile.posts && currentProfile.posts.length > 0 ? (\n          currentProfile.posts.map((post: ProfilePost) => (\n            <div key={post.id} className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4 relative\">\n              <p className=\"text-gray-900 dark:text-gray-100 mb-2 whitespace-pre-line\">{post.content}</p>\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 flex justify-between items-center\">\n                <span>{new Date(post.createdAt).toLocaleString()}</span>\n                <button\n                  className=\"text-red-500 hover:text-red-700 text-xs ml-2\"\n                  onClick={() => removeProfilePost(currentProfile.username, post.id)}\n                  title=\"Delete post\"\n                >\n                  🗑️\n                </button>\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">No posts yet.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePosts;\n","import React, { useState } from 'react';\nimport { useProfileStore } from '../stores/profileStore';\nimport ProfileAvatar from './ProfileAvatar';\nimport ProfilePictureUploader from './ProfilePictureUploader';\nimport ProfilePosts from './ProfilePosts';\n\nconst ProfileDisplay: React.FC = () => {\n  const { currentProfile } = useProfileStore();\n  const [showUploader, setShowUploader] = useState(false);\n\n  if (!currentProfile) {\n    return (\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 text-center\">\n        <p className=\"text-gray-700 dark:text-gray-300\">No profile loaded.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 flex flex-col items-center\">\n      <div className=\"mb-4 relative\">\n        <ProfileAvatar\n          profilePicture={currentProfile.profilePicture}\n          username={currentProfile.username}\n          size=\"xl\"\n        />\n        <button\n          className=\"absolute bottom-0 right-0 bg-blue-600 hover:bg-blue-700 text-white rounded-full p-2 shadow-lg border-2 border-white dark:border-gray-800\"\n          onClick={() => setShowUploader(true)}\n          title=\"Change profile picture\"\n        >\n          <span role=\"img\" aria-label=\"Edit\">✏️</span>\n        </button>\n      </div>\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-1\">\n          {currentProfile.displayName || currentProfile.username}\n        </h2>\n        <p className=\"text-gray-500 dark:text-gray-300 mb-2\">@{currentProfile.username}</p>\n        {currentProfile.bio && (\n          <p className=\"text-gray-700 dark:text-gray-200 mb-2 max-w-xl mx-auto\">{currentProfile.bio}</p>\n        )}\n      </div>\n\n      {showUploader && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-900 rounded-lg shadow-lg p-4 relative w-full max-w-lg\">\n            <button\n              className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              onClick={() => setShowUploader(false)}\n              title=\"Close\"\n            >\n              ✕\n            </button>\n            <ProfilePictureUploader onClose={() => setShowUploader(false)} />\n          </div>\n        </div>\n      )}\n      {/* Profile posts section */}\n      <div className=\"w-full mt-8\">\n        <ProfilePosts />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileDisplay;\n\n","interface ProgressBarProps {\n  progress: number\n  className?: string\n}\n\nexport default function ProgressBar({ progress, className = \"\" }: ProgressBarProps) {\n  const progressPercentage = Math.max(0, Math.min(100, progress * 100))\n  \n  // Create dynamic width classes based on progress\n  const getProgressClass = () => {\n    if (progressPercentage === 0) return 'w-0'\n    if (progressPercentage >= 100) return 'w-full'\n    if (progressPercentage >= 75) return 'w-3/4'\n    if (progressPercentage >= 50) return 'w-1/2'\n    if (progressPercentage >= 25) return 'w-1/4'\n    return 'w-1/12'\n  }\n  \n  return (\n    <div className={`w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2 overflow-hidden ${className}`}>\n      <div className={`bg-blue-600 h-2 rounded-full transition-all duration-300 ${getProgressClass()}`} />\n    </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { getTorrentService, TorrentEvent } from '@/lib/torrent'\nimport ProgressBar from '@/components/ProgressBar'\n\ninterface TorrentStats {\n  torrents: number\n  downloadSpeed: number\n  uploadSpeed: number\n  downloaded: number\n  uploaded: number\n  peers: number\n}\n\ninterface ActiveTorrent {\n  infoHash: string\n  name: string | null\n  magnetURI: string\n  progress: number\n  downloadSpeed: number\n  uploadSpeed: number\n  numPeers: number\n  downloaded: number\n  uploaded: number\n}\n\nexport default function WebTorrentStatus() {\n  const [stats, setStats] = useState<TorrentStats>({\n    torrents: 0, downloadSpeed: 0, uploadSpeed: 0, downloaded: 0, uploaded: 0, peers: 0\n  })\n  const [activeTorrents, setActiveTorrents] = useState<ActiveTorrent[]>([])\n  const [events, setEvents] = useState<string[]>([])\n  const [isConnected, setIsConnected] = useState(false)\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout\n\n    const initializeTorrent = () => {\n      try {\n        const torrentService = getTorrentService()\n        setIsConnected(true)\n\n        // Subscribe to torrent events\n        const unsubscribe = torrentService.onEvent((event: TorrentEvent) => {\n          const timestamp = new Date().toLocaleTimeString()\n          \n          switch (event.type) {\n            case 'seeding-started':\n              setEvents(prev => [`[${timestamp}] ✅ Started seeding profile: ${event.profile.username}`, ...prev.slice(0, 9)])\n              break\n            case 'peer-connected':\n              setEvents(prev => [`[${timestamp}] 🔗 Peer connected: ${event.peerId}`, ...prev.slice(0, 9)])\n              break\n            case 'upload-progress':\n              // Don't log every upload progress to avoid spam\n              if (Math.random() < 0.1) { // Log ~10% of upload events\n                setEvents(prev => [`[${timestamp}] ⬆️ Upload: ${formatBytes(event.uploadSpeed)}/s`, ...prev.slice(0, 9)])\n              }\n              break\n            case 'profile-downloaded':\n              setEvents(prev => [`[${timestamp}] ⬇️ Downloaded profile: ${event.profile.username}`, ...prev.slice(0, 9)])\n              break\n            case 'download-progress':\n              if (Math.random() < 0.1) { // Log ~10% of download events\n                setEvents(prev => [`[${timestamp}] ⬇️ Progress: ${(event.progress * 100).toFixed(1)}%`, ...prev.slice(0, 9)])\n              }\n              break\n            case 'error':\n              setEvents(prev => [`[${timestamp}] ❌ Error: ${event.error}`, ...prev.slice(0, 9)])\n              break\n          }\n        })\n\n        // Update stats every 2 seconds\n        interval = setInterval(() => {\n          setStats(torrentService.getStats())\n          setActiveTorrents(torrentService.getActiveTorrents())\n        }, 2000)\n\n        // Initial update\n        setStats(torrentService.getStats())\n        setActiveTorrents(torrentService.getActiveTorrents())\n\n        return unsubscribe\n      } catch (error) {\n        console.error('Failed to initialize torrent service:', error)\n        setIsConnected(false)\n        setEvents(prev => [`Failed to initialize WebTorrent: ${error}`, ...prev.slice(0, 9)])\n      }\n    }\n\n    const unsubscribe = initializeTorrent()\n\n    return () => {\n      if (interval) clearInterval(interval)\n      if (unsubscribe) unsubscribe()\n    }\n  }, [])\n\n  const formatBytes = (bytes: number): string => {\n    if (bytes === 0) return '0 B'\n    const k = 1024\n    const sizes = ['B', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i]\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n          WebTorrent Client\n        </h2>\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n            {isConnected ? 'Connected' : 'Disconnected'}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n        <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-3\">\n          <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n            {stats.torrents}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Active Torrents</div>\n        </div>\n\n        <div className=\"bg-green-50 dark:bg-green-900/20 rounded-lg p-3\">\n          <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n            {stats.peers}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Connected Peers</div>\n        </div>\n\n        <div className=\"bg-purple-50 dark:bg-purple-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-purple-600 dark:text-purple-400\">\n            ⬆️ {formatBytes(stats.uploadSpeed)}/s\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Upload Speed</div>\n        </div>\n\n        <div className=\"bg-orange-50 dark:bg-orange-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-orange-600 dark:text-orange-400\">\n            ⬇️ {formatBytes(stats.downloadSpeed)}/s\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Download Speed</div>\n        </div>\n\n        <div className=\"bg-indigo-50 dark:bg-indigo-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-indigo-600 dark:text-indigo-400\">\n            {formatBytes(stats.uploaded)}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Uploaded</div>\n        </div>\n\n        <div className=\"bg-pink-50 dark:bg-pink-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-pink-600 dark:text-pink-400\">\n            {formatBytes(stats.downloaded)}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Downloaded</div>\n        </div>\n      </div>\n\n      {activeTorrents.length > 0 && (\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\n            Active Torrents\n          </h3>\n          <div className=\"space-y-2\">\n            {activeTorrents.map((torrent) => (\n              <div key={torrent.infoHash} className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"font-medium text-gray-900 dark:text-white truncate\">\n                    {torrent.name || 'Unnamed Torrent'}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {(torrent.progress * 100).toFixed(1)}%\n                  </div>\n                </div>\n                <ProgressBar progress={torrent.progress} className=\"mb-2\" />\n                <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n                  <span>Peers: {torrent.numPeers}</span>\n                  <span>⬆️ {formatBytes(torrent.uploadSpeed)}/s ⬇️ {formatBytes(torrent.downloadSpeed)}/s</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\n          Recent Activity\n        </h3>\n        <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 h-48 overflow-y-auto\">\n          {events.length > 0 ? (\n            <div className=\"space-y-1\">\n              {events.map((event, index) => (\n                <div key={index} className=\"text-sm font-mono text-gray-700 dark:text-gray-300\">\n                  {event}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center text-gray-500 dark:text-gray-400 mt-16\">\n              No activity yet. Start seeding a profile to see torrent activity!\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}","import { getCore } from './core'\n\nexport interface ProfileBackup {\n  version: string\n  timestamp: string\n  profile: any\n  keypair: any\n  extendedData: any\n  contacts?: any[]\n  metadata: {\n    username: string\n    fingerprint: string\n    backupId: string\n  }\n}\n\nexport class BackupService {\n  private static readonly BACKUP_VERSION = '1.0.0'\n  private static readonly FILE_EXTENSION = '.snartnet-backup'\n\n  /**\n   * Create a complete backup of the current profile, keys, and associated data\n   */\n  static async createBackup(includeContacts: boolean = true): Promise<ProfileBackup> {\n    try {\n      const core = await getCore()\n      \n      // Get current profile\n      const profile = await core.getCurrentProfile()\n      if (!profile) {\n        throw new Error('No current profile to backup')\n      }\n\n      // Get keypair from localStorage (this is where the WASM core stores it)\n      const keypairData = localStorage.getItem('snartnet_keypair')\n      if (!keypairData) {\n        throw new Error('No keypair found for backup')\n      }\n\n      // Get extended profile data\n      const extendedData = localStorage.getItem(`profile-extended-${profile.username}`)\n      \n      // Get contacts if requested\n      let contacts = null\n      if (includeContacts) {\n        const contactsData = localStorage.getItem('snartnet-contacts')\n        contacts = contactsData ? JSON.parse(contactsData) : []\n      }\n\n      // Create backup object\n      const backup: ProfileBackup = {\n        version: this.BACKUP_VERSION,\n        timestamp: new Date().toISOString(),\n        profile: profile,\n        keypair: JSON.parse(keypairData),\n        extendedData: extendedData ? JSON.parse(extendedData) : null,\n        contacts: contacts,\n        metadata: {\n          username: profile.username,\n          fingerprint: profile.fingerprint || 'unknown',\n          backupId: this.generateBackupId()\n        }\n      }\n\n      console.log('Backup created successfully:', {\n        username: backup.metadata.username,\n        timestamp: backup.timestamp,\n        includesContacts: !!backup.contacts\n      })\n\n      return backup\n    } catch (error) {\n      console.error('Failed to create backup:', error)\n      throw new Error(`Backup creation failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  /**\n   * Download backup as a file\n   */\n  static async downloadBackup(includeContacts: boolean = true, password?: string): Promise<void> {\n    try {\n      const backup = await this.createBackup(includeContacts)\n      \n      let backupData: any = backup\n      \n      // Apply password protection if provided\n      if (password) {\n        backupData = await this.encryptBackup(backup, password)\n      }\n\n      const backupJson = JSON.stringify(backupData, null, 2)\n      const blob = new Blob([backupJson], { type: 'application/json' })\n      \n      // Create download\n      const url = URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = `${backup.metadata.username}_backup_${this.formatDateForFilename(backup.timestamp)}${this.FILE_EXTENSION}`\n      \n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      URL.revokeObjectURL(url)\n\n      console.log('Backup downloaded successfully')\n    } catch (error) {\n      console.error('Failed to download backup:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Restore profile from backup data\n   */\n  static async restoreFromBackup(backupData: any, password?: string): Promise<void> {\n    try {\n      let backup: ProfileBackup\n      \n      // Decrypt if password provided\n      if (password && backupData.encrypted) {\n        backup = await this.decryptBackup(backupData, password)\n      } else {\n        backup = backupData as ProfileBackup\n      }\n\n      // Validate backup format\n      this.validateBackup(backup)\n\n      console.log('Restoring backup:', {\n        version: backup.version,\n        username: backup.metadata.username,\n        timestamp: backup.timestamp\n      })\n\n      // Clear existing data\n      localStorage.removeItem('snartnet_keypair')\n      localStorage.removeItem('snartnet_current_profile')\n      localStorage.removeItem('snartnet-contacts')\n\n      // Restore keypair\n      localStorage.setItem('snartnet_keypair', JSON.stringify(backup.keypair))\n\n      // Restore profile\n      localStorage.setItem('snartnet_current_profile', JSON.stringify({\n        profile: backup.profile,\n        signature: backup.keypair?.signature || 'restored' // Fallback if no signature\n      }))\n\n      // Restore extended data\n      if (backup.extendedData && backup.metadata.username) {\n        localStorage.setItem(`profile-extended-${backup.metadata.username}`, JSON.stringify(backup.extendedData))\n      }\n\n      // Restore contacts\n      if (backup.contacts) {\n        localStorage.setItem('snartnet-contacts', JSON.stringify(backup.contacts))\n      }\n\n      console.log('Backup restored successfully')\n      \n      // Reload page to reinitialize with restored data\n      window.location.reload()\n    } catch (error) {\n      console.error('Failed to restore backup:', error)\n      throw new Error(`Restore failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  /**\n   * Restore from uploaded file\n   */\n  static async restoreFromFile(file: File, password?: string): Promise<void> {\n    try {\n      if (!file.name.endsWith(this.FILE_EXTENSION) && !file.name.endsWith('.json')) {\n        throw new Error('Invalid backup file format. Please select a .snartnet-backup or .json file.')\n      }\n\n      const fileContent = await this.readFileContent(file)\n      const backupData = JSON.parse(fileContent)\n      \n      await this.restoreFromBackup(backupData, password)\n    } catch (error) {\n      console.error('Failed to restore from file:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Simple encryption using built-in crypto (for basic protection)\n   */\n  private static async encryptBackup(backup: ProfileBackup, _password: string): Promise<any> {\n    // For now, just base64 encode with password hint\n    // In production, you'd want proper encryption with the password\n    // TODO: Implement proper encryption using _password\n    \n    const data = JSON.stringify(backup)\n    const encoded = btoa(unescape(encodeURIComponent(data)))\n    \n    return {\n      encrypted: true,\n      version: backup.version,\n      data: encoded,\n      hint: `Backup for ${backup.metadata.username}`,\n      timestamp: backup.timestamp\n    }\n  }\n\n  /**\n   * Simple decryption (matches encryption method)\n   */\n  private static async decryptBackup(encryptedData: any, _password: string): Promise<ProfileBackup> {\n    try {\n      // TODO: Implement proper decryption with _password\n      \n      const decoded = decodeURIComponent(escape(atob(encryptedData.data)))\n      return JSON.parse(decoded) as ProfileBackup\n    } catch (error) {\n      throw new Error('Invalid password or corrupted backup file')\n    }\n  }\n\n  /**\n   * Validate backup structure\n   */\n  private static validateBackup(backup: any): void {\n    if (!backup || typeof backup !== 'object') {\n      throw new Error('Invalid backup format')\n    }\n\n    if (!backup.version || !backup.timestamp || !backup.profile || !backup.keypair) {\n      throw new Error('Incomplete backup data')\n    }\n\n    if (!backup.metadata || !backup.metadata.username) {\n      throw new Error('Missing backup metadata')\n    }\n\n    // Check version compatibility\n    if (backup.version !== this.BACKUP_VERSION) {\n      console.warn('Backup version mismatch:', backup.version, 'vs', this.BACKUP_VERSION)\n      // For now, proceed anyway, but could add migration logic here\n    }\n  }\n\n  /**\n   * Read file content as text\n   */\n  private static readFileContent(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      \n      reader.onload = (event) => {\n        if (event.target?.result) {\n          resolve(event.target.result as string)\n        } else {\n          reject(new Error('Failed to read file'))\n        }\n      }\n      \n      reader.onerror = () => {\n        reject(new Error('File reading error'))\n      }\n      \n      reader.readAsText(file)\n    })\n  }\n\n  /**\n   * Generate unique backup ID\n   */\n  private static generateBackupId(): string {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2)\n  }\n\n  /**\n   * Format date for filename\n   */\n  private static formatDateForFilename(timestamp: string): string {\n    const date = new Date(timestamp)\n    return date.toISOString().split('T')[0].replace(/-/g, '')\n  }\n\n  /**\n   * Get backup info from file without fully restoring\n   */\n  static async getBackupInfo(file: File, password?: string): Promise<{\n    username: string\n    timestamp: string\n    version: string\n    hasContacts: boolean\n    fingerprint: string\n  }> {\n    try {\n      const content = await this.readFileContent(file)\n      let backupData = JSON.parse(content)\n      \n      // Handle encrypted backups\n      if (backupData.encrypted && password) {\n        backupData = await this.decryptBackup(backupData, password)\n      }\n      \n      return {\n        username: backupData.metadata?.username || 'Unknown',\n        timestamp: backupData.timestamp || 'Unknown',\n        version: backupData.version || 'Unknown',\n        hasContacts: Array.isArray(backupData.contacts) && backupData.contacts.length > 0,\n        fingerprint: backupData.metadata?.fingerprint || 'Unknown'\n      }\n    } catch (error) {\n      throw new Error('Failed to read backup info: ' + (error instanceof Error ? error.message : 'Unknown error'))\n    }\n  }\n}","import React, { useState, useRef } from 'react'\nimport { BackupService } from '../lib/backup'\nimport { useProfileStore } from '../stores/profileStore'\n\ninterface BackupRestoreProps {\n  onClose?: () => void\n}\n\nconst BackupRestore: React.FC<BackupRestoreProps> = ({ onClose }) => {\n  const { currentProfile } = useProfileStore()\n  const fileInputRef = useRef<HTMLInputElement>(null)\n  \n  const [activeTab, setActiveTab] = useState<'backup' | 'restore'>('backup')\n  const [includeContacts, setIncludeContacts] = useState(true)\n  const [usePassword, setUsePassword] = useState(false)\n  const [password, setPassword] = useState('')\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [status, setStatus] = useState('')\n  const [backupInfo, setBackupInfo] = useState<any>(null)\n\n  const handleBackupDownload = async () => {\n    if (!currentProfile) {\n      setStatus('❌ No profile to backup')\n      return\n    }\n\n    if (usePassword && !password.trim()) {\n      setStatus('❌ Password is required')\n      return\n    }\n\n    try {\n      setIsProcessing(true)\n      setStatus('📦 Creating backup...')\n      \n      await BackupService.downloadBackup(includeContacts, usePassword ? password : undefined)\n      \n      setStatus('✅ Backup downloaded successfully!')\n    } catch (error) {\n      console.error('Backup failed:', error)\n      setStatus(`❌ Backup failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]\n    if (!file) return\n\n    try {\n      setIsProcessing(true)\n      setStatus('📄 Reading backup file...')\n      \n      // Try to get backup info\n      const info = await BackupService.getBackupInfo(file, usePassword ? password : undefined)\n      setBackupInfo(info)\n      setStatus('📋 Backup file loaded. Review info below and click Restore.')\n    } catch (error) {\n      console.error('Failed to read backup:', error)\n      setStatus(`❌ Failed to read backup: ${error instanceof Error ? error.message : 'Unknown error'}`)\n      setBackupInfo(null)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleRestore = async () => {\n    const file = fileInputRef.current?.files?.[0]\n    if (!file) {\n      setStatus('❌ Please select a backup file')\n      return\n    }\n\n    if (usePassword && !password.trim()) {\n      setStatus('❌ Password is required')\n      return\n    }\n\n    if (!confirm('⚠️ This will replace your current profile and data. Are you sure?')) {\n      return\n    }\n\n    try {\n      setIsProcessing(true)\n      setStatus('🔄 Restoring backup...')\n      \n      await BackupService.restoreFromFile(file, usePassword ? password : undefined)\n      \n      setStatus('✅ Backup restored successfully! Page will reload...')\n    } catch (error) {\n      console.error('Restore failed:', error)\n      setStatus(`❌ Restore failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const resetForm = () => {\n    setPassword('')\n    setStatus('')\n    setBackupInfo(null)\n    if (fileInputRef.current) {\n      fileInputRef.current.value = ''\n    }\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n          Profile Backup & Restore\n        </h2>\n        {onClose && (\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n          >\n            ✕\n          </button>\n        )}\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700 mb-6\">\n        <nav className=\"flex space-x-8\">\n          <button\n            onClick={() => { setActiveTab('backup'); resetForm() }}\n            className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n              activeTab === 'backup'\n                ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400'\n            }`}\n          >\n            📦 Backup\n          </button>\n          <button\n            onClick={() => { setActiveTab('restore'); resetForm() }}\n            className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n              activeTab === 'restore'\n                ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400'\n            }`}\n          >\n            🔄 Restore\n          </button>\n        </nav>\n      </div>\n\n      {/* Backup Tab */}\n      {activeTab === 'backup' && (\n        <div className=\"space-y-6\">\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-lg p-4\">\n            <h3 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\n              📋 What gets backed up:\n            </h3>\n            <ul className=\"text-sm text-blue-800 dark:text-blue-200 space-y-1\">\n              <li>• Your profile information and cryptographic keys</li>\n              <li>• Extended profile data (avatar, location, website)</li>\n              <li>• Your contacts and relationships (optional)</li>\n              <li>• All necessary data to restore your identity</li>\n            </ul>\n          </div>\n\n          {currentProfile ? (\n            <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n              <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">Current Profile:</h4>\n              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                <strong>Username:</strong> {currentProfile.username}<br/>\n                <strong>Display Name:</strong> {currentProfile.displayName || 'Not set'}<br/>\n                <strong>Public Key:</strong> {currentProfile.publicKey?.slice(0, 16) + '...' || 'Unknown'}\n              </p>\n            </div>\n          ) : (\n            <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg p-4\">\n              <p className=\"text-yellow-800 dark:text-yellow-200\">\n                ⚠️ No profile found to backup. Please create a profile first.\n              </p>\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={includeContacts}\n                onChange={(e) => setIncludeContacts(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-gray-700 dark:text-gray-300\">\n                Include contacts and relationships in backup\n              </span>\n            </label>\n\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={usePassword}\n                onChange={(e) => setUsePassword(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-gray-700 dark:text-gray-300\">\n                Password protect backup (recommended)\n              </span>\n            </label>\n\n            {usePassword && (\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Enter backup password\"\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n            )}\n          </div>\n\n          <button\n            onClick={handleBackupDownload}\n            disabled={isProcessing || !currentProfile}\n            className=\"w-full px-4 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isProcessing ? '📦 Creating Backup...' : '💾 Download Backup'}\n          </button>\n        </div>\n      )}\n\n      {/* Restore Tab */}\n      {activeTab === 'restore' && (\n        <div className=\"space-y-6\">\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg p-4\">\n            <h3 className=\"font-semibold text-yellow-900 dark:text-yellow-100 mb-2\">\n              ⚠️ Important Warning:\n            </h3>\n            <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n              Restoring a backup will completely replace your current profile, keys, and data. \n              Make sure to backup your current profile first if you want to keep it.\n            </p>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Select Backup File:\n              </label>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\".snartnet-backup,.json\"\n                onChange={handleFileSelect}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                Accepts .snartnet-backup and .json files\n              </p>\n            </div>\n\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={usePassword}\n                onChange={(e) => setUsePassword(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-gray-700 dark:text-gray-300\">\n                Backup is password protected\n              </span>\n            </label>\n\n            {usePassword && (\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Enter backup password\"\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n            )}\n          </div>\n\n          {backupInfo && (\n            <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n              <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">Backup Information:</h4>\n              <div className=\"text-sm text-gray-600 dark:text-gray-300 space-y-1\">\n                <p><strong>Username:</strong> {backupInfo.username}</p>\n                <p><strong>Created:</strong> {new Date(backupInfo.timestamp).toLocaleString()}</p>\n                <p><strong>Version:</strong> {backupInfo.version}</p>\n                <p><strong>Fingerprint:</strong> {backupInfo.fingerprint}</p>\n                <p><strong>Includes Contacts:</strong> {backupInfo.hasContacts ? 'Yes' : 'No'}</p>\n              </div>\n            </div>\n          )}\n\n          <button\n            onClick={handleRestore}\n            disabled={isProcessing || !backupInfo}\n            className=\"w-full px-4 py-3 bg-orange-600 hover:bg-orange-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isProcessing ? '🔄 Restoring...' : '🔄 Restore Backup'}\n          </button>\n        </div>\n      )}\n\n      {/* Status Message */}\n      {status && (\n        <div className={`mt-6 p-4 rounded-lg ${\n          status.startsWith('✅') ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700' :\n          status.startsWith('❌') ? 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700' :\n          status.startsWith('⚠️') ? 'bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700' :\n          'bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700'\n        }`}>\n          <p className={`text-sm font-medium ${\n            status.startsWith('✅') ? 'text-green-800 dark:text-green-200' :\n            status.startsWith('❌') ? 'text-red-800 dark:text-red-200' :\n            status.startsWith('⚠️') ? 'text-yellow-800 dark:text-yellow-200' :\n            'text-blue-800 dark:text-blue-200'\n          }`}>\n            {status}\n          </p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default BackupRestore","import { useState } from 'react'\nimport { useProfileStore } from '@/stores/profileStore'\nimport CreateProfile from '@/components/CreateProfile'\nimport ProfileDisplay from '@/components/ProfileDisplay'\nimport WebTorrentStatus from '@/components/WebTorrentStatus'\nimport BackupRestore from '@/components/BackupRestore'\n\n\nconst ProfilePage: React.FC = () => {\n  const { currentProfile, loading } = useProfileStore()\n  const [showCreateNew, setShowCreateNew] = useState(false)\n  const [showBackupRestore, setShowBackupRestore] = useState(false)\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n          Profile Management\n        </h1>\n        \n        <div className=\"flex gap-2\">\n          {currentProfile && !showCreateNew && !showBackupRestore && (\n            <>\n              <button\n                onClick={() => setShowBackupRestore(true)}\n                className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                💾 Backup & Restore\n              </button>\n              <button\n                onClick={() => setShowCreateNew(true)}\n                className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Create New Profile\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n      \n      {loading && (\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Loading profile...</span>\n        </div>\n      )}\n\n      {!loading && (\n        <div className=\"space-y-8\">\n          {showBackupRestore && (\n            <div>\n              <BackupRestore onClose={() => setShowBackupRestore(false)} />\n            </div>\n          )}\n\n          {showCreateNew && !showBackupRestore && (\n            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Create New Profile\n                </h2>\n                <button\n                  onClick={() => setShowCreateNew(false)}\n                  className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n                >\n                  ✕ Cancel\n                </button>\n              </div>\n              <CreateProfile />\n            </div>\n          )}\n          \n          {!showBackupRestore && (\n            <>\n              {currentProfile ? (\n                <div>\n                  {!showCreateNew && (\n                    <>\n                      <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                        Current Profile\n                      </h2>\n                      <ProfileDisplay />\n                    </>\n                  )}\n                </div>\n              ) : (\n                !showCreateNew && <CreateProfile />\n              )}\n              \n              <WebTorrentStatus />\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfilePage","const MessagesPage: React.FC = () => {\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n        Messages\n      </h1>\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <p className=\"text-gray-600 dark:text-gray-300\">\n          Encrypted messaging features coming soon...\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default MessagesPage","import { useState } from 'react'\nimport { useProfileStore } from '@/stores/profileStore'\nimport { getCore } from '@/lib/core'\n\ninterface MagnetLinkManagerProps {\n  onProfileDownloaded?: (profile: any) => void\n}\n\nexport default function MagnetLinkManager({ onProfileDownloaded }: MagnetLinkManagerProps) {\n  const { currentProfile } = useProfileStore()\n  const [magnetInput, setMagnetInput] = useState('')\n  const [isDownloading, setIsDownloading] = useState(false)\n  const [downloadStatus, setDownloadStatus] = useState<string>('')\n  const [myMagnetLink, setMyMagnetLink] = useState<string>('')\n  const [isSeeding, setIsSeeding] = useState(false)\n  const [showShareModal, setShowShareModal] = useState(false)\n\n  const handleSeedProfile = async () => {\n    if (!currentProfile) {\n      setDownloadStatus('No profile to seed')\n      return\n    }\n\n    try {\n      setIsSeeding(true)\n      setDownloadStatus('Starting to seed your profile...')\n      \n      const core = await getCore()\n      const magnetURI = await core.seedCurrentProfile()\n      \n      setMyMagnetLink(magnetURI)\n      setDownloadStatus(`✅ Profile is now seeding! Share the magnet link with friends.`)\n      setShowShareModal(true)\n    } catch (error) {\n      console.error('Error seeding profile:', error)\n      setDownloadStatus(`❌ Failed to seed profile: ${error}`)\n    } finally {\n      setIsSeeding(false)\n    }\n  }\n\n  const handleDownloadProfile = async () => {\n    if (!magnetInput.trim()) {\n      setDownloadStatus('Please enter a magnet link')\n      return\n    }\n\n    if (!magnetInput.startsWith('magnet:?')) {\n      setDownloadStatus('Invalid magnet link format')\n      return\n    }\n\n    try {\n      setIsDownloading(true)\n      setDownloadStatus('Connecting to peers and downloading profile...')\n      \n      const core = await getCore()\n      const profile = await core.downloadProfileFromMagnet(magnetInput.trim())\n      \n      if (profile) {\n        setDownloadStatus(`✅ Successfully downloaded profile: ${profile.username}`)\n        setMagnetInput('')\n        \n        // Callback to parent component\n        if (onProfileDownloaded) {\n          onProfileDownloaded(profile)\n        }\n      } else {\n        setDownloadStatus('❌ Failed to download profile - no data received')\n      }\n    } catch (error) {\n      console.error('Error downloading profile:', error)\n      setDownloadStatus(`❌ Download failed: ${error}`)\n    } finally {\n      setIsDownloading(false)\n    }\n  }\n\n  const copyMagnetLink = async () => {\n    if (myMagnetLink) {\n      try {\n        await navigator.clipboard.writeText(myMagnetLink)\n        setDownloadStatus('✅ Magnet link copied to clipboard!')\n        setTimeout(() => setDownloadStatus(''), 3000)\n      } catch (error) {\n        console.error('Failed to copy magnet link:', error)\n        setDownloadStatus('Failed to copy magnet link')\n      }\n    }\n  }\n\n  const shareMagnetLink = async () => {\n    if (myMagnetLink && 'share' in navigator) {\n      try {\n        await navigator.share({\n          title: `${currentProfile?.username}'s SnartNet Profile`,\n          text: `Connect with me on SnartNet! Download my profile using this magnet link:`,\n          url: myMagnetLink\n        })\n      } catch (error) {\n        console.log('Share cancelled or failed:', error)\n      }\n    }\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n      <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n        Connect with Friends\n      </h2>\n\n      {/* Seed Your Profile Section */}\n      <div className=\"mb-8\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\n          Share Your Profile\n        </h3>\n        <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n          Start seeding your profile so friends can download it via P2P torrent network.\n        </p>\n        \n        <div className=\"flex gap-3\">\n          <button\n            onClick={handleSeedProfile}\n            disabled={!currentProfile || isSeeding}\n            className=\"px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isSeeding ? 'Starting Seed...' : '🌱 Start Seeding Profile'}\n          </button>\n          \n          {myMagnetLink && (\n            <>\n              <button\n                onClick={copyMagnetLink}\n                className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                📋 Copy Magnet Link\n              </button>\n              \n              {'share' in navigator && (\n                <button\n                  onClick={shareMagnetLink}\n                  className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition-colors\"\n                >\n                  📱 Share\n                </button>\n              )}\n            </>\n          )}\n        </div>\n\n        {myMagnetLink && (\n          <div className=\"mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n            <p className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n              Your Magnet Link:\n            </p>\n            <code className=\"text-xs text-gray-600 dark:text-gray-400 break-all font-mono\">\n              {myMagnetLink}\n            </code>\n          </div>\n        )}\n      </div>\n\n      {/* Download Friend's Profile Section */}\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\n          Download Friend's Profile\n        </h3>\n        <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n          Enter a magnet link from a friend to download their profile via P2P.\n        </p>\n        \n        <div className=\"space-y-3\">\n          <div>\n            <label htmlFor=\"magnet-input\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Magnet Link\n            </label>\n            <textarea\n              id=\"magnet-input\"\n              value={magnetInput}\n              onChange={(e) => setMagnetInput(e.target.value)}\n              placeholder=\"magnet:?xt=urn:btih:...\"\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n              rows={3}\n            />\n          </div>\n          \n          <button\n            onClick={handleDownloadProfile}\n            disabled={!magnetInput.trim() || isDownloading}\n            className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isDownloading ? '⬇️ Downloading...' : '⬇️ Download Profile'}\n          </button>\n        </div>\n      </div>\n\n      {/* Status Messages */}\n      {downloadStatus && (\n        <div className={`p-4 rounded-lg ${\n          downloadStatus.includes('✅') \n            ? 'bg-green-50 dark:bg-green-900/20 text-green-800 dark:text-green-200' \n            : downloadStatus.includes('❌')\n            ? 'bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200'\n            : 'bg-blue-50 dark:bg-blue-900/20 text-blue-800 dark:text-blue-200'\n        }`}>\n          <p className=\"text-sm font-medium\">{downloadStatus}</p>\n        </div>\n      )}\n\n      {/* Share Modal */}\n      {showShareModal && myMagnetLink && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-md w-full p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                🎉 Profile Successfully Seeding!\n              </h3>\n              <button\n                onClick={() => setShowShareModal(false)}\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n              Your profile is now available on the P2P network. Share this magnet link with friends:\n            </p>\n            \n            <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 mb-4\">\n              <code className=\"text-xs text-gray-600 dark:text-gray-400 break-all font-mono\">\n                {myMagnetLink}\n              </code>\n            </div>\n            \n            <div className=\"flex gap-2\">\n              <button\n                onClick={copyMagnetLink}\n                className=\"flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                📋 Copy\n              </button>\n              \n              {'share' in navigator && (\n                <button\n                  onClick={shareMagnetLink}\n                  className=\"flex-1 px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors\"\n                >\n                  📱 Share\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport MagnetLinkManager from '@/components/MagnetLinkManager'\nimport { useContactStore, type RelationshipType } from '@/stores/contactStore'\n\ninterface DiscoveredProfile {\n  id: string\n  username: string\n  displayName: string\n  bio?: string\n  publicKey: string\n  avatar?: string\n  downloadedAt: string\n  magnetURI?: string\n}\n\nexport default function DiscoverPage() {\n  const [discoveredProfiles, setDiscoveredProfiles] = useState<DiscoveredProfile[]>([])\n  const { addContact, getContact } = useContactStore()\n\n  // Load discovered profiles from localStorage on mount\n  useEffect(() => {\n    const saved = localStorage.getItem('snartnet-discovered-profiles')\n    if (saved) {\n      try {\n        setDiscoveredProfiles(JSON.parse(saved))\n      } catch (error) {\n        console.error('Failed to load discovered profiles:', error)\n      }\n    }\n  }, [])\n\n  // Save discovered profiles to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('snartnet-discovered-profiles', JSON.stringify(discoveredProfiles))\n  }, [discoveredProfiles])\n\n  const handleProfileDownloaded = (profile: any) => {\n    // Check if profile already exists\n    const existingIndex = discoveredProfiles.findIndex(p => p.publicKey === profile.publicKey)\n    \n    const discoveredProfile: DiscoveredProfile = {\n      id: profile.publicKey.slice(0, 8), // Use first 8 chars of public key as ID\n      username: profile.username,\n      displayName: profile.displayName || profile.username,\n      bio: profile.bio,\n      publicKey: profile.publicKey,\n      avatar: profile.avatar,\n      downloadedAt: new Date().toISOString(),\n      magnetURI: profile.magnetURI\n    }\n\n    if (existingIndex >= 0) {\n      // Update existing profile\n      const updated = [...discoveredProfiles]\n      updated[existingIndex] = { ...updated[existingIndex], ...discoveredProfile }\n      setDiscoveredProfiles(updated)\n    } else {\n      // Add new profile\n      setDiscoveredProfiles(prev => [discoveredProfile, ...prev])\n    }\n  }\n\n  const removeProfile = (publicKey: string) => {\n    setDiscoveredProfiles(prev => prev.filter(p => p.publicKey !== publicKey))\n  }\n\n  const addAsContact = (profile: DiscoveredProfile, relationship: RelationshipType = 'friend') => {\n    // Check if already a contact\n    const contactId = `contact_${btoa(profile.username + (profile.magnetURI || '')).slice(0, 16)}`\n    const existingContact = getContact(contactId)\n    \n    if (existingContact) {\n      alert(`${profile.username} is already in your contacts!`)\n      return\n    }\n\n    addContact({\n      username: profile.username,\n      displayName: profile.displayName,\n      relationship: relationship,\n      trustLevel: relationship === 'friend' ? 7 : 5,\n      magnetUri: profile.magnetURI || '',\n      avatar: profile.avatar,\n      notes: `Added from discovery on ${new Date().toLocaleDateString()}`\n    })\n\n    alert(`${profile.username} has been added to your ${relationship}s!`)\n  }\n\n  const formatDate = (isoString: string) => {\n    return new Date(isoString).toLocaleDateString() + ' ' + new Date(isoString).toLocaleTimeString()\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n          Discover Friends\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Share your profile and download friends' profiles using magnet links.\n        </p>\n      </div>\n\n      {/* Magnet Link Manager */}\n      <MagnetLinkManager onProfileDownloaded={handleProfileDownloaded} />\n\n      {/* Discovered Profiles */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            Downloaded Friends ({discoveredProfiles.length})\n          </h2>\n        </div>\n\n        {discoveredProfiles.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-6xl mb-4\">👥</div>\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n              No friends discovered yet\n            </h3>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Use the magnet link manager above to download friends' profiles from the P2P network.\n            </p>\n          </div>\n        ) : (\n          <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n            {discoveredProfiles.map((profile) => (\n              <div\n                key={profile.publicKey}\n                className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-4 hover:border-blue-300 dark:hover:border-blue-500 transition-colors\"\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center space-x-3\">\n                    {profile.avatar ? (\n                      <img\n                        src={profile.avatar}\n                        alt={`${profile.username}'s avatar`}\n                        className=\"w-10 h-10 rounded-full\"\n                      />\n                    ) : (\n                      <div className=\"w-10 h-10 bg-gradient-to-br from-blue-400 to-purple-500 rounded-full flex items-center justify-center text-white font-bold\">\n                        {profile.username.charAt(0).toUpperCase()}\n                      </div>\n                    )}\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n                        {profile.displayName}\n                      </h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        @{profile.username}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <button\n                    onClick={() => removeProfile(profile.publicKey)}\n                    className=\"text-red-500 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 p-1\"\n                    title=\"Remove profile\"\n                  >\n                    🗑️\n                  </button>\n                </div>\n\n                {profile.bio && (\n                  <p className=\"text-sm text-gray-700 dark:text-gray-300 mb-3 line-clamp-2\">\n                    {profile.bio}\n                  </p>\n                )}\n\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 mb-3\">\n                  <p>Downloaded: {formatDate(profile.downloadedAt)}</p>\n                  <p className=\"font-mono\">ID: {profile.id}</p>\n                </div>\n\n                <div className=\"flex gap-2 mb-2\">\n                  <button\n                    onClick={() => addAsContact(profile, 'friend')}\n                    className=\"flex-1 px-3 py-2 bg-green-600 hover:bg-green-700 text-white text-sm font-medium rounded-lg transition-colors\"\n                  >\n                    ➕ Add Friend\n                  </button>\n                  <button\n                    onClick={() => addAsContact(profile, 'acquaintance')}\n                    className=\"flex-1 px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-lg transition-colors\"\n                  >\n                    🤝 Add Acquaintance\n                  </button>\n                </div>\n                \n                <div className=\"flex gap-2\">\n                  <button className=\"flex-1 px-3 py-2 bg-gray-600 hover:bg-gray-700 text-white text-sm font-medium rounded-lg transition-colors\">\n                    💬 Message\n                  </button>\n                  <button className=\"flex-1 px-3 py-2 bg-gray-600 hover:bg-gray-700 text-white text-sm font-medium rounded-lg transition-colors\">\n                    👤 View Profile\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport MagnetLinkManager from '@/components/MagnetLinkManager'\nimport { useContactStore, type Contact, type RelationshipType } from '../stores/contactStore'\n\nconst ContactsPage: React.FC = () => {\n  const { \n    loadContacts, \n    addContact, \n    removeContact, \n    updateContact, \n    getContactsByRelationship \n  } = useContactStore()\n  \n  const [activeTab, setActiveTab] = useState<RelationshipType>('friend')\n  const [showAddForm, setShowAddForm] = useState(false)\n\n  useEffect(() => {\n    loadContacts()\n  }, [loadContacts])\n\n  const tabs = [\n    { id: 'friend' as RelationshipType, label: 'Friends', icon: '👥' },\n    { id: 'acquaintance' as RelationshipType, label: 'Acquaintances', icon: '🤝' },\n    { id: 'ring-of-trust' as RelationshipType, label: 'Ring of Trust', icon: '🛡️' },\n    { id: 'group-member' as RelationshipType, label: 'Groups', icon: '🏠' }\n  ]\n\n  const currentContacts = getContactsByRelationship(activeTab)\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      {/* Connect with Friends (MagnetLinkManager) */}\n      <div className=\"mb-10\">\n        <MagnetLinkManager />\n      </div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n          Contacts & Relationships\n        </h1>\n        <button\n          onClick={() => setShowAddForm(true)}\n          className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors\"\n        >\n          Add Contact\n        </button>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700 mb-6\">\n        <nav className=\"flex space-x-8\">\n          {tabs.map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n                activeTab === tab.id\n                  ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'\n              }`}\n            >\n              <span className=\"mr-2\">{tab.icon}</span>\n              {tab.label}\n              <span className=\"ml-2 bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-full px-2 py-1 text-xs\">\n                {getContactsByRelationship(tab.id).length}\n              </span>\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* Add Contact Form */}\n      {showAddForm && (\n        <AddContactForm \n          onAdd={addContact}\n          onCancel={() => setShowAddForm(false)}\n          defaultRelationship={activeTab}\n        />\n      )}\n\n      {/* Contacts List */}\n      <div className=\"space-y-4\">\n        {currentContacts.length === 0 ? (\n          <EmptyState relationship={activeTab} onAddContact={() => setShowAddForm(true)} />\n        ) : (\n          currentContacts.map((contact) => (\n            <ContactCard \n              key={contact.id}\n              contact={contact}\n              onUpdate={updateContact}\n              onRemove={removeContact}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\ninterface AddContactFormProps {\n  onAdd: (contact: Omit<Contact, 'id' | 'addedDate' | 'permissions'>) => void\n  onCancel: () => void\n  defaultRelationship: RelationshipType\n}\n\nconst AddContactForm: React.FC<AddContactFormProps> = ({ onAdd, onCancel, defaultRelationship }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    displayName: '',\n    relationship: defaultRelationship,\n    trustLevel: 5,\n    magnetUri: '',\n    notes: ''\n  })\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    if (!formData.username || !formData.magnetUri) return\n\n    onAdd({\n      username: formData.username,\n      displayName: formData.displayName || formData.username,\n      relationship: formData.relationship,\n      trustLevel: formData.trustLevel,\n      magnetUri: formData.magnetUri,\n      notes: formData.notes\n    } as Omit<Contact, 'id' | 'addedDate' | 'permissions'>)\n\n    onCancel()\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6 mb-6\">\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Add New Contact</h3>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Username *\n            </label>\n            <input\n              type=\"text\"\n              value={formData.username}\n              onChange={(e) => setFormData(prev => ({ ...prev, username: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              required\n              placeholder=\"Enter username\"\n              title=\"Username\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Display Name\n            </label>\n            <input\n              type=\"text\"\n              value={formData.displayName}\n              onChange={(e) => setFormData(prev => ({ ...prev, displayName: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              placeholder=\"Enter display name (optional)\"\n              title=\"Display Name\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Relationship Type\n            </label>\n            <select\n              value={formData.relationship}\n              onChange={(e) => setFormData(prev => ({ ...prev, relationship: e.target.value as RelationshipType }))}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              title=\"Relationship Type\"\n            >\n              <option value=\"friend\">Friend</option>\n              <option value=\"acquaintance\">Acquaintance</option>\n              <option value=\"ring-of-trust\">Ring of Trust</option>\n              <option value=\"group-member\">Group Member</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Trust Level (1-10)\n            </label>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              value={formData.trustLevel}\n              onChange={(e) => setFormData(prev => ({ ...prev, trustLevel: parseInt(e.target.value) }))}\n              className=\"w-full\"\n              title=\"Trust Level\"\n              placeholder=\"Trust Level\"\n            />\n            <div className=\"text-center text-sm text-gray-500\">{formData.trustLevel}</div>\n          </div>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n            Magnet URI *\n          </label>\n          <input\n            type=\"text\"\n            value={formData.magnetUri}\n            onChange={(e) => setFormData(prev => ({ ...prev, magnetUri: e.target.value }))}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"magnet:?xt=urn:btih:...\"\n            required\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n            Notes\n          </label>\n          <textarea\n            value={formData.notes}\n            onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n            rows={3}\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            placeholder=\"Optional notes about this contact...\"\n          />\n        </div>\n\n        <div className=\"flex gap-2 pt-4\">\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md\"\n          >\n            Add Contact\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"px-4 py-2 bg-gray-300 hover:bg-gray-400 text-gray-700 rounded-md\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\ninterface ContactCardProps {\n  contact: Contact\n  onUpdate: (contactId: string, updates: Partial<Contact>) => void\n  onRemove: (contactId: string) => void\n}\n\nconst ContactCard: React.FC<ContactCardProps> = ({ contact, onRemove }) => {\n  const [isEditing, setIsEditing] = useState(false)\n  \n  // Suppress unused parameter warning - will be used for inline editing\n  const handleUpdate = () => {\n    // TODO: Implement inline editing\n    setIsEditing(!isEditing)\n  }\n\n  const getRelationshipColor = (relationship: RelationshipType) => {\n    switch (relationship) {\n      case 'ring-of-trust': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n      case 'friend': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n      case 'acquaintance': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'\n      case 'group-member': return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200'\n    }\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString()\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center\">\n            {contact.avatar ? (\n              <img src={contact.avatar} alt={contact.displayName} className=\"w-12 h-12 rounded-full object-cover\" />\n            ) : (\n              <span className=\"text-lg font-semibold text-gray-600 dark:text-gray-300\">\n                {contact.displayName.charAt(0).toUpperCase()}\n              </span>\n            )}\n          </div>\n          \n          <div>\n            <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n              {contact.displayName}\n            </h3>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n              @{contact.username}\n            </p>\n            <div className=\"flex items-center space-x-2 mt-1\">\n              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getRelationshipColor(contact.relationship)}`}>\n                {contact.relationship.replace('-', ' ')}\n              </span>\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                Trust: {contact.trustLevel}/10\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleUpdate}\n            className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded\"\n          >\n            Edit\n          </button>\n          <button\n            onClick={() => onRemove(contact.id)}\n            className=\"px-3 py-1 text-sm bg-red-100 hover:bg-red-200 dark:bg-red-900 dark:hover:bg-red-800 text-red-700 dark:text-red-300 rounded\"\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n\n      {contact.notes && (\n        <div className=\"mt-3 p-2 bg-gray-50 dark:bg-gray-700 rounded text-sm text-gray-600 dark:text-gray-400\">\n          {contact.notes}\n        </div>\n      )}\n\n      <div className=\"mt-3 text-xs text-gray-500 dark:text-gray-400\">\n        Added: {formatDate(contact.addedDate)}\n        {contact.lastSeen && ` • Last seen: ${formatDate(contact.lastSeen)}`}\n      </div>\n    </div>\n  )\n}\n\ninterface EmptyStateProps {\n  relationship: RelationshipType\n  onAddContact: () => void\n}\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ relationship, onAddContact }) => {\n  const getEmptyMessage = (relationship: RelationshipType) => {\n    switch (relationship) {\n      case 'friend': return 'No friends added yet. Start building your network!'\n      case 'acquaintance': return 'No acquaintances yet. Add casual connections here.'\n      case 'ring-of-trust': return 'No trusted contacts yet. Add your most trusted contacts for key recovery.'\n      case 'group-member': return 'No group members yet. Add contacts from your groups.'\n    }\n  }\n\n  return (\n    <div className=\"text-center py-12\">\n      <div className=\"text-6xl mb-4\">📱</div>\n      <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n        {getEmptyMessage(relationship)}\n      </h3>\n      <p className=\"text-gray-500 dark:text-gray-400 mb-4\">\n        Add contacts to start building your decentralized social network.\n      </p>\n      <button\n        onClick={onAddContact}\n        className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg\"\n      >\n        Add First Contact\n      </button>\n    </div>\n  )\n}\n\nexport default ContactsPage","import { Link } from 'react-router-dom'\n\nconst Navigation: React.FC = () => {\n  return (\n    <nav className=\"bg-white dark:bg-gray-800 shadow-sm\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex justify-between items-center h-16\">\n          <Link to=\"/\" className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            SnartNet\n          </Link>\n          <div className=\"flex space-x-4\">\n            <Link \n              to=\"/\" \n              className=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\"\n            >\n              Home\n            </Link>\n            <Link \n              to=\"/profile\" \n              className=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\"\n            >\n              Profile\n            </Link>\n            <Link \n              to=\"/discover\" \n              className=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\"\n            >\n              Discover\n            </Link>\n            <Link \n              to=\"/contacts\" \n              className=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\"\n            >\n              Contacts\n            </Link>\n            <Link \n              to=\"/messages\" \n              className=\"text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\"\n            >\n              Messages\n            </Link>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navigation","import Navigation from './Navigation'\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      <main className=\"container mx-auto px-4 py-8\">\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","import { useEffect } from 'react'\nimport { getCore } from '@/lib/core'\nimport { useProfileStore } from '@/stores/profileStore'\n\n/**\n * Hook to initialize the core and load existing profile\n */\nexport function useInitializeCore() {\n  const { setCurrentProfile, setLoading, setError } = useProfileStore()\n\n  useEffect(() => {\n    let isMounted = true\n\n    const initializeCore = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n        \n        console.log('[useInitializeCore] Initializing core...')\n        const core = await getCore()\n        console.log('[useInitializeCore] Core initialized successfully')\n\n        // Check if there's an existing profile\n        if (core.hasProfile()) {\n          console.log('[useInitializeCore] Found existing profile, loading...')\n          const profile = await core.getCurrentProfile()\n          if (profile && isMounted) {\n            console.log('[useInitializeCore] Loaded existing profile:', profile)\n            setCurrentProfile(profile)\n          }\n        } else {\n          console.log('[useInitializeCore] No existing profile found')\n        }\n\n      } catch (error) {\n        console.error('[useInitializeCore] Failed to initialize core:', error)\n        if (isMounted) {\n          const errorMessage = error instanceof Error ? error.message : 'Failed to initialize'\n          setError(errorMessage)\n        }\n      } finally {\n        if (isMounted) {\n          setLoading(false)\n        }\n      }\n    }\n\n    initializeCore()\n\n    return () => {\n      isMounted = false\n    }\n  }, [setCurrentProfile, setLoading, setError])\n}","import { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport HomePage from '@/pages/HomePage'\nimport ProfilePage from '@/pages/ProfilePage'\nimport MessagesPage from '@/pages/MessagesPage'\nimport DiscoverPage from '@/pages/DiscoverPage'\nimport ContactsPage from '@/pages/ContactsPage'\nimport Layout from '@/components/Layout'\nimport { useInitializeCore } from '@/hooks/useInitializeCore'\nimport './App.css'\n\nfunction App() {\n  // Initialize the WASM core and load existing profile\n  useInitializeCore()\n  return (\n    <BrowserRouter basename=\"/net\">\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/profile/:id?\" element={<ProfilePage />} />\n          <Route path=\"/discover\" element={<DiscoverPage />} />\n          <Route path=\"/contacts\" element={<ContactsPage />} />\n          <Route path=\"/messages/:id?\" element={<MessagesPage />} />\n        </Routes>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default App","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)"],"names":["wasm","WASM_VECTOR_LEN","cachedUint8ArrayMemory0","getUint8ArrayMemory0","cachedTextEncoder","arg","view","buf","passStringToWasm0","malloc","realloc","ptr","len","mem","offset","code","ret","cachedDataViewMemory0","getDataViewMemory0","addToExternrefTable0","obj","idx","handleError","f","args","e","cachedTextDecoder","MAX_SAFARI_DECODE_BYTES","numBytesDecoded","decodeText","getStringFromWasm0","isLikeNone","x","getArrayU8FromWasm0","takeFromExternrefTable0","value","passArrayJsValueToWasm0","array","i","add","init_core","SnartNetCoreFinalization","SnartNetCore$1","username","display_name","bio","deferred5_0","deferred5_1","ptr0","len0","ptr1","len1","ptr2","len2","ptr4","len4","content","tags","reply_to","recipient_fingerprint","deferred2_0","deferred2_1","SnartNetCore","EXPECTED_RESPONSE_TYPES","__wbg_load","module","imports","bytes","instance","__wbg_get_imports","arg0","arg1","arg2","deferred0_0","deferred0_1","arg3","result","arg4","val","table","__wbg_finalize_init","__wbg_init","module_or_path","TorrentService","WebTorrentConstructor","err","torrent","error","event","callback","total","profile","profileData","fileName","encodedData","file","resolve","reject","timeoutId","wire","magnetURI","profileFile","buffer","jsonString","uint8Array","parseError","index","infoHash","torrentServiceInstance","getTorrentService","wasmCore","displayName","magnetUri","replyTo","signedPost","recipientFingerprint","signedMessage","cleanProfile","coreInstance","getCore","initWasm","WasmCore","useCore","core","setCore","useState","loading","setLoading","useEffect","useProfileStore","create","set","state","newProfiles","updates","existing","newCurrentProfile","profilePicture","thumbnail","newPost","posts","postId","p","CreatePost","setContent","isPosting","setIsPosting","currentProfile","handleSubmit","jsxs","jsx","usePostStore","postData","a","b","post","isSeeding","progress","getDefaultPermissions","relationship","generateContactId","useContactStore","get","stored","contacts","contactData","newContact","existingIndex","c","updatedContacts","contactId","contact","ImageProcessor","img","cropArea","processedImage","url","dataUrl","width","height","size","y","targetSize","canvas","ctx","blob","reader","base64","format","k","sizes","name","word","seed","hash","char","hue1","hue2","PostTimeline","loadPostsFromContacts","loadContacts","PostCard","formatTimeAgo","image","tag","dateString","date","diffInSeconds","HomePage","coreLoading","CreateProfile","setUsername","setDisplayName","setBio","isLoading","setIsLoading","setError","success","setSuccess","setCurrentProfile","setStoreError","errorMessage","ProfileAvatar","className","showOnlineStatus","isOnline","alt","sizeClasses","statusSizeClasses","getInitials","avatarContent","ProfilePictureUploader","onClose","onSuccess","updateProfilePicture","fileInputRef","useRef","dragActive","setDragActive","isProcessing","setIsProcessing","preview","setPreview","setProcessedImage","status","setStatus","uploadProgress","setUploadProgress","resetState","handleFiles","useCallback","files","processed","handleFileSelect","handleDrop","handleDrag","handleSave","thumbnailBase64","handleRemove","getProgressWidth","ProfilePosts","addProfilePost","removeProfilePost","postContent","setPostContent","posting","setPosting","handlePost","ProfileDisplay","showUploader","setShowUploader","ProgressBar","progressPercentage","getProgressClass","WebTorrentStatus","stats","setStats","activeTorrents","setActiveTorrents","events","setEvents","isConnected","setIsConnected","interval","unsubscribe","torrentService","timestamp","prev","formatBytes","BackupService","includeContacts","keypairData","extendedData","contactsData","backup","password","backupData","backupJson","link","fileContent","_password","data","encoded","encryptedData","decoded","BackupRestore","activeTab","setActiveTab","setIncludeContacts","usePassword","setUsePassword","setPassword","backupInfo","setBackupInfo","handleBackupDownload","info","handleRestore","resetForm","ProfilePage","showCreateNew","setShowCreateNew","showBackupRestore","setShowBackupRestore","Fragment","MessagesPage","MagnetLinkManager","onProfileDownloaded","magnetInput","setMagnetInput","isDownloading","setIsDownloading","downloadStatus","setDownloadStatus","myMagnetLink","setMyMagnetLink","setIsSeeding","showShareModal","setShowShareModal","handleSeedProfile","handleDownloadProfile","copyMagnetLink","shareMagnetLink","DiscoverPage","discoveredProfiles","setDiscoveredProfiles","addContact","getContact","saved","handleProfileDownloaded","discoveredProfile","updated","removeProfile","publicKey","addAsContact","formatDate","isoString","ContactsPage","removeContact","updateContact","getContactsByRelationship","showAddForm","setShowAddForm","tabs","currentContacts","tab","AddContactForm","EmptyState","ContactCard","onAdd","onCancel","defaultRelationship","formData","setFormData","onRemove","isEditing","setIsEditing","handleUpdate","getRelationshipColor","onAddContact","getEmptyMessage","Navigation","Link","Layout","children","useInitializeCore","isMounted","App","BrowserRouter","Routes","Route","createRoot","StrictMode"],"mappings":"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"}