{"version":3,"mappings":"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","names":["wasm","WASM_VECTOR_LEN","cachedUint8ArrayMemory0","getUint8ArrayMemory0","cachedTextEncoder","arg","view","buf","passStringToWasm0","malloc","realloc","ptr","len","mem","offset","code","ret","cachedDataViewMemory0","getDataViewMemory0","addToExternrefTable0","obj","idx","handleError","f","args","e","cachedTextDecoder","MAX_SAFARI_DECODE_BYTES","numBytesDecoded","decodeText","getStringFromWasm0","isLikeNone","x","getArrayU8FromWasm0","takeFromExternrefTable0","value","generate_keypair","sign_data","keypair_json","data","deferred4_0","deferred4_1","ptr0","len0","ptr1","len1","ptr3","len3","verify_signature_wasm","signature","public_key","ptr2","len2","passArrayJsValueToWasm0","array","i","add","init_core","SnartNetCoreFinalization","SnartNetCore$1","username","display_name","bio","deferred5_0","deferred5_1","ptr4","len4","content","tags","reply_to","recipient_fingerprint","deferred2_0","deferred2_1","SnartNetCore","EXPECTED_RESPONSE_TYPES","__wbg_load","module","imports","bytes","instance","__wbg_get_imports","arg0","arg1","arg2","deferred0_0","deferred0_1","arg3","result","arg4","val","table","__wbg_finalize_init","__wbg_init","module_or_path","TorrentService","resolve","attempts","maxAttempts","customTrackers","tryInit","WebTorrentConstructor","err","torrent","queue","fn","error","event","callback","total","profile","profileData","fileName","encodedData","file","reject","timeoutId","wire","action","post","startTime","postData","resolved","trackerWarningsShown","seedAction","duration","peer","posts","authorId","options","chunkSize","slice","a","b","indexFile","p","json","headMagnetURI","opts","maxPosts","maxChunks","sinceTs","d","collected","currentMagnet","chunks","truncated","nextPointer","indexData","next","entry","ts","magnetURI","timeout","buffer","jsonStr","parsed","profileFile","jsonString","uint8Array","parseError","index","infoHash","torrentServiceInstance","getTorrentService","normalizeProfile","raw","wasmCore","cap","probe","displayName","payload","env","normalized","magnetUri","msg","jsonApi","e2","replyTo","signedPost","recipientFingerprint","signedMessage","cleanProfile","torrentService","pic","thumb","extendedRaw","extended","emptyIndex","key","coreInstance","getCore","initWasm","WasmCore","useCore","core","setCore","useState","loading","setLoading","useEffect","SEED_PREF_KEY","useProfileStore","create","set","stored","state","newProfiles","updates","existing","newCurrentProfile","profilePicture","thumbnail","enabled","KEYPAIR_STORAGE_KEY","hasWebCryptoEd25519","base64FromBytes","arrayBufferFromBase64","b64","bin","uint8FromBase64","getOrCreateKeypair","keyPair","rawPub","rawPriv","ensureWasm","kpJson","wasmInitialized","canonicalizePost","input","orderedKeys","k","v","signPost","kp","canonical","privBytes","privKey","sigBuf","verifyPostSignature","authorPublicKey","rest","pubBytes","pubKey","ok","deriveFingerprint","publicKeyB64","getDefaultPermissions","relationship","generateContactId","useContactStore","get","contacts","c","contactData","newContact","existingIndex","updatedContacts","tempId","placeholder","__vitePreload","avatar","finalContact","addedContact","usePostStore","postStore","contactId","contact","normalizePost","createdAt","signed","base","newPost","postId","isSeeding","progress","limit","running","startedIds","runNext","existingIds","targets","downloaded","batch","verifiedPost","verr","processed","newContent","updatedAt","s","author","allPosts","profileStore","currentProfile","previousHead","target","ImageProcessor","img","cropArea","processedImage","url","dataUrl","width","height","size","y","targetSize","canvas","ctx","blob","reader","base64","format","sizes","name","word","seed","hash","char","hue1","hue2","processAndStoreImage","_type","CreatePost","setContent","images","setImages","isPosting","setIsPosting","addPost","fileInputRef","useRef","handleImageChange","files","processedImages","prev","removeImage","id","handleSubmit","authorKey","jsxs","jsx","image","PostTimeline","loadPostsFromContacts","loadContacts","allowedAuthors","useMemo","filteredPosts","PostCard","formatTimeAgo","tag","dateString","date","diffInSeconds","HomePage","coreLoading","CreateProfile","setUsername","setDisplayName","setBio","isLoading","setIsLoading","setError","success","setSuccess","setCurrentProfile","setStoreError","errorMessage","ProfileAvatar","className","showOnlineStatus","isOnline","alt","sizeClasses","statusSizeClasses","getInitials","avatarContent","ProfilePictureUploader","onClose","onSuccess","updateProfilePicture","dragActive","setDragActive","isProcessing","setIsProcessing","preview","setPreview","setProcessedImage","status","setStatus","uploadProgress","setUploadProgress","resetState","handleFiles","useCallback","handleFileSelect","handleDrop","handleDrag","handleSave","thumbnailBase64","handleRemove","getProgressWidth","ProfilePosts","deletePost","editPost","postContent","setPostContent","posting","setPosting","editingId","setEditingId","editContent","setEditContent","myPosts","handlePost","ProfileDisplay","showUploader","setShowUploader","EditProfile","onCancel","formData","setFormData","errors","setErrors","validateForm","newErrors","extendedData","updatedProfile","handleInputChange","field","ProgressBar","progressPercentage","getProgressClass","WebTorrentStatus","stats","setStats","activeTorrents","setActiveTorrents","events","setEvents","isConnected","setIsConnected","interval","unsubscribe","timestamp","formatBytes","BackupService","includeContacts","keypairData","contactsData","backup","password","backupData","backupJson","link","fileContent","_password","encoded","encryptedData","decoded","BackupRestore","activeTab","setActiveTab","setIncludeContacts","usePassword","setUsePassword","setPassword","backupInfo","setBackupInfo","handleBackupDownload","info","handleRestore","resetForm","ProfilePage","seedProfileEnabled","setSeedProfileEnabled","showCreateNew","setShowCreateNew","showBackupRestore","setShowBackupRestore","autoSeedStatus","setAutoSeedStatus","showEditProfile","setShowEditProfile","ensureSeeding","magnet","Fragment","localListeners","InMemoryMessageTransport","l","cb","transport","ensureMessageTransport","publishMessage","onMessage","useMessageStore","nanoid","m","message","messages","ChatThread","thread","sendMessage","setInput","inputRef","handleSend","MessagesPage","activeContactId","setActiveContactId","threads","activeThread","QRCodeManager","onContactAdded","showQR","setShowQR","showScanner","setShowScanner","qrDataURL","setQrDataURL","scanResult","setScanResult","videoRef","scannerRef","addContactFromMagnet","QRCode","QrScanner","handleScanResult","closeQR","closeScanner","relationshipTabs","NetworkPage","removeContact","magnetInput","setMagnetInput","adding","setAdding","setRelationship","handleContactAdded","filtered","handleAdd","tab","Link","RelationshipBadge","rel","map","ContactProfilePage","useParams","syncPostsForContact","syncing","setSyncing","syncMsg","setSyncMsg","contactPosts","start","dur","Navigation","PushStatus","expanded","setExpanded","w","node","received","published","APP_VERSION","GIT_COMMIT","GIT_BRANCH","BUILD_TIME","Layout","children","useInitializeCore","isMounted","App","BrowserRouter","Routes","Route","registerSW","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisteredSW","onRegisterError","wb","registerPromise","updateServiceWorker","_reloadPage","register","Workbox","r","updateSW","swUrl","createRoot","StrictMode"],"ignoreList":[],"sources":["../../src/wasm/snartnet_core.js","../../src/lib/torrent.ts","../../src/lib/core.ts","../../src/stores/profileStore.ts","../../src/lib/crypto/ed25519.ts","../../src/stores/contactStore.ts","../../src/stores/postStore.ts","../../src/lib/imageProcessor.ts","../../src/components/CreatePost.tsx","../../src/components/PostTimeline.tsx","../../src/pages/HomePage.tsx","../../src/components/CreateProfile.tsx","../../src/components/ProfileAvatar.tsx","../../src/components/ProfilePictureUploader.tsx","../../src/components/ProfilePosts.tsx","../../src/components/ProfileDisplay.tsx","../../src/components/EditProfile.tsx","../../src/components/ProgressBar.tsx","../../src/components/WebTorrentStatus.tsx","../../src/lib/backup.ts","../../src/components/BackupRestore.tsx","../../src/pages/ProfilePage.tsx","../../src/lib/push/messages.ts","../../src/stores/messageStore.ts","../../src/components/ChatThread.tsx","../../src/pages/MessagesPage.tsx","../../src/components/QRCodeManager.tsx","../../src/pages/NetworkPage.tsx","../../src/pages/ContactProfilePage.tsx","../../src/components/Navigation.tsx","../../src/components/PushStatus.tsx","../../src/components/Layout.tsx","../../src/hooks/useInitializeCore.ts","../../src/App.tsx","../../../../../../../@vite-plugin-pwa/virtual:pwa-register","../../src/main.tsx"],"sourcesContent":["let wasm;\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst cachedTextEncoder = new TextEncoder();\n\nif (!('encodeInto' in cachedTextEncoder)) {\n    cachedTextEncoder.encodeInto = function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    }\n}\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = cachedTextEncoder.encodeInto(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_4.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction takeFromExternrefTable0(idx) {\n    const value = wasm.__wbindgen_export_4.get(idx);\n    wasm.__externref_table_dealloc(idx);\n    return value;\n}\n/**\n * @param {string} username\n * @param {string} key_info_json\n * @returns {any}\n */\nexport function create_profile(username, key_info_json) {\n    const ptr0 = passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(key_info_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.create_profile(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} profile_json\n * @param {string | null} [display_name]\n * @param {string | null} [bio]\n * @returns {any}\n */\nexport function update_profile(profile_json, display_name, bio) {\n    const ptr0 = passStringToWasm0(profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(display_name) ? 0 : passStringToWasm0(display_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(bio) ? 0 : passStringToWasm0(bio, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    const ret = wasm.update_profile(ptr0, len0, ptr1, len1, ptr2, len2);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} profile_json\n * @param {string} keypair_json\n * @returns {any}\n */\nexport function sign_profile(profile_json, keypair_json) {\n    const ptr0 = passStringToWasm0(profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.sign_profile(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} signed_profile_json\n * @returns {boolean}\n */\nexport function verify_profile(signed_profile_json) {\n    const ptr0 = passStringToWasm0(signed_profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_profile(ptr0, len0);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\n/**\n * @param {string} profile_json\n * @returns {string}\n */\nexport function generate_profile_magnet_uri(profile_json) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(profile_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.generate_profile_magnet_uri(ptr0, len0);\n        var ptr2 = ret[0];\n        var len2 = ret[1];\n        if (ret[3]) {\n            ptr2 = 0; len2 = 0;\n            throw takeFromExternrefTable0(ret[2]);\n        }\n        deferred3_0 = ptr2;\n        deferred3_1 = len2;\n        return getStringFromWasm0(ptr2, len2);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} sender_fingerprint\n * @param {string} recipient_fingerprint\n * @param {string} content\n * @returns {any}\n */\nexport function create_direct_message(sender_fingerprint, recipient_fingerprint, content) {\n    const ptr0 = passStringToWasm0(sender_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(recipient_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.create_direct_message(ptr0, len0, ptr1, len1, ptr2, len2);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} message_json\n * @param {string} keypair_json\n * @returns {any}\n */\nexport function sign_message(message_json, keypair_json) {\n    const ptr0 = passStringToWasm0(message_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.sign_message(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} signed_message_json\n * @param {string} public_key\n * @returns {boolean}\n */\nexport function verify_message(signed_message_json, public_key) {\n    const ptr0 = passStringToWasm0(signed_message_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_message(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\n/**\n * @returns {any}\n */\nexport function generate_keypair() {\n    const ret = wasm.generate_keypair();\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} keypair_json\n * @param {string} data\n * @returns {string}\n */\nexport function sign_data(keypair_json, data) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.sign_data(ptr0, len0, ptr1, len1);\n        var ptr3 = ret[0];\n        var len3 = ret[1];\n        if (ret[3]) {\n            ptr3 = 0; len3 = 0;\n            throw takeFromExternrefTable0(ret[2]);\n        }\n        deferred4_0 = ptr3;\n        deferred4_1 = len3;\n        return getStringFromWasm0(ptr3, len3);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\n/**\n * @param {string} data\n * @param {string} signature\n * @param {string} public_key\n * @returns {boolean}\n */\nexport function verify_signature_wasm(data, signature, public_key) {\n    const ptr0 = passStringToWasm0(data, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(signature, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_signature_wasm(ptr0, len0, ptr1, len1, ptr2, len2);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    for (let i = 0; i < array.length; i++) {\n        const add = addToExternrefTable0(array[i]);\n        getDataViewMemory0().setUint32(ptr + 4 * i, add, true);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n/**\n * @param {string} key\n * @param {string} value\n */\nexport function storage_set_item(key, value) {\n    const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.storage_set_item(ptr0, len0, ptr1, len1);\n    if (ret[1]) {\n        throw takeFromExternrefTable0(ret[0]);\n    }\n}\n\n/**\n * @param {string} key\n * @returns {any}\n */\nexport function storage_get_item(key) {\n    const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.storage_get_item(ptr0, len0);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} key\n */\nexport function storage_remove_item(key) {\n    const ptr0 = passStringToWasm0(key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.storage_remove_item(ptr0, len0);\n    if (ret[1]) {\n        throw takeFromExternrefTable0(ret[0]);\n    }\n}\n\n/**\n * @param {string} author_fingerprint\n * @param {string} content\n * @param {string[] | null} [tags]\n * @param {string | null} [reply_to]\n * @returns {any}\n */\nexport function create_post(author_fingerprint, content, tags, reply_to) {\n    const ptr0 = passStringToWasm0(author_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(tags) ? 0 : passArrayJsValueToWasm0(tags, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(reply_to) ? 0 : passStringToWasm0(reply_to, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    const ret = wasm.create_post(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} post_json\n * @param {string} keypair_json\n * @returns {any}\n */\nexport function sign_post(post_json, keypair_json) {\n    const ptr0 = passStringToWasm0(post_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(keypair_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.sign_post(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return takeFromExternrefTable0(ret[0]);\n}\n\n/**\n * @param {string} signed_post_json\n * @param {string} public_key\n * @returns {boolean}\n */\nexport function verify_post(signed_post_json, public_key) {\n    const ptr0 = passStringToWasm0(signed_post_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(public_key, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_post(ptr0, len0, ptr1, len1);\n    if (ret[2]) {\n        throw takeFromExternrefTable0(ret[1]);\n    }\n    return ret[0] !== 0;\n}\n\nexport function main() {\n    wasm.main();\n}\n\nexport function init_core() {\n    const ret = wasm.init_core();\n    if (ret[1]) {\n        throw takeFromExternrefTable0(ret[0]);\n    }\n}\n\nconst SnartNetCoreFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_snartnetcore_free(ptr >>> 0, 1));\n\nexport class SnartNetCore {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        SnartNetCoreFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_snartnetcore_free(ptr, 0);\n    }\n    constructor() {\n        const ret = wasm.snartnetcore_new();\n        this.__wbg_ptr = ret >>> 0;\n        SnartNetCoreFinalization.register(this, this.__wbg_ptr, this);\n        return this;\n    }\n    init() {\n        const ret = wasm.snartnetcore_init(this.__wbg_ptr);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {string} username\n     * @param {string | null} [display_name]\n     * @param {string | null} [bio]\n     * @returns {string}\n     */\n    create_profile(username, display_name, bio) {\n        let deferred5_0;\n        let deferred5_1;\n        try {\n            const ptr0 = passStringToWasm0(username, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            var ptr1 = isLikeNone(display_name) ? 0 : passStringToWasm0(display_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len1 = WASM_VECTOR_LEN;\n            var ptr2 = isLikeNone(bio) ? 0 : passStringToWasm0(bio, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len2 = WASM_VECTOR_LEN;\n            const ret = wasm.snartnetcore_create_profile(this.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2);\n            var ptr4 = ret[0];\n            var len4 = ret[1];\n            if (ret[3]) {\n                ptr4 = 0; len4 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred5_0 = ptr4;\n            deferred5_1 = len4;\n            return getStringFromWasm0(ptr4, len4);\n        } finally {\n            wasm.__wbindgen_free(deferred5_0, deferred5_1, 1);\n        }\n    }\n    /**\n     * @returns {any}\n     */\n    get_current_profile() {\n        const ret = wasm.snartnetcore_get_current_profile(this.__wbg_ptr);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {string | null} [display_name]\n     * @param {string | null} [bio]\n     */\n    update_current_profile(display_name, bio) {\n        var ptr0 = isLikeNone(display_name) ? 0 : passStringToWasm0(display_name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(bio) ? 0 : passStringToWasm0(bio, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        const ret = wasm.snartnetcore_update_current_profile(this.__wbg_ptr, ptr0, len0, ptr1, len1);\n        if (ret[1]) {\n            throw takeFromExternrefTable0(ret[0]);\n        }\n    }\n    /**\n     * @param {string} content\n     * @param {string[] | null} [tags]\n     * @param {string | null} [reply_to]\n     * @returns {any}\n     */\n    create_post(content, tags, reply_to) {\n        const ptr0 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        var ptr1 = isLikeNone(tags) ? 0 : passArrayJsValueToWasm0(tags, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(reply_to) ? 0 : passStringToWasm0(reply_to, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        const ret = wasm.snartnetcore_create_post(this.__wbg_ptr, ptr0, len0, ptr1, len1, ptr2, len2);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @param {string} recipient_fingerprint\n     * @param {string} content\n     * @returns {any}\n     */\n    create_message(recipient_fingerprint, content) {\n        const ptr0 = passStringToWasm0(recipient_fingerprint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(content, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.snartnetcore_create_message(this.__wbg_ptr, ptr0, len0, ptr1, len1);\n        if (ret[2]) {\n            throw takeFromExternrefTable0(ret[1]);\n        }\n        return takeFromExternrefTable0(ret[0]);\n    }\n    /**\n     * @returns {string}\n     */\n    get_public_key() {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.snartnetcore_get_public_key(this.__wbg_ptr);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @returns {string}\n     */\n    get_fingerprint() {\n        let deferred2_0;\n        let deferred2_1;\n        try {\n            const ret = wasm.snartnetcore_get_fingerprint(this.__wbg_ptr);\n            var ptr1 = ret[0];\n            var len1 = ret[1];\n            if (ret[3]) {\n                ptr1 = 0; len1 = 0;\n                throw takeFromExternrefTable0(ret[2]);\n            }\n            deferred2_0 = ptr1;\n            deferred2_1 = len1;\n            return getStringFromWasm0(ptr1, len1);\n        } finally {\n            wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    has_profile() {\n        const ret = wasm.snartnetcore_has_profile(this.__wbg_ptr);\n        return ret !== 0;\n    }\n}\nif (Symbol.dispose) SnartNetCore.prototype[Symbol.dispose] = SnartNetCore.prototype.free;\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_String_8f0eb39a4a4c2f66 = function(arg0, arg1) {\n        const ret = String(arg1);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_call_13410aac570ffff7 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_a5400b25a865cfd8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_crypto_574e78ad8b13b65f = function(arg0) {\n        const ret = arg0.crypto;\n        return ret;\n    };\n    imports.wbg.__wbg_error_7534b8e9a36f1ab4 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_getItem_9fc74b31b896f95a = function() { return handleError(function (arg0, arg1, arg2, arg3) {\n        const ret = arg1.getItem(getStringFromWasm0(arg2, arg3));\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_38a1ff1ea09f6cc7 = function() { return handleError(function (arg0, arg1) {\n        globalThis.crypto.getRandomValues(getArrayU8FromWasm0(arg0, arg1));\n    }, arguments) };\n    imports.wbg.__wbg_getRandomValues_b8f5dbd5f3995a9e = function() { return handleError(function (arg0, arg1) {\n        arg0.getRandomValues(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_getTime_6bb3f64e0f18f817 = function(arg0) {\n        const ret = arg0.getTime();\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Window_12d20d558ef92592 = function(arg0) {\n        let result;\n        try {\n            result = arg0 instanceof Window;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_length_6bb7e81f9d7713e4 = function(arg0) {\n        const ret = arg0.length;\n        return ret;\n    };\n    imports.wbg.__wbg_localStorage_9330af8bf39365ba = function() { return handleError(function (arg0) {\n        const ret = arg0.localStorage;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    }, arguments) };\n    imports.wbg.__wbg_log_6c7b5f4f00b8ce3f = function(arg0) {\n        console.log(arg0);\n    };\n    imports.wbg.__wbg_msCrypto_a61aeb35a24c1329 = function(arg0) {\n        const ret = arg0.msCrypto;\n        return ret;\n    };\n    imports.wbg.__wbg_new0_b0a0a38c201e6df5 = function() {\n        const ret = new Date();\n        return ret;\n    };\n    imports.wbg.__wbg_new_19c25a3f2fa63a02 = function() {\n        const ret = new Object();\n        return ret;\n    };\n    imports.wbg.__wbg_new_1f3a344cf3123716 = function() {\n        const ret = new Array();\n        return ret;\n    };\n    imports.wbg.__wbg_new_8a6f238a6ece86ea = function() {\n        const ret = new Error();\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_254190557c45b4ec = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_a167dcc7aaa3ba77 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_node_905d3e251edff8a2 = function(arg0) {\n        const ret = arg0.node;\n        return ret;\n    };\n    imports.wbg.__wbg_process_dc0fbacc7c1c06f7 = function(arg0) {\n        const ret = arg0.process;\n        return ret;\n    };\n    imports.wbg.__wbg_prototypesetcall_3d4a26c1ed734349 = function(arg0, arg1, arg2) {\n        Uint8Array.prototype.set.call(getArrayU8FromWasm0(arg0, arg1), arg2);\n    };\n    imports.wbg.__wbg_randomFillSync_ac0988aba3254290 = function() { return handleError(function (arg0, arg1) {\n        arg0.randomFillSync(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_removeItem_487c5a070c7adaf7 = function() { return handleError(function (arg0, arg1, arg2) {\n        arg0.removeItem(getStringFromWasm0(arg1, arg2));\n    }, arguments) };\n    imports.wbg.__wbg_require_60cc747a6bc5215a = function() { return handleError(function () {\n        const ret = module.require;\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_setItem_7add5eb06a28b38f = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        arg0.setItem(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_set_3f1d0b984ed272ed = function(arg0, arg1, arg2) {\n        arg0[arg1] = arg2;\n    };\n    imports.wbg.__wbg_set_90f6c0f7bd8c0415 = function(arg0, arg1, arg2) {\n        arg0[arg1 >>> 0] = arg2;\n    };\n    imports.wbg.__wbg_stack_0ed75d68575b0f3c = function(arg0, arg1) {\n        const ret = arg1.stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_8921f820c2ce3f12 = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_f0a4409105898184 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_995b214ae681ff99 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_cde3890479c675ea = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_subarray_70fd07feefe14294 = function(arg0, arg1, arg2) {\n        const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_versions_c01dfd4722a88165 = function(arg0) {\n        const ret = arg0.versions;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisfunction_8cee7dce3725ae74 = function(arg0) {\n        const ret = typeof(arg0) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisobject_307a53c6bd97fbf8 = function(arg0) {\n        const val = arg0;\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisstring_d4fa939789f003b0 = function(arg0) {\n        const ret = typeof(arg0) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenisundefined_c4b71d073b92f3c5 = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_wbindgenstringget_0f16a6ddddef376f = function(arg0, arg1) {\n        const obj = arg1;\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_wbindgenthrow_451ec1a8469d7eb6 = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_cast_2241b6af4c4b2941 = function(arg0, arg1) {\n        // Cast intrinsic for `Ref(String) -> Externref`.\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_cb9088102bce6b30 = function(arg0, arg1) {\n        // Cast intrinsic for `Ref(Slice(U8)) -> NamedExternref(\"Uint8Array\")`.\n        const ret = getArrayU8FromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_cast_d6cd19b81560fd6e = function(arg0) {\n        // Cast intrinsic for `F64 -> Externref`.\n        const ret = arg0;\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_4;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('snartnet_core_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n","import type { Profile } from '@/stores/profileStore'\nimport type { TorrentPost } from '@/stores/postStore'\n\n// ---- Post Index (Chain) Concept -------------------------------------------------\n// Each index torrent is a JSON file containing up to N (e.g. 200) post references.\n// A reference has basic metadata needed for preview & deciding whether to fetch full post torrent.\n// The index file also contains a pointer to the next (older) index magnet URI, or null if end.\n// This creates a backward-linked list (chain) enabling clients to paginate historically\n// without needing a global catalog. Clients choose a cut-off using:\n//   - maxPosts\n//   - since timestamp (ISO) OR months lookback\n// Index JSON shape (v1):\n// {\n//   \"version\": 1,\n//   \"author\": \"<username or pubkey>\",\n//   \"generatedAt\": \"ISO timestamp\",\n//   \"posts\": [ { id, magnetUri, author, createdAt, tags?, size?, infoHash? } ],\n//   \"next\": \"magnet:?xt=...\" | null,\n//   \"count\": <number of posts in this chunk>\n// }\n// Seeding strategy: when local posts change, optionally rebuild head index chunk(s)\n// and seed new head; previous head becomes next in chain if content diverged.\n// NOTE: For now we implement simple full rebuild creating a single chunk and seeding it.\n\ninterface PostIndexEntry {\n  id: string\n  magnetUri: string\n  author: string\n  createdAt: string\n  tags?: string[]\n  infoHash?: string\n  size?: number\n}\n\ninterface PostIndexFileV1 {\n  version: 1\n  author: string\n  generatedAt: string\n  posts: PostIndexEntry[]\n  next: string | null\n  count: number\n}\n\nexport interface DownloadPostIndexOptions {\n  maxPosts?: number\n  since?: string // ISO timestamp\n  monthsLookback?: number // Alternative to since\n  maxChunks?: number // Safety cap on chain depth\n  signal?: AbortSignal\n}\n\nexport interface DownloadedPostIndexResult {\n  entries: PostIndexEntry[]\n  truncated: boolean // true if stopped due to limits\n  chunksFetched: number\n  nextPointer: string | null\n}\n\n// Simple torrent service that works in both browser and build\nclass TorrentService {\n  private client: any = null\n  private activeTorrents: Map<string, any> = new Map()\n  private eventCallbacks: Array<(event: any) => void> = []\n  private readyPromise: Promise<void>\n  private resolveReady!: () => void\n  private clientReady = false\n  private pendingSeeds: Array<() => void> = []\n  private stats = {\n    torrents: 0,\n    downloadSpeed: 0,\n    uploadSpeed: 0,\n    downloaded: 0,\n    uploaded: 0,\n    peers: 0\n  }\n\n  constructor() {\n    this.readyPromise = new Promise(resolve => {\n      this.resolveReady = resolve\n    })\n    this.initializeClient()\n  }\n\n  private async initializeClient() {\n    if (typeof window === 'undefined') return\n    let attempts = 0\n    const maxAttempts = 10\n    const customTrackers = [\n      'wss://tracker.webtorrent.dev',\n      'wss://tracker.openwebtorrent.com',\n      'udp://tracker.openbittorrent.com:6969',\n      'udp://tracker.openbittorrent.com:80',\n      'udp://tracker.coppersurfer.tk:6969',\n      'udp://9.rarbg.to:2710',\n      'udp://tracker.leechers-paradise.org:6969'\n    ];\n\n  const tryInit = () => {\n      attempts++\n      const WebTorrentConstructor = (window as any).WebTorrent\n      if (!WebTorrentConstructor || typeof WebTorrentConstructor !== 'function') {\n        if (attempts < maxAttempts) {\n          console.warn(`[TorrentService] WebTorrent not available yet (attempt ${attempts}), retrying...`)\n          setTimeout(tryInit, 500)\n          return\n        } else {\n          const err = new Error('WebTorrent not available after retries')\n          console.error('[TorrentService] ', err)\n          this.emitEvent({ type: 'error', error: err.message })\n          return\n        }\n      }\n\n      try {\n        // Configure WebTorrent with only our custom trackers\n        this.client = new WebTorrentConstructor({\n          announce: customTrackers,\n          announceList: [customTrackers],\n          dht: true, // Enable DHT for better peer discovery\n          webSeeds: false // Disable web seeds for now\n        })\n        // Increase max listeners to avoid EventEmitter warnings\n        if (typeof this.client.setMaxListeners === 'function') {\n          this.client.setMaxListeners(30)\n        } else if (this.client && this.client._events && typeof this.client._events === 'object') {\n          // Defensive: try to set on prototype if available\n          try { this.client.constructor?.prototype?.setMaxListeners?.(30) } catch {}\n        }\n        this.clientReady = true\n        this.client.on('error', (err: any) => {\n          console.error('[TorrentService] Client error:', err)\n          this.emitEvent({ type: 'error', error: err.message })\n        })\n        this.client.on('torrent', (torrent: any) => {\n          console.log('[TorrentService] Torrent added:', { name: torrent.name, infoHash: torrent.infoHash })\n          this.activeTorrents.set(torrent.infoHash, torrent)\n          this.emitEvent({ type: 'torrent-added', torrent })\n          this.updateStats()\n        })\n        console.log('[TorrentService] WebTorrent client initialized successfully')\n        this.resolveReady()\n        // Flush pending seeds\n        const queue = [...this.pendingSeeds]\n        this.pendingSeeds = []\n        queue.forEach(fn => {\n          try { fn() } catch (e) { console.error('[TorrentService] Pending seed failed:', e) }\n        })\n      } catch (error) {\n        console.error('[TorrentService] Failed to initialize:', error)\n        this.emitEvent({ type: 'error', error: String(error) })\n      }\n    }\n\n    tryInit()\n  }\n\n  private emitEvent(event: any) {\n    this.eventCallbacks.forEach(callback => {\n      try {\n        callback(event)\n      } catch (err) {\n        console.error('Error in event callback:', err)\n      }\n    })\n  }\n\n  private updateStats() {\n    if (!this.client) return\n    \n    try {\n      this.stats = {\n        torrents: this.client.torrents.length,\n        downloadSpeed: this.client.downloadSpeed || 0,\n        uploadSpeed: this.client.uploadSpeed || 0,\n        downloaded: this.client.downloaded || 0,\n        uploaded: this.client.uploaded || 0,\n        peers: this.client.torrents.reduce((total: number, torrent: any) => {\n          return total + (torrent.numPeers || 0)\n        }, 0)\n      }\n    } catch (error) {\n      console.error('Error updating stats:', error)\n    }\n  }\n\n  async seedProfile(profile: Profile): Promise<string> {\n    await this.readyPromise\n    if (!this.client) {\n      throw new Error('WebTorrent client not initialized. Are you in a browser environment?')\n    }\n\n    try {\n      const profileData = JSON.stringify(profile, null, 2)\n      const fileName = `${profile.username}_profile.json`\n      \n      // Ensure UTF-8 encoding by converting to Uint8Array first\n      const encoder = new TextEncoder()\n      const encodedData = encoder.encode(profileData)\n      const file = new File([encodedData], fileName, { \n        type: 'application/json; charset=utf-8' \n      })\n\n      return new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Seeding timeout'))\n        }, 10000)\n\n        try {\n          console.log('Seeding profile file:', {\n            fileName,\n            fileSize: file.size,\n            fileType: file.type,\n            profileDataLength: profileData.length\n          })\n          \n          const customTrackers = [\n            'wss://tracker.webtorrent.dev',\n            'wss://tracker.openwebtorrent.com',\n            'udp://tracker.openbittorrent.com:6969',\n            'udp://tracker.openbittorrent.com:80'\n          ];\n          const torrent = this.client.seed([file], {\n            announce: customTrackers,\n            announceList: [customTrackers]\n          }, (torrent: any) => {\n            clearTimeout(timeoutId)\n            console.log('Profile seeded successfully:', { \n              magnetURI: torrent.magnetURI,\n              infoHash: torrent.infoHash,\n              numPeers: torrent.numPeers\n            })\n            this.emitEvent({ \n              type: 'seeding-started', \n              profile, \n              magnetURI: torrent.magnetURI \n            })\n            resolve(torrent.magnetURI)\n          })\n\n          torrent.on('error', (err: any) => {\n            clearTimeout(timeoutId)\n            this.emitEvent({ type: 'error', error: err.message })\n            reject(err)\n          })\n\n          torrent.on('warning', (err: any) => {\n            if (err.message && err.message.includes('tracker')) {\n              console.warn('[TorrentService] Profile tracker warning (expected):', err.message)\n            }\n          })\n\n          torrent.on('wire', (wire: any) => {\n            this.emitEvent({ \n              type: 'peer-connected', \n              peerId: wire.peerId || 'unknown' \n            })\n          })\n\n          torrent.on('upload', () => {\n            this.emitEvent({ \n              type: 'upload-progress', \n              uploadSpeed: torrent.uploadSpeed || 0 \n            })\n            this.updateStats()\n          })\n        } catch (error) {\n          clearTimeout(timeoutId)\n          reject(error)\n        }\n      })\n    } catch (error) {\n      console.error('Error seeding profile:', error)\n      throw error\n    }\n  }\n\n  private ensureReadyAction(action: () => void) {\n    if (this.clientReady) {\n      action()\n    } else {\n      console.log('[TorrentService] Client not ready, queuing action')\n      this.pendingSeeds.push(action)\n    }\n  }\n\n  async seedPost(post: Omit<TorrentPost, 'id' | 'createdAt'>): Promise<string> {\n    await this.readyPromise\n    if (!this.client || !this.clientReady) {\n      throw new Error('WebTorrent client not ready for seeding')\n    }\n\n    const startTime = performance.now()\n    console.log('[TorrentService] Seeding post start', { author: post.author, hasImages: !!post.images?.length, signed: !!(post as any).signature })\n\n    const postData = JSON.stringify(post, null, 2)\n    const fileName = `post_${Date.now()}.json`\n    const encodedData = new TextEncoder().encode(postData)\n    const file = new File([encodedData], fileName, { type: 'application/json; charset=utf-8' })\n\n    return new Promise((resolve, reject) => {\n      let resolved = false\n      let trackerWarningsShown = false\n      \n      const seedAction = () => {\n        try {\n          const customTrackers = [\n            'wss://tracker.webtorrent.dev',\n            'wss://tracker.openwebtorrent.com',\n            'udp://tracker.openbittorrent.com:6969',\n            'udp://tracker.openbittorrent.com:80'\n          ];\n          const torrent = this.client.seed([file], {\n            announce: customTrackers,\n            announceList: [customTrackers]\n          }, (torrent: any) => {\n            resolved = true\n            const duration = (performance.now() - startTime).toFixed(0)\n            console.log('[TorrentService] Post torrent ready', { \n              infoHash: torrent.infoHash, \n              magnet: torrent.magnetURI, \n              durationMs: duration,\n              numPeers: torrent.numPeers \n            })\n            this.emitEvent({ type: 'seeding-started', post, magnetURI: torrent.magnetURI })\n            resolve(torrent.magnetURI)\n          })\n\n          torrent.on('error', (err: any) => {\n            if (!resolved) {\n              console.error('[TorrentService] Torrent error before ready:', err)\n              reject(err)\n            } else {\n              console.warn('[TorrentService] Torrent error after ready (non-fatal):', err)\n            }\n          })\n\n          // Handle tracker warnings gracefully\n          torrent.on('warning', (err: any) => {\n            if (!trackerWarningsShown && err.message && err.message.includes('tracker')) {\n              console.warn('[TorrentService] Tracker warning (expected, trying alternatives):', err.message)\n              trackerWarningsShown = true\n            }\n          })\n\n          torrent.on('wire', (wire: any) => {\n            this.emitEvent({ type: 'peer-connected', peerId: wire.peerId || 'unknown' })\n          })\n\n          // Log successful tracker connections\n          torrent.on('peer', (peer: any) => {\n            console.log('[TorrentService] Peer connected for post torrent:', peer.id || 'unknown')\n          })\n        } catch (e) {\n          console.error('[TorrentService] Seed action failed synchronously:', e)\n          reject(e)\n        }\n      }\n\n      this.ensureReadyAction(seedAction)\n\n      // Timeout safeguard\n      setTimeout(() => {\n        if (!resolved) {\n          reject(new Error('Seeding post timed out'))\n        }\n      }, 15000)\n    })\n  }\n\n  // ---------------- Post Index Seeding ----------------\n  async seedPostIndex(posts: TorrentPost[], authorId: string, options?: { chunkSize?: number; previousHeadMagnet?: string | null }): Promise<{ magnetURI: string; count: number }> {\n    await this.readyPromise\n    if (!this.client || !this.clientReady) {\n      throw new Error('WebTorrent client not ready for seeding index')\n    }\n    const chunkSize = options?.chunkSize || 200\n    const slice = posts\n      .slice() // copy\n      .sort((a,b)=> new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n      .slice(0, chunkSize)\n\n    const indexFile: PostIndexFileV1 = {\n      version: 1,\n      author: authorId,\n      generatedAt: new Date().toISOString(),\n      posts: slice.map(p => ({\n        id: p.id,\n        magnetUri: p.magnetUri || '',\n        author: p.author,\n        createdAt: p.createdAt,\n        tags: p.tags,\n      })),\n      next: options?.previousHeadMagnet || null,\n      count: slice.length,\n    }\n\n    const json = JSON.stringify(indexFile, null, 2)\n    const file = new File([new TextEncoder().encode(json)], `post_index_${Date.now()}.json`, { type: 'application/json; charset=utf-8' })\n\n    return new Promise((resolve, reject) => {\n      try {\n        const customTrackers = [\n          'wss://tracker.webtorrent.dev',\n          'wss://tracker.openwebtorrent.com',\n          'udp://tracker.openbittorrent.com:6969',\n          'udp://tracker.openbittorrent.com:80'\n        ];\n        const torrent = this.client.seed([file], {\n          announce: customTrackers,\n          announceList: [customTrackers]\n        }, (torrent: any) => {\n          console.log('[TorrentService] Post index seeded successfully:', {\n            magnetURI: torrent.magnetURI,\n            count: indexFile.count,\n            numPeers: torrent.numPeers\n          })\n          this.emitEvent({ type: 'post-index-seeded', magnetURI: torrent.magnetURI, count: indexFile.count })\n          resolve({ magnetURI: torrent.magnetURI, count: indexFile.count })\n        })\n        \n        torrent.on('error', (err: any) => {\n          console.error('[TorrentService] Post index torrent error:', err)\n          reject(err)\n        })\n        \n        torrent.on('warning', (err: any) => {\n          if (err.message && err.message.includes('tracker')) {\n            console.warn('[TorrentService] Post index tracker warning (expected):', err.message)\n          }\n        })\n      } catch (e) {\n        console.error('[TorrentService] Failed to seed post index:', e)\n        reject(e)\n      }\n    })\n  }\n\n  // ---------------- Post Index Download ----------------\n  async downloadPostIndexChain(headMagnetURI: string, opts: DownloadPostIndexOptions = {}): Promise<DownloadedPostIndexResult> {\n    await this.readyPromise\n    if (!this.client) throw new Error('WebTorrent client not initialized')\n    const maxPosts = opts.maxPosts ?? 500\n    const maxChunks = opts.maxChunks ?? 20\n    let sinceTs: number | null = null\n    if (opts.since) {\n      sinceTs = new Date(opts.since).getTime()\n    } else if (opts.monthsLookback) {\n      const d = new Date()\n      d.setMonth(d.getMonth() - opts.monthsLookback)\n      sinceTs = d.getTime()\n    }\n\n    const collected: PostIndexEntry[] = []\n    let currentMagnet: string | null = headMagnetURI\n    let chunks = 0\n    let truncated = false\n    let nextPointer: string | null = null\n\n    while (currentMagnet && chunks < maxChunks && collected.length < maxPosts) {\n      if (opts.signal?.aborted) throw new Error('Aborted')\n      const { indexData, next } = await this.downloadSingleIndex(currentMagnet)\n      chunks++\n      this.emitEvent({ type: 'post-index-downloaded', magnetURI: currentMagnet, count: indexData.count })\n\n      for (const entry of indexData.posts) {\n        if (collected.length >= maxPosts) { truncated = true; break }\n        if (sinceTs) {\n          const ts = new Date(entry.createdAt).getTime()\n            if (isNaN(ts)) continue\n          if (ts < sinceTs) { truncated = true; break }\n        }\n        collected.push(entry)\n      }\n      if (truncated) break\n      currentMagnet = next\n      nextPointer = next\n    }\n\n    return { entries: collected, truncated, chunksFetched: chunks, nextPointer }\n  }\n\n  private async downloadSingleIndex(magnetURI: string): Promise<{ indexData: PostIndexFileV1; next: string | null }> {\n    return new Promise((resolve, reject) => {\n      try {\n        const torrent = this.client.add(magnetURI, () => {\n          // torrent metadata fetch initiated\n        })\n        const timeout = setTimeout(() => reject(new Error('Index download timeout')), 20000)\n        torrent.on('done', () => {\n          clearTimeout(timeout)\n          const file = torrent.files.find((f: any) => f.name && f.name.startsWith('post_index_'))\n          if (!file) return reject(new Error('Index file not found in torrent'))\n          file.getBuffer((err: any, buffer: any) => {\n            if (err) return reject(err)\n            try {\n              let jsonStr: string\n              if (buffer instanceof ArrayBuffer) {\n                jsonStr = new TextDecoder('utf-8').decode(new Uint8Array(buffer))\n              } else if (buffer && typeof buffer.toString === 'function') {\n                jsonStr = buffer.toString('utf8')\n              } else {\n                jsonStr = String(buffer)\n              }\n              const parsed = JSON.parse(jsonStr) as PostIndexFileV1\n              if (parsed.version !== 1) return reject(new Error('Unsupported index version'))\n              resolve({ indexData: parsed, next: parsed.next || null })\n            } catch (e) {\n              reject(e)\n            }\n          })\n        })\n        torrent.on('error', (err: any) => reject(err))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  async downloadProfile(magnetURI: string): Promise<Profile | null> {\n    await this.readyPromise\n    if (!this.client) {\n      throw new Error('WebTorrent client not initialized. Are you in a browser environment?')\n    }\n\n    try {\n      return new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n          reject(new Error('Download timeout - no peers found'))\n        }, 30000)\n\n        try {\n          const torrent = this.client.add(magnetURI, (torrent: any) => {\n            console.log('Started downloading torrent:', torrent.name || 'unnamed')\n          })\n\n          torrent.on('done', () => {\n            clearTimeout(timeoutId)\n            \n            const profileFile = torrent.files.find((file: any) => \n              file.name && file.name.endsWith('_profile.json')\n            )\n            \n            if (profileFile) {\n              profileFile.getBuffer((err: any, buffer: any) => {\n                if (err) {\n                  this.emitEvent({ type: 'error', error: err.message })\n                  reject(err)\n                  return\n                }\n\n                try {\n                  // Convert buffer to string with proper encoding handling\n                  let jsonString: string\n                  \n                  if (buffer instanceof ArrayBuffer) {\n                    // Handle ArrayBuffer\n                    const uint8Array = new Uint8Array(buffer)\n                    const decoder = new TextDecoder('utf-8', { fatal: false })\n                    jsonString = decoder.decode(uint8Array)\n                  } else if (buffer && typeof buffer.toString === 'function') {\n                    // Handle Buffer-like objects\n                    jsonString = buffer.toString('utf8')\n                  } else {\n                    // Fallback for other buffer types\n                    jsonString = String(buffer)\n                  }\n\n                  // Parse the JSON\n                  const profileData = JSON.parse(jsonString)\n                  this.emitEvent({ type: 'profile-downloaded', profile: profileData })\n                  resolve(profileData)\n                } catch (parseError) {\n                  console.error('Profile parsing error:', parseError)\n                  console.error('Buffer type:', typeof buffer)\n                  console.error('Buffer constructor:', buffer?.constructor?.name)\n                  this.emitEvent({ \n                    type: 'error', \n                    error: `Failed to parse profile data: ${parseError instanceof Error ? parseError.message : 'Unknown error'}`\n                  })\n                  reject(parseError)\n                }\n              })\n            } else {\n              const error = 'Profile file not found in torrent'\n              this.emitEvent({ type: 'error', error })\n              reject(new Error(error))\n            }\n          })\n\n          torrent.on('download', () => {\n            this.emitEvent({ \n              type: 'download-progress', \n              progress: torrent.progress || 0,\n              downloadSpeed: torrent.downloadSpeed || 0\n            })\n            this.updateStats()\n          })\n\n          torrent.on('error', (err: any) => {\n            clearTimeout(timeoutId)\n            this.emitEvent({ type: 'error', error: err.message })\n            reject(err)\n          })\n        } catch (error) {\n          clearTimeout(timeoutId)\n          reject(error)\n        }\n      })\n    } catch (error) {\n      console.error('Error downloading profile:', error)\n      throw error\n    }\n  }\n\n  // Download a single post JSON torrent (expects a file named starting with 'post_' and .json)\n  async downloadPost(magnetURI: string): Promise<any | null> {\n    await this.readyPromise\n    if (!this.client) throw new Error('WebTorrent client not initialized')\n    return new Promise((resolve, reject) => {\n      try {\n        const torrent = this.client.add(magnetURI, () => {})\n        const timeout = setTimeout(() => reject(new Error('Post download timeout')), 20000)\n        torrent.on('done', () => {\n          clearTimeout(timeout)\n            const file = torrent.files.find((f: any) => f.name && f.name.startsWith('post_') && f.name.endsWith('.json'))\n            if (!file) return reject(new Error('Post JSON file not found in torrent'))\n            file.getBuffer((err: any, buffer: any) => {\n              if (err) return reject(err)\n              try {\n                let jsonStr: string\n                if (buffer instanceof ArrayBuffer) {\n                  jsonStr = new TextDecoder('utf-8').decode(new Uint8Array(buffer))\n                } else if (buffer && typeof buffer.toString === 'function') {\n                  jsonStr = buffer.toString('utf8')\n                } else {\n                  jsonStr = String(buffer)\n                }\n                const parsed = JSON.parse(jsonStr)\n                resolve(parsed)\n              } catch (e) {\n                reject(e)\n              }\n            })\n        })\n        torrent.on('error', (err: any) => reject(err))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  getStats() {\n    this.updateStats()\n    return { ...this.stats }\n  }\n\n  getActiveTorrents() {\n    if (!this.client) return []\n    \n    try {\n      return this.client.torrents.map((torrent: any) => ({\n        infoHash: torrent.infoHash || '',\n        name: torrent.name || 'Unnamed Torrent',\n        magnetURI: torrent.magnetURI || '',\n        progress: torrent.progress || 0,\n        downloadSpeed: torrent.downloadSpeed || 0,\n        uploadSpeed: torrent.uploadSpeed || 0,\n        numPeers: torrent.numPeers || 0,\n        downloaded: torrent.downloaded || 0,\n        uploaded: torrent.uploaded || 0\n      }))\n    } catch (error) {\n      console.error('Error getting active torrents:', error)\n      return []\n    }\n  }\n\n  onEvent(callback: (event: TorrentEvent) => void): () => void {\n    this.eventCallbacks.push(callback)\n    return () => {\n      const index = this.eventCallbacks.indexOf(callback)\n      if (index > -1) {\n        this.eventCallbacks.splice(index, 1)\n      }\n    }\n  }\n\n  stopSeeding(infoHash: string): boolean {\n    if (!this.client) return false\n    \n    try {\n      const torrent = this.client.get(infoHash)\n      if (torrent) {\n        this.client.remove(torrent)\n        this.activeTorrents.delete(infoHash)\n        this.updateStats()\n        return true\n      }\n      return false\n    } catch (error) {\n      console.error('Error stopping torrent seeding:', error)\n      return false\n    }\n  }\n\n  destroy() {\n    try {\n      if (this.client && typeof this.client.destroy === 'function') {\n        this.client.destroy()\n      }\n    } catch (error) {\n      console.error('Error destroying torrent client:', error)\n    }\n  }\n}\n\n// Global service instance\nlet torrentServiceInstance: TorrentService | null = null\n\nexport function getTorrentService(): TorrentService {\n  if (!torrentServiceInstance) {\n    torrentServiceInstance = new TorrentService()\n    // Global cleanup on window unload\n    if (typeof window !== 'undefined' && typeof window.addEventListener === 'function') {\n      window.addEventListener('beforeunload', () => {\n        try {\n          torrentServiceInstance?.destroy()\n        } catch (e) {\n          // Ignore\n        }\n      })\n    }\n  }\n  return torrentServiceInstance\n}\n\n// Event types for better type safety\nexport type TorrentEvent = \n  | { type: 'seeding-started'; profile: Profile; magnetURI: string }\n  | { type: 'seeding-started'; post: Omit<TorrentPost, 'id' | 'createdAt'>; magnetURI: string }\n  | { type: 'peer-connected'; peerId: string }\n  | { type: 'upload-progress'; uploadSpeed: number }\n  | { type: 'profile-downloaded'; profile: Profile }\n  | { type: 'download-progress'; progress: number; downloadSpeed: number }\n  | { type: 'error'; error: string }\n  | { type: 'torrent-added'; torrent: any }\n  | { type: 'download-complete'; torrent: any }\n  | { type: 'post-index-seeded'; magnetURI: string; count: number }\n  | { type: 'post-index-downloaded'; magnetURI: string; count: number }\n\nexport { TorrentService }\nexport default getTorrentService","import { useState, useEffect } from 'react'\nimport initWasm, { SnartNetCore as WasmCore, init_core } from '../wasm/snartnet_core'\nimport { getTorrentService } from './torrent'\nimport profileSchema from '../schemas/profile.v1.json'\nimport postSchema from '../schemas/post.v1.json'\n\n// Normalized types\nexport interface NormalizedProfile {\n  id: string\n  username: string\n  displayName?: string\n  bio?: string\n  avatarHash?: string\n  publicKey: string\n  fingerprint: string\n  createdAt: string\n  updatedAt: string\n  version: number\n  magnetUri?: string\n  schemaVersion: 1\n}\n\nfunction normalizeProfile(raw: any): NormalizedProfile | null {\n  if (!raw) return null\n  return {\n    id: raw.id,\n    username: raw.username,\n    displayName: raw.display_name || raw.displayName || undefined,\n    bio: raw.bio || undefined,\n    avatarHash: raw.avatar_hash || raw.avatarHash || undefined,\n    publicKey: raw.public_key || raw.publicKey,\n    fingerprint: raw.fingerprint,\n    createdAt: typeof raw.created_at === 'string' ? raw.created_at : raw.createdAt,\n    updatedAt: typeof raw.updated_at === 'string' ? raw.updated_at : raw.updatedAt,\n    version: raw.version || 1,\n    magnetUri: raw.magnet_uri || raw.magnetUri || undefined,\n    schemaVersion: 1,\n  }\n}\n\n// Event types that the core can emit\nexport type CoreEvent = \n  | { type: 'ProfileLoaded'; profile: NormalizedProfile }\n  | { type: 'ProfileUpdated'; profile: NormalizedProfile }\n  | { type: 'PostAdded'; post: any }\n  | { type: 'MessageReceived'; message: any }\n  | { type: 'SyncStateChanged'; state: any }\n  | { type: 'AttachmentProgress'; progress: any }\n\nexport type EventCallback = (event: CoreEvent) => void\n\nexport interface CoreCapabilities {\n  profileJsonApi: boolean\n  postJsonApi: boolean\n  messageJsonApi: boolean\n  version: string\n}\n\n/**\n * TypeScript wrapper for the WASM core\n */\nclass SnartNetCore {\n  private wasmCore: WasmCore\n  private eventCallbacks: Set<EventCallback> = new Set()\n  private capabilities: CoreCapabilities | null = null\n\n  constructor(wasmCore: WasmCore) {\n    this.wasmCore = wasmCore\n  }\n\n  // Initialize the core\n  async init(): Promise<void> {\n    try {\n      await this.wasmCore.init()\n      console.log('[SnartNetCore] WASM core initialized')\n    } catch (error) {\n      console.error('[SnartNetCore] Init error:', error)\n      throw error\n    }\n  }\n\n  async getCapabilities(): Promise<CoreCapabilities> {\n    if (this.capabilities) return this.capabilities\n    // Try calling a wasm capability probe if it exists; fall back to defaults.\n    let cap: CoreCapabilities = {\n      profileJsonApi: false,\n      postJsonApi: false,\n      messageJsonApi: false,\n      version: '0'\n    }\n    // @ts-ignore dynamic probing\n    const probe = (this.wasmCore as any).get_capabilities\n    if (typeof probe === 'function') {\n      try {\n        const raw = probe.call(this.wasmCore)\n        if (raw) {\n          // Accept either JSON string or object\n            let obj = raw\n            if (typeof raw === 'string') {\n              try { obj = JSON.parse(raw) } catch {}\n            }\n            cap = {\n              profileJsonApi: !!(obj.profileJsonApi || obj.profile_json_api),\n              postJsonApi: !!(obj.postJsonApi || obj.post_json_api),\n              messageJsonApi: !!(obj.messageJsonApi || obj.message_json_api),\n              version: obj.version ? String(obj.version) : '0'\n            }\n        }\n      } catch (e) {\n        console.warn('[Core] capability probe failed, using defaults', e)\n      }\n    }\n    this.capabilities = cap\n    return cap\n  }\n\n  // Profile management\n  async createProfile(username: string, displayName?: string, bio?: string): Promise<string> {\n    const caps = await this.getCapabilities()\n    if (caps.profileJsonApi && (this.wasmCore as any).create_profile_json) {\n      const payload = JSON.stringify({ username, displayName: displayName || null, bio: bio || null })\n      const env = (this.wasmCore as any).create_profile_json(payload)\n      const obj = typeof env === 'string' ? JSON.parse(env) : env\n      const profile = obj.profile || obj.profileJson || obj\n      const normalized = normalizeProfile(profile)\n      if (normalized) this.emitEvent({ type: 'ProfileLoaded', profile: normalized })\n      return obj.magnetUri || profile.magnetUri || ''\n    }\n    try {\n      // Pass undefined instead of null for Option<String> to satisfy wasm-bindgen expectations\n      const magnetUri = (this.wasmCore as any).create_profile(\n        username,\n        displayName ? displayName : undefined,\n        bio ? bio : undefined\n      )\n      const raw = (this.wasmCore as any).get_current_profile()\n      const normalized = normalizeProfile(raw)\n      if (normalized) this.emitEvent({ type: 'ProfileLoaded', profile: normalized })\n      return magnetUri\n    } catch (e: any) {\n      const msg = String(e?.message || e)\n      console.error('[Core] legacy create_profile failed:', e)\n      // Attempt fallback to JSON API directly if capability probe failed earlier\n      const jsonApi = (this.wasmCore as any).create_profile_json\n      if (jsonApi) {\n        try {\n          const payload = JSON.stringify({ username, displayName: displayName || null, bio: bio || null })\n          const env = jsonApi(payload)\n          const obj = typeof env === 'string' ? JSON.parse(env) : env\n          const profile = obj.profile || obj.profileJson || obj\n          const normalized = normalizeProfile(profile)\n          if (normalized) this.emitEvent({ type: 'ProfileLoaded', profile: normalized })\n          return obj.magnetUri || profile.magnetUri || ''\n        } catch (e2) {\n          console.error('[Core] JSON fallback also failed:', e2)\n        }\n      }\n      if (/memory access out of bounds/i.test(msg)) {\n        // Possible corrupted persisted data; advise reset\n        console.warn('[Core] Detected possible corrupted WASM state; clearing persisted key/profile entries')\n        try {\n          localStorage.removeItem('snartnet_keypair')\n          localStorage.removeItem('snartnet_current_profile')\n        } catch {}\n      }\n      throw e\n    }\n  }\n\n  async getCurrentProfile(): Promise<NormalizedProfile | null> {\n    const caps = await this.getCapabilities()\n    if (caps.profileJsonApi && (this.wasmCore as any).get_current_profile_json) {\n      const env = (this.wasmCore as any).get_current_profile_json()\n      if (!env) return null\n      const obj = typeof env === 'string' ? JSON.parse(env) : env\n      const profile = obj.profile || obj.profileJson || obj\n      return normalizeProfile(profile)\n    }\n    const raw = this.wasmCore.get_current_profile()\n    return normalizeProfile(raw)\n  }\n\n  async updateProfile(displayName?: string, bio?: string): Promise<void> {\n    const caps = await this.getCapabilities()\n    if (caps.profileJsonApi && (this.wasmCore as any).update_profile_json) {\n      const payload = JSON.stringify({ displayName: displayName || null, bio: bio || null })\n      const env = (this.wasmCore as any).update_profile_json(payload)\n      const obj = typeof env === 'string' ? JSON.parse(env) : env\n      const profile = obj.profile || obj.profileJson || obj\n      const normalized = normalizeProfile(profile)\n      if (normalized) this.emitEvent({ type: 'ProfileUpdated', profile: normalized })\n      return\n    }\n    await (this.wasmCore as any).update_current_profile(\n      displayName ? displayName : undefined,\n      bio ? bio : undefined\n    )\n    const raw = this.wasmCore.get_current_profile()\n    const normalized = normalizeProfile(raw)\n    if (normalized) this.emitEvent({ type: 'ProfileUpdated', profile: normalized })\n  }\n\n  // Key management\n  async getPublicKey(): Promise<string> {\n    try {\n      return this.wasmCore.get_public_key()\n    } catch (error) {\n      console.error('[SnartNetCore] Get public key error:', error)\n      throw error\n    }\n  }\n\n  async getFingerprint(): Promise<string> {\n    try {\n      return this.wasmCore.get_fingerprint()\n    } catch (error) {\n      console.error('[SnartNetCore] Get fingerprint error:', error)\n      throw error\n    }\n  }\n\n  // Posts\n  async createPost(content: string, tags?: string[], replyTo?: string): Promise<any> {\n    try {\n      const signedPost = this.wasmCore.create_post(content, tags || null, replyTo || null)\n      console.log('[SnartNetCore] Post created:', signedPost)\n      \n      this.emitEvent({ type: 'PostAdded', post: signedPost })\n      return signedPost\n    } catch (error) {\n      console.error('[SnartNetCore] Create post error:', error)\n      throw error\n    }\n  }\n\n  // Messages\n  async createMessage(recipientFingerprint: string, content: string): Promise<any> {\n    try {\n      const signedMessage = this.wasmCore.create_message(recipientFingerprint, content)\n      console.log('[SnartNetCore] Message created:', signedMessage)\n      \n      this.emitEvent({ type: 'MessageReceived', message: signedMessage })\n      return signedMessage\n    } catch (error) {\n      console.error('[SnartNetCore] Create message error:', error)\n      throw error\n    }\n  }\n\n  // Status\n  hasProfile(): boolean {\n    return this.wasmCore.has_profile()\n  }\n\n  // Events\n  subscribeToEvents(callback: EventCallback): () => void {\n    this.eventCallbacks.add(callback)\n    return () => this.eventCallbacks.delete(callback)\n  }\n\n  private emitEvent(event: CoreEvent): void {\n    this.eventCallbacks.forEach(callback => {\n      try {\n        callback(event)\n      } catch (error) {\n        console.error('[SnartNetCore] Error in event callback:', error)\n      }\n    })\n  }\n\n  // Torrent functionality\n  async seedCurrentProfile(): Promise<string> {\n    try {\n      const profile = this.wasmCore.get_current_profile()\n      if (!profile) {\n        throw new Error('No current profile to seed')\n      }\n\n      console.log('[SnartNetCore] Profile data type:', typeof profile)\n      console.log('[SnartNetCore] Profile data:', profile)\n      \n      // Ensure profile is properly serializable by converting to plain object\n      let cleanProfile: any\n      if (typeof profile === 'object' && profile !== null) {\n        // Convert to plain JavaScript object to ensure proper serialization\n        cleanProfile = JSON.parse(JSON.stringify(profile))\n      } else {\n        cleanProfile = profile\n      }\n\n      console.log('[SnartNetCore] Clean profile:', cleanProfile)\n\n      const torrentService = getTorrentService()\n\n      // Merge in extended / local enhancements (profilePicture etc.) if available\n      try {\n        const username = cleanProfile.username || cleanProfile.id\n        if (username) {\n          const pic = localStorage.getItem(`profile-picture-${username}`)\n          const thumb = localStorage.getItem(`profile-picture-thumb-${username}`)\n          if (pic) cleanProfile.profilePicture = pic\n          if (thumb) cleanProfile.profilePictureThumbnail = thumb\n          // Extended profile fields (location, website, avatar URL) persisted separately\n          const extendedRaw = localStorage.getItem(`profile-extended-${username}`)\n          if (extendedRaw) {\n            try {\n              const extended = JSON.parse(extendedRaw)\n              if (extended && typeof extended === 'object') {\n                if (extended.location) cleanProfile.location = extended.location\n                if (extended.website) cleanProfile.website = extended.website\n                if (extended.avatar) cleanProfile.avatar = extended.avatar\n              }\n            } catch { /* ignore parse errors */ }\n          }\n        }\n      } catch (e) {\n        console.warn('[SnartNetCore] Failed merging extended profile data', e)\n      }\n\n      // Ensure a post index magnet exists (even if empty) so consumers can always sync\n      if (!cleanProfile.postIndexMagnetUri && !cleanProfile.post_index_magnet) {\n        try {\n          const emptyIndex = await torrentService.seedPostIndex([], cleanProfile.username || cleanProfile.id || 'unknown', {})\n          cleanProfile.postIndexMagnetUri = emptyIndex.magnetURI\n        } catch (e) {\n          console.warn('[SnartNetCore] Failed to seed empty post index', e)\n        }\n      }\n\n      const magnetURI = await torrentService.seedProfile(cleanProfile)\n      \n      console.log('[SnartNetCore] Profile seeding started:', magnetURI)\n      return magnetURI\n    } catch (error) {\n      console.error('[SnartNetCore] Failed to seed profile:', error)\n      throw error\n    }\n  }\n\n  async downloadProfileFromMagnet(magnetURI: string): Promise<any> {\n    try {\n      const torrentService = getTorrentService()\n      const profile = await torrentService.downloadProfile(magnetURI)\n      \n      console.log('[SnartNetCore] Profile downloaded:', profile)\n      return profile\n    } catch (error) {\n      console.error('[SnartNetCore] Failed to download profile:', error)\n      throw error\n    }\n  }\n\n  getTorrentStats() {\n    const torrentService = getTorrentService()\n    return torrentService.getStats()\n  }\n\n  getActiveTorrents() {\n    const torrentService = getTorrentService()\n    return torrentService.getActiveTorrents()\n  }\n\n  async stopSeeding(infoHash: string): Promise<void> {\n    const torrentService = getTorrentService()\n    torrentService.stopSeeding(infoHash)\n  }\n\n  // Mock methods for timeline (will be replaced with real P2P later)\n  // (Removed legacy mock getTimeline; real data flows through torrent + stores)\n\n  validateProfile(obj: any): boolean {\n    // minimal structural checks using schema constants (not full JSON Schema validation runtime yet)\n    if (!obj || typeof obj !== 'object') return false\n    for (const key of ['id','username','publicKey','fingerprint','createdAt','updatedAt']) {\n      if (!(key in obj)) return false\n    }\n    return true\n  }\n  // placeholder for future post validation\n  validatePost(obj: any): boolean { return !!obj && typeof obj === 'object' && 'id' in obj && 'author' in obj }\n}\n\n// Global core instance\nlet coreInstance: SnartNetCore | null = null\n\n/**\n * Initialize and get the core instance\n */\nexport async function getCore(): Promise<SnartNetCore> {\n  if (!coreInstance) {\n    try {\n      // Initialize WASM\n      await initWasm()\n      await init_core()\n      \n      // Create WASM core instance\n      const wasmCore = new WasmCore()\n      coreInstance = new SnartNetCore(wasmCore)\n      await coreInstance.init()\n      \n      console.log('[Core] Initialized successfully')\n    } catch (error) {\n      console.error('[Core] Initialization failed:', error)\n      throw error\n    }\n  }\n  return coreInstance\n}\n\n/**\n * Hook for using the core in React components\n */\nexport function useCore() {\n  const [core, setCore] = useState<SnartNetCore | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getCore().then(instance => {\n      setCore(instance)\n      setLoading(false)\n    }).catch(error => {\n      console.error('Failed to initialize core:', error)\n      setLoading(false)\n    })\n  }, [])\n\n  return { core, loading }\n}\n\nexport { profileSchema, postSchema }","import { create } from 'zustand'\nimport { getCore } from '@/lib/core'\n\ninterface ProfilePost {\n  id: string;\n  content: string;\n  createdAt: string;\n}\n\ninterface Profile {\n  username: string;\n  publicKey?: string;\n  displayName?: string;\n  bio?: string;\n  avatarHash?: string;\n  avatar?: string; // URL or base64 data URL for profile picture\n  profilePicture?: string; // Base64 encoded profile picture\n  profilePictureThumbnail?: string; // Base64 encoded thumbnail\n  location?: string;\n  website?: string;\n  magnetUri?: string;\n  createdAt?: string;\n  updatedAt?: string;\n  posts?: ProfilePost[]; // Add posts array\n}\n\ninterface ProfileState {\n  currentProfile: Profile | null;\n  profiles: Map<string, Profile>;\n  loading: boolean;\n  error: string | null;\n  seedProfileEnabled: boolean; // preference for auto seeding\n  \n  // Actions\n  setCurrentProfile: (profile: Profile | null) => void;\n  addProfile: (profile: Profile) => void;\n  updateProfile: (username: string, updates: Partial<Profile>) => void;\n  updateProfilePicture: (username: string, profilePicture: string, thumbnail?: string) => void;\n  setSeedProfileEnabled: (enabled: boolean) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  clearError: () => void;\n}\n\nconst SEED_PREF_KEY = 'snartnet:profile:seed-enabled'\n\nexport const useProfileStore = create<ProfileState>((set) => ({\n  currentProfile: null,\n  profiles: new Map(),\n  loading: false,\n  error: null,\n  seedProfileEnabled: (() => {\n    const stored = localStorage.getItem(SEED_PREF_KEY)\n    if (stored === null) return true // default ON\n    return stored === 'true'\n  })(),\n\n  setCurrentProfile: (profile) => set({ currentProfile: profile }),\n  \n  addProfile: (profile) => set((state) => {\n    const newProfiles = new Map(state.profiles)\n    newProfiles.set(profile.username, profile)\n    return { profiles: newProfiles }\n  }),\n  \n  updateProfile: (username, updates) => set((state) => {\n    const newProfiles = new Map(state.profiles)\n    const existing = newProfiles.get(username)\n    if (existing) {\n      newProfiles.set(username, { ...existing, ...updates })\n    }\n    \n    // Also update current profile if it matches\n    let newCurrentProfile = state.currentProfile\n    if (state.currentProfile?.username === username) {\n      newCurrentProfile = { ...state.currentProfile, ...updates }\n    }\n    \n    return { \n      profiles: newProfiles,\n      currentProfile: newCurrentProfile\n    }\n  }),\n  \n  updateProfilePicture: (username, profilePicture, thumbnail) => set((state) => {\n    const updates = { \n      profilePicture,\n      profilePictureThumbnail: thumbnail || profilePicture,\n      updatedAt: new Date().toISOString()\n    }\n    \n    const newProfiles = new Map(state.profiles)\n    const existing = newProfiles.get(username)\n    if (existing) {\n      newProfiles.set(username, { ...existing, ...updates })\n    }\n    \n    // Also update current profile if it matches\n    let newCurrentProfile = state.currentProfile\n    if (state.currentProfile?.username === username) {\n      newCurrentProfile = { ...state.currentProfile, ...updates }\n      \n      // Store profile picture in localStorage for persistence\n      localStorage.setItem(`profile-picture-${username}`, profilePicture)\n      if (thumbnail) {\n        localStorage.setItem(`profile-picture-thumb-${username}`, thumbnail)\n      }\n    }\n    \n    // Fire & forget reseed to propagate new picture (debounced effect could be added later)\n    if (newCurrentProfile) {\n      getCore().then(core => {\n        core.seedCurrentProfile().catch(e => console.warn('Reseed after picture update failed', e))\n      }).catch(()=>{})\n    }\n    return { \n      profiles: newProfiles,\n      currentProfile: newCurrentProfile\n    }\n  }),\n  \n  setSeedProfileEnabled: (enabled) => set(() => {\n    try { localStorage.setItem(SEED_PREF_KEY, String(enabled)) } catch {}\n    return { seedProfileEnabled: enabled }\n  }),\n  \n  setLoading: (loading) => set({ loading }),\n  setError: (error) => set({ error }),\n  clearError: () => set({ error: null }),\n}))\n\nexport type { Profile, ProfilePost }","/*\n Ed25519 helper utilities\n Responsibilities:\n  - Manage a persistent keypair (localStorage for now – TODO: move to IndexedDB / secure storage)\n  - Canonicalize post payloads for signing\n  - Sign & verify using WebCrypto if available, else fallback to WASM bindings\n  - Provide base64 helpers\n*/\n\n// WASM bindings (lazy imported to avoid cost if not needed immediately)\nimport initWasm, { generate_keypair, sign_data, verify_signature_wasm } from \"../../wasm/snartnet_core\";\n\nconst KEYPAIR_STORAGE_KEY = \"snartnet:ed25519:keypair:v1\";\n\nexport interface StoredKeypair {\n  publicKey: string; // base64\n  secretKey: string; // base64 (private key)\n}\n\nexport interface CanonicalPostInput {\n  version: number;\n  kind: string; // e.g. \"post\"\n  authorPublicKey: string; // base64\n  createdAt: string; // ISO string\n  body: string;\n  attachments?: string[]; // magnet URIs or hashes\n  parentId?: string;\n  replyTo?: string;\n}\n\nexport interface SignedPostPayload extends CanonicalPostInput {\n  signature: string; // base64\n}\n\nfunction hasWebCryptoEd25519(): boolean {\n  try {\n    // Some browsers may not yet support Ed25519; feature detect\n    return typeof window !== \"undefined\" && !!window.crypto?.subtle && (window.crypto.subtle as any) !== undefined;\n  } catch {\n    return false;\n  }\n}\n\nfunction base64FromBytes(bytes: Uint8Array): string {\n  return btoa(String.fromCharCode(...bytes));\n}\n\nfunction arrayBufferFromBase64(b64: string): ArrayBuffer {\n  const bin = atob(b64);\n  const len = bin.length;\n  const buf = new ArrayBuffer(len);\n  const view = new Uint8Array(buf);\n  for (let i = 0; i < len; i++) view[i] = bin.charCodeAt(i);\n  return buf;\n}\n\nfunction uint8FromBase64(b64: string): Uint8Array {\n  return new Uint8Array(arrayBufferFromBase64(b64));\n}\n\n// Persist & load keypair\nexport async function getOrCreateKeypair(): Promise<StoredKeypair> {\n  const existing = localStorage.getItem(KEYPAIR_STORAGE_KEY);\n  if (existing) {\n    try {\n      return JSON.parse(existing) as StoredKeypair;\n    } catch {\n      // fallthrough to regenerate\n    }\n  }\n\n  // Attempt WebCrypto first\n  if (hasWebCryptoEd25519() && (window.crypto.subtle as any).generateKey) {\n    try {\n      const keyPair: CryptoKeyPair = await (window.crypto.subtle as any).generateKey(\n        { name: \"Ed25519\", namedCurve: \"Ed25519\" },\n        true,\n        [\"sign\", \"verify\"]\n      );\n      const rawPub = new Uint8Array(await window.crypto.subtle.exportKey(\"raw\", keyPair.publicKey));\n      const rawPriv = new Uint8Array(await window.crypto.subtle.exportKey(\"pkcs8\", keyPair.privateKey));\n      const stored: StoredKeypair = { publicKey: base64FromBytes(rawPub), secretKey: base64FromBytes(rawPriv) };\n      localStorage.setItem(KEYPAIR_STORAGE_KEY, JSON.stringify(stored));\n      return stored;\n    } catch (e) {\n      console.warn(\"WebCrypto Ed25519 generateKey failed; falling back to WASM\", e);\n    }\n  }\n\n  // WASM fallback\n  await ensureWasm();\n  // generate_keypair returns JSON segments (Rust exported). Types show it returns tuple but high-level wrapper returns JSON.\n  const kpJson: any = generate_keypair();\n  // The wasm binding returns something we can parse or already an object; attempt parse.\n  let parsed: StoredKeypair | undefined;\n  if (typeof kpJson === \"string\") {\n    parsed = JSON.parse(kpJson);\n  } else {\n    parsed = kpJson as StoredKeypair;\n  }\n  if (!parsed?.publicKey || !parsed?.secretKey) {\n    throw new Error(\"WASM generate_keypair returned unexpected format\");\n  }\n  localStorage.setItem(KEYPAIR_STORAGE_KEY, JSON.stringify(parsed));\n  return parsed;\n}\n\nlet wasmInitialized = false;\nasync function ensureWasm() {\n  if (!wasmInitialized) {\n    try {\n      await initWasm();\n      wasmInitialized = true;\n    } catch (e) {\n      console.error(\"Failed to initialize WASM core\", e);\n      throw e;\n    }\n  }\n}\n\n// Canonicalize: create a new object with keys sorted alphabetically & only defined keys\nexport function canonicalizePost(input: CanonicalPostInput): string {\n  const obj: any = {};\n  const orderedKeys = [\n    \"version\",\n    \"kind\",\n    \"authorPublicKey\",\n    \"createdAt\",\n    \"body\",\n    \"attachments\",\n    \"parentId\",\n    \"replyTo\"\n  ];\n  for (const k of orderedKeys) {\n    const v = (input as any)[k];\n    if (v !== undefined && v !== null && !(Array.isArray(v) && v.length === 0)) {\n      obj[k] = v;\n    }\n  }\n  return JSON.stringify(obj);\n}\n\nexport async function signPost(input: Omit<CanonicalPostInput, \"authorPublicKey\">): Promise<SignedPostPayload> {\n  const kp = await getOrCreateKeypair();\n  const canonical = canonicalizePost({ ...input, authorPublicKey: kp.publicKey });\n\n  // WebCrypto path (not yet widely available for Ed25519 in all browsers, but attempt)\n  if (hasWebCryptoEd25519()) {\n    try {\n      // Re-import keys for signing each time (fast enough for small volume)\n      // secretKey exported earlier as pkcs8\n      const privBytes = arrayBufferFromBase64(kp.secretKey);\n      const privKey = await window.crypto.subtle.importKey(\n        \"pkcs8\",\n        privBytes,\n        { name: \"Ed25519\", namedCurve: \"Ed25519\" },\n        false,\n        [\"sign\"]\n      );\n      const sigBuf = await window.crypto.subtle.sign({ name: \"Ed25519\" }, privKey, new TextEncoder().encode(canonical));\n      const signature = base64FromBytes(new Uint8Array(sigBuf));\n      return { ...input, authorPublicKey: kp.publicKey, signature, version: input.version } as SignedPostPayload;\n    } catch (e) {\n      console.warn(\"WebCrypto sign failed; falling back to WASM\", e);\n    }\n  }\n\n  // WASM fallback\n  await ensureWasm();\n  const signature = sign_data(JSON.stringify(kp), canonical);\n  return { ...input, authorPublicKey: kp.publicKey, signature, version: input.version } as SignedPostPayload;\n}\n\nexport async function verifyPostSignature(payload: SignedPostPayload): Promise<{\n  ok: boolean;\n  error?: string;\n}> {\n  const { signature, authorPublicKey, ...rest } = payload as any;\n  const canonical = canonicalizePost({ ...rest, authorPublicKey });\n\n  // Try WebCrypto verify first\n  if (hasWebCryptoEd25519()) {\n    try {\n      const pubBytes = arrayBufferFromBase64(authorPublicKey);\n      const pubKey = await window.crypto.subtle.importKey(\n        \"raw\",\n        pubBytes,\n        { name: \"Ed25519\", namedCurve: \"Ed25519\" },\n        false,\n        [\"verify\"]\n      );\n      const ok = await window.crypto.subtle.verify(\n        { name: \"Ed25519\" },\n        pubKey,\n        arrayBufferFromBase64(signature),\n        new TextEncoder().encode(canonical)\n      );\n      return { ok };\n    } catch (e: any) {\n      console.warn(\"WebCrypto verify failed; fallback to WASM\", e);\n    }\n  }\n\n  await ensureWasm();\n  try {\n    const ok = verify_signature_wasm(canonical, signature, authorPublicKey);\n    return { ok, error: ok ? undefined : \"invalid-signature\" };\n  } catch (e: any) {\n    return { ok: false, error: e?.message || \"verify-error\" };\n  }\n}\n\nexport function deriveFingerprint(publicKeyB64: string): string {\n  // Short identifyable fingerprint: first 8 chars of base64-hash (SHA-256 of raw pubkey)\n  // Non-cryptographic display only (not for trust decisions yet)\n  const raw = uint8FromBase64(publicKeyB64);\n  return \"fpr-\" + Array.from(raw.slice(0, 6)).map((b: number) => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\nexport type { StoredKeypair as Ed25519StoredKeypair };\n","// Handle incoming head update event\nexport async function handleIncomingHeadUpdate(evt: any) {\n  // Import verify util lazily\n  const { verifyHeadUpdateSignature } = await import('@/lib/crypto/headUpdate');\n  const { usePostStore } = await import('./postStore');\n  // Basic shape check\n  if (!evt || evt.kind !== 'postIndexHeadUpdate' || !evt.profileId || !evt.newHead || !evt.signature) {\n    return;\n  }\n  // Replay / dedupe cache (in-memory). Keep last 200 signatures.\n  const g: any = (window as any);\n  if (!g.__sn_head_sig_cache) g.__sn_head_sig_cache = [];\n  if (g.__sn_head_sig_cache.includes(evt.signature)) return;\n  const { ok } = await verifyHeadUpdateSignature(evt);\n  if (!ok) {\n    console.warn('Rejected head update: invalid signature', evt);\n    return;\n  }\n  // Insert into cache\n  g.__sn_head_sig_cache.push(evt.signature);\n  if (g.__sn_head_sig_cache.length > 200) g.__sn_head_sig_cache.splice(0, g.__sn_head_sig_cache.length - 200);\n  // Flood control: track per profileId events per minute\n  if (!g.__sn_head_rate) g.__sn_head_rate = {};\n  const now = Date.now();\n  const windowMs = 60_000;\n  const bucketKey = evt.profileId;\n  const rate = g.__sn_head_rate[bucketKey] || { start: now, count: 0 };\n  if (now - rate.start > windowMs) {\n    rate.start = now; rate.count = 0;\n  }\n  rate.count++;\n  g.__sn_head_rate[bucketKey] = rate;\n  if (rate.count > 30) { // arbitrary limit: 30 head updates / minute per profile\n    if (!g.__sn_head_rate_warned) g.__sn_head_rate_warned = new Set();\n    if (!g.__sn_head_rate_warned.has(bucketKey)) {\n      console.warn('Rate limiting head updates for', bucketKey);\n      g.__sn_head_rate_warned.add(bucketKey);\n    }\n    return;\n  }\n  // Timestamp freshness check (allow 5 min skew)\n  try {\n    const issued = new Date(evt.issuedAt).getTime();\n    if (!isNaN(issued)) {\n      const skew = Math.abs(Date.now() - issued);\n      if (skew > 5 * 60_000) {\n        console.warn('Discarding stale/future head update (skew >5m)', evt);\n        return;\n      }\n  }\n  } catch {}\n  // Find contact by profileId (username)\n  const contact = useContactStore.getState().contacts.find(c => c.username === evt.profileId);\n  if (!contact) return;\n  // Only update if new head is different and issuedAt is newer\n  if (contact.postIndexMagnetUri !== evt.newHead) {\n    // Optionally: check issuedAt > last seen (not tracked yet)\n    useContactStore.getState().updateContact(contact.id, { postIndexMagnetUri: evt.newHead });\n    // Trigger targeted sync\n    usePostStore.getState().syncPostsForContact(contact.id, { maxPosts: contact.syncMaxPosts });\n  }\n}\nimport { create } from 'zustand'\n\nexport type RelationshipType = 'ring-of-trust' | 'friend' | 'acquaintance' | 'group-member'\n\nexport interface ContactPermissions {\n  canMessage: boolean\n  canSeeFullProfile: boolean\n  canShareContacts: boolean\n  canRecoverKeys: boolean // Ring of Trust only\n}\n\nexport interface Contact {\n  id: string // Public key fingerprint\n  username: string\n  displayName: string\n  relationship: RelationshipType\n  trustLevel: number // 1-10 scale\n  addedDate: string\n  lastSeen?: string\n  magnetUri: string\n  avatar?: string\n  notes?: string\n  permissions: ContactPermissions\n  // Optional magnet URI to the head of this contact's post index chain\n  postIndexMagnetUri?: string\n  // Sync preferences\n  syncMaxPosts?: number // e.g. 100\n  syncMonthsLookback?: number // e.g. 5 (last 5 months)\n}\n\ninterface ContactState {\n  contacts: Contact[]\n  loadContacts: () => void\n  addContact: (contact: Omit<Contact, 'id' | 'addedDate' | 'permissions'>) => void\n  addContactFromMagnet: (magnetUri: string, relationship?: RelationshipType) => Promise<Contact | null>\n  removeContact: (contactId: string) => void\n  updateContact: (contactId: string, updates: Partial<Contact>) => void\n  getContactsByRelationship: (relationship: RelationshipType) => Contact[]\n  getContact: (contactId: string) => Contact | undefined\n}\n\n// Default permissions based on relationship type\nconst getDefaultPermissions = (relationship: RelationshipType): ContactPermissions => {\n  switch (relationship) {\n    case 'ring-of-trust':\n      return {\n        canMessage: true,\n        canSeeFullProfile: true,\n        canShareContacts: true,\n        canRecoverKeys: true\n      }\n    case 'friend':\n      return {\n        canMessage: true,\n        canSeeFullProfile: true,\n        canShareContacts: true,\n        canRecoverKeys: false\n      }\n    case 'acquaintance':\n      return {\n        canMessage: true,\n        canSeeFullProfile: false,\n        canShareContacts: false,\n        canRecoverKeys: false\n      }\n    case 'group-member':\n      return {\n        canMessage: true,\n        canSeeFullProfile: false,\n        canShareContacts: false,\n        canRecoverKeys: false\n      }\n  }\n}\n\n// Generate contact ID from username and public key fingerprint\nconst generateContactId = (username: string, magnetUri: string): string => {\n  // Extract some identifying info from magnet URI or use username\n  const hash = btoa(username + magnetUri).slice(0, 16)\n  return `contact_${hash}`\n}\n\nexport const useContactStore = create<ContactState>((set, get) => ({\n  contacts: [],\n\n  loadContacts: () => {\n    try {\n      const stored = localStorage.getItem('snartnet-contacts')\n      if (stored) {\n        let contacts = JSON.parse(stored)\n        // Ensure all contacts have a valid id\n        contacts = contacts.map((c: any) => ({\n          ...c,\n          id: c.id || generateContactId(c.username, c.magnetUri)\n        }))\n        set({ contacts })\n        localStorage.setItem('snartnet-contacts', JSON.stringify(contacts))\n      }\n    } catch (error) {\n      console.error('Failed to load contacts:', error)\n    }\n  },\n\n  addContact: (contactData) => {\n    const contacts = get().contacts\n    \n    // Generate ID and add timestamps\n    const newContact: Contact = {\n      ...contactData,\n      id: generateContactId(contactData.username, contactData.magnetUri),\n      addedDate: new Date().toISOString(),\n      permissions: getDefaultPermissions(contactData.relationship)\n    }\n\n    // Check if contact already exists\n    const existingIndex = contacts.findIndex(c => c.id === newContact.id)\n    if (existingIndex >= 0) {\n      // Update existing contact\n      const updatedContacts = [...contacts]\n      updatedContacts[existingIndex] = { ...updatedContacts[existingIndex], ...newContact }\n      set({ contacts: updatedContacts })\n      localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n    } else {\n      // Add new contact\n      const updatedContacts = [...contacts, newContact]\n      set({ contacts: updatedContacts })\n      localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n    }\n  },\n\n  addContactFromMagnet: async (magnetUri, relationship = 'friend') => {\n    try {\n      // Optimistically create placeholder while we fetch\n      const tempId = `pending_${Math.random().toString(36).slice(2)}`\n      const placeholder: Contact = {\n        id: tempId,\n        username: 'loading…',\n        displayName: 'Loading profile…',\n        relationship,\n        trustLevel: relationship === 'ring-of-trust' ? 8 : 5,\n        addedDate: new Date().toISOString(),\n        magnetUri,\n        permissions: getDefaultPermissions(relationship),\n      }\n      const existing = get().contacts\n      set({ contacts: [...existing, placeholder] })\n\n      // Dynamically import torrent service accessor to avoid circular import concerns\n      const { getTorrentService } = await import('@/lib/torrent')\n      const svc: any = getTorrentService()\n      const profile = await svc.downloadProfile(magnetUri)\n      if (!profile) {\n        // Mark placeholder as failed\n        set({ contacts: get().contacts.map(c => c.id === tempId ? { ...c, username: 'unknown', displayName: 'Profile unavailable' } : c) })\n        return null\n      }\n\n      const username = profile.username || 'unknown'\n      const displayName = profile.displayName || username\n      const avatar = profile.avatar || profile.profilePicture || undefined\n      const finalContact: Omit<Contact, 'id' | 'addedDate' | 'permissions'> = {\n        username,\n        displayName,\n        relationship,\n        trustLevel: relationship === 'ring-of-trust' ? 8 : 5,\n        magnetUri,\n        avatar,\n        notes: '',\n        postIndexMagnetUri: (profile as any).postIndexMagnetUri || (profile as any).post_index_magnet || undefined,\n        syncMaxPosts: 100,\n        syncMonthsLookback: 6,\n      }\n      // Remove placeholder then add real contact\n      set({ contacts: get().contacts.filter(c => c.id !== tempId) })\n      get().addContact(finalContact)\n      const addedContact = get().contacts.find(c => c.username === username && c.magnetUri === magnetUri)\n      \n      // Auto-sync posts for the new contact if they have a postIndexMagnetUri\n      if (addedContact && finalContact.postIndexMagnetUri) {\n        // Dynamically import post store to avoid circular dependencies\n        const { usePostStore } = await import('./postStore')\n        try {\n          await usePostStore.getState().syncPostsForContact(addedContact.id, {\n            maxPosts: finalContact.syncMaxPosts || 50,\n            monthsLookback: finalContact.syncMonthsLookback || 6\n          })\n          console.log('[ContactStore] Auto-synced posts for new contact:', username)\n        } catch (error) {\n          console.warn('[ContactStore] Failed to auto-sync posts for new contact:', error)\n        }\n      }\n      \n      return addedContact || null\n    } catch (e) {\n      console.error('addContactFromMagnet failed', e)\n      // Remove placeholder if present\n      set({ contacts: get().contacts.filter(c => !c.id.startsWith('pending_')) })\n      return null\n    }\n  },\n\n  removeContact: (contactId) => {\n    const contacts = get().contacts\n    const updatedContacts = contacts.filter(c => c.id !== contactId)\n    set({ contacts: updatedContacts })\n    localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n  },\n\n  updateContact: (contactId, updates) => {\n    const contacts = get().contacts\n    const updatedContacts = contacts.map(contact => \n      contact.id === contactId \n        ? { ...contact, ...updates }\n        : contact\n    )\n    set({ contacts: updatedContacts })\n    localStorage.setItem('snartnet-contacts', JSON.stringify(updatedContacts))\n  },\n\n  getContactsByRelationship: (relationship) => {\n    return get().contacts.filter(c => c.relationship === relationship)\n  },\n\n  getContact: (contactId) => {\n    return get().contacts.find(c => c.id === contactId)\n  }\n}))","import { create } from 'zustand'\nimport { getTorrentService } from '@/lib/torrent'\nimport { verifyPostSignature, deriveFingerprint, signPost } from '@/lib/crypto/ed25519'\nimport { useContactStore } from './contactStore'\n\nexport interface PostImage {\n  id: string\n  data: string // base64 data\n  filename: string\n  size: number\n  mimeType: string\n}\n\nexport interface TorrentPost {\n  id: string\n  author: string\n  authorDisplayName?: string\n  authorAvatar?: string\n  content: string\n  images?: PostImage[]\n  magnetUri?: string // The torrent magnet link for this post\n  createdAt: string\n  updatedAt?: string\n  tags?: string[]\n  // Signing fields\n  authorPublicKey?: string // base64 Ed25519 public key\n  signature?: string // base64 signature of canonical payload\n  signatureVerified?: boolean\n  signatureError?: string\n  fingerprint?: string // short display fingerprint derived from public key\n  isSeeding?: boolean\n  seedProgress?: number\n  seedError?: string\n}\n\nexport interface NormalizedPost {\n  id: string\n  author: string\n  authorDisplayName?: string\n  authorAvatar?: string\n  content: string\n  images?: PostImage[]\n  magnetUri?: string\n  createdAt: string\n  updatedAt?: string\n  tags?: string[]\n  version: number\n  schemaVersion: 1\n  authorPublicKey?: string\n  signature?: string\n  signatureVerified?: boolean\n  signatureError?: string\n  fingerprint?: string\n}\n\nfunction normalizePost(raw: any): NormalizedPost | null {\n  if (!raw) return null\n  return {\n    id: raw.id || raw.postId || Math.random().toString(36).slice(2),\n    author: raw.author || raw.author_fingerprint || raw.fingerprint || 'unknown',\n    authorDisplayName: raw.authorDisplayName || raw.author_display_name || raw.displayName,\n    authorAvatar: raw.authorAvatar || raw.author_avatar,\n    content: raw.content || '',\n    images: raw.images,\n    magnetUri: raw.magnetUri || raw.magnet_uri,\n    createdAt: raw.createdAt || raw.created_at || new Date().toISOString(),\n    updatedAt: raw.updatedAt || raw.updated_at,\n    tags: raw.tags,\n    version: raw.version || 1,\n    schemaVersion: 1,\n    authorPublicKey: raw.authorPublicKey || raw.author_public_key,\n    signature: raw.signature,\n    signatureVerified: raw.signatureVerified || raw.signature_verified,\n    signatureError: raw.signatureError || raw.signature_error,\n    fingerprint: raw.fingerprint,\n  }\n}\n\ninterface PostState {\n  posts: TorrentPost[]\n  loading: boolean\n  error: string | null\n  \n  // Actions\n  addPost: (post: Omit<TorrentPost, 'id' | 'createdAt' | 'magnetUri'>) => Promise<void>\n  removePost: (postId: string) => void\n  updatePost: (postId: string, updates: Partial<TorrentPost>) => void\n  updateSeedingStatus: (postId: string, isSeeding: boolean, progress?: number) => void\n  loadPostsFromContacts: () => Promise<void>\n  setLoading: (loading: boolean) => void\n  setError: (error: string | null) => void\n  clearError: () => void\n  syncPostsForContact: (contactId: string, options?: { maxPosts?: number; monthsLookback?: number }) => Promise<void>\n  fetchPostFromMagnet: (magnetUri: string) => Promise<TorrentPost | null>\n  editPost: (postId: string, newContent: string) => Promise<void>\n  regenerateAuthorIndex: (author: string) => Promise<void>\n  deletePost: (postId: string) => Promise<void>\n}\n\nexport const usePostStore = create<PostState>((set) => ({\n  posts: [],\n  loading: false,\n  error: null,\n\n  addPost: async (postData) => {\n    const createdAt = new Date().toISOString()\n    // Prepare canonical signing input\n    let signature: string | undefined\n    let authorPublicKey: string | undefined\n    try {\n      const signed = await signPost({\n        version: 1,\n        kind: 'post',\n        body: postData.content,\n        createdAt,\n        attachments: postData.images?.map(i => i.id),\n        // parentId / replyTo omitted for now\n      } as any)\n      signature = signed.signature\n      authorPublicKey = signed.authorPublicKey\n    } catch (e) {\n      console.warn('Signing post failed; proceeding unsigned', e)\n    }\n\n    const base: Partial<TorrentPost> = {\n      ...postData,\n      id: Math.random().toString(36).slice(2),\n      createdAt,\n      isSeeding: true,\n      seedProgress: 0,\n      signature,\n      authorPublicKey,\n      fingerprint: authorPublicKey ? deriveFingerprint(authorPublicKey) : undefined,\n      signatureVerified: !!signature, // locally created so we trust it\n    }\n    const newPost: TorrentPost = normalizePost(base) as any\n    \n    set((state) => ({\n      posts: [newPost, ...state.posts].sort((a, b) => \n        new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n      )\n    }))\n\n    try {\n      const torrentService = getTorrentService()\n  // Seed full post including signature fields\n  const magnetUri = await torrentService.seedPost({ ...(newPost as any) })\n      \n      set((state) => ({\n        posts: state.posts.map(p => \n          p.id === newPost.id ? { ...p, magnetUri, seedProgress: 100, isSeeding: false } : p\n        )\n      }))\n    } catch (error) {\n      console.error('Failed to seed post:', error)\n      set((state) => ({\n        posts: state.posts.map(p => \n          p.id === newPost.id ? { ...p, isSeeding: false, seedProgress: 0, seedError: (error instanceof Error ? error.message : 'Failed to seed') } : p\n        )\n      }))\n    }\n  },\n\n  removePost: (postId) => {\n    set((state) => ({\n      posts: state.posts.filter(post => post.id !== postId)\n    }))\n  },\n\n  updatePost: (postId, updates) => {\n    set((state) => ({\n      posts: state.posts.map(post => \n        post.id === postId ? { ...post, ...updates } : post\n      )\n    }))\n  },\n\n  updateSeedingStatus: (postId, isSeeding, progress) => {\n    set((state) => ({\n      posts: state.posts.map(post => \n        post.id === postId ? { ...post, isSeeding, seedProgress: progress } : post\n      )\n    }))\n  },\n\n  loadPostsFromContacts: async () => {\n    const contactStore = useContactStore.getState()\n    const contacts = contactStore.contacts.filter(c => !!c.postIndexMagnetUri)\n    if (contacts.length === 0) {\n      set({ loading: false })\n      return\n    }\n    set({ loading: true })\n    const limit = 2 // small concurrency limit to avoid overwhelming torrent engine\n    const queue = [...contacts]\n    const running: Promise<void>[] = []\n    const startedIds = new Set<string>()\n\n    const runNext = () => {\n      if (queue.length === 0) return\n      const contact = queue.shift()!\n      startedIds.add(contact.id)\n      const p = (async () => {\n        try {\n          await usePostStore.getState().syncPostsForContact(contact.id, {\n            maxPosts: contact.syncMaxPosts,\n            monthsLookback: contact.syncMonthsLookback\n          })\n        } catch (e) {\n          console.warn('Sync failed for contact', contact.id, e)\n        }\n      })().finally(() => {\n        // Remove finished promise from running and schedule next\n        const idx = running.indexOf(p as any)\n        if (idx >= 0) running.splice(idx, 1)\n        if (queue.length > 0) runNext()\n        else if (running.length === 0) {\n          // All done\n          set({ loading: false })\n        }\n      })\n      running.push(p as any)\n      if (running.length < limit && queue.length > 0) runNext()\n    }\n\n    // Prime initial workers\n    for (let i = 0; i < limit && queue.length > 0; i++) runNext()\n  },\n\n  setLoading: (loading) => set({ loading }),\n  setError: (error) => set({ error }),\n  clearError: () => set({ error: null }),\n  \n  syncPostsForContact: async (contactId, options) => {\n    const contactStore = useContactStore.getState()\n    const contact = contactStore.contacts.find(c => c.id === contactId)\n    if (!contact || !contact.postIndexMagnetUri) return\n    set({ loading: true })\n    try {\n      const torrentService = getTorrentService()\n      const result = await (torrentService as any).downloadPostIndexChain(contact.postIndexMagnetUri, {\n        maxPosts: options?.maxPosts ?? contact.syncMaxPosts ?? 100,\n        monthsLookback: options?.monthsLookback ?? contact.syncMonthsLookback,\n      })\n      // Download post torrents for new entries (limited concurrency)\n      const existingIds = new Set(usePostStore.getState().posts.map(p => p.id))\n  const targets = result.entries.filter((e: any) => e.magnetUri && !existingIds.has(e.id))\n      const limit = 3\n      const queue = [...targets]\n      const downloaded: TorrentPost[] = []\n      while (queue.length > 0) {\n        const batch = queue.splice(0, limit)\n  await Promise.all(batch.map(async (e: any) => {\n          try {\n            const post = await (getTorrentService() as any).downloadPost(e.magnetUri)\n            if (post && typeof post === 'object') {\n              // Verify signature if present\n              let verifiedPost: any = post\n              try {\n                if (post.signature && post.authorPublicKey) {\n                  const { ok, error } = await verifyPostSignature({\n                    ...post,\n                    version: post.version || 1,\n                    kind: 'post'\n                  })\n                  verifiedPost.signatureVerified = ok\n                  verifiedPost.signatureError = ok ? undefined : error || 'invalid-signature'\n                  verifiedPost.fingerprint = post.authorPublicKey ? deriveFingerprint(post.authorPublicKey) : post.fingerprint\n                } else {\n                  verifiedPost.signatureVerified = false\n                  verifiedPost.signatureError = 'missing-signature'\n                }\n              } catch (verr:any) {\n                verifiedPost.signatureVerified = false\n                verifiedPost.signatureError = verr?.message || 'verify-failed'\n              }\n              downloaded.push(normalizePost(verifiedPost) as any)\n            } else {\n              // fallback placeholder\n              downloaded.push({\n                id: e.id,\n                author: e.author,\n                content: `(Unavailable content) @${e.author}`,\n                createdAt: e.createdAt,\n                magnetUri: e.magnetUri,\n                images: []\n              })\n            }\n          } catch (err) {\n            downloaded.push({\n              id: e.id,\n              author: e.author,\n              content: `(Failed to fetch) @${e.author}`,\n              createdAt: e.createdAt,\n              magnetUri: e.magnetUri,\n              images: []\n            })\n          }\n        }))\n      }\n      if (downloaded.length) {\n        set((state) => ({\n          posts: [...state.posts, ...downloaded].sort((a,b)=> new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()),\n          loading: false\n        }))\n      } else {\n        set({ loading: false })\n      }\n    } catch (e) {\n      set({ loading: false, error: e instanceof Error ? e.message : 'Failed to sync posts' })\n    }\n  },\n\n  fetchPostFromMagnet: async (magnetUri) => {\n    try {\n      const raw = await (getTorrentService() as any).downloadPost(magnetUri)\n      if (!raw) return null\n      let processed: any = raw\n      try {\n        if (raw.signature && raw.authorPublicKey) {\n          const { ok, error } = await verifyPostSignature({\n            ...raw,\n            version: raw.version || 1,\n            kind: 'post'\n          })\n          processed.signatureVerified = ok\n            processed.signatureError = ok ? undefined : error || 'invalid-signature'\n          processed.fingerprint = raw.authorPublicKey ? deriveFingerprint(raw.authorPublicKey) : raw.fingerprint\n        } else {\n          processed.signatureVerified = false\n          processed.signatureError = 'missing-signature'\n        }\n      } catch (e:any) {\n        processed.signatureVerified = false\n        processed.signatureError = e?.message || 'verify-failed'\n      }\n      const normalized = normalizePost(processed)\n      if (!normalized) return null\n      set((state) => {\n        const exists = state.posts.some(p => p.id === normalized.id)\n        if (exists) {\n          return { posts: state.posts.map(p => p.id === normalized.id ? { ...p, ...normalized } : p) }\n        }\n        return { posts: [normalized as any, ...state.posts].sort((a,b)=> new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()) }\n      })\n      return normalized as any\n    } catch (e) {\n      console.error('Failed to download post', e)\n      return null\n    }\n  }\n  ,\n  editPost: async (postId, newContent) => {\n    const state = usePostStore.getState()\n    const post = state.posts.find(p => p.id === postId)\n    if (!post) return\n    const updatedAt = new Date().toISOString()\n    // Re-sign updated content\n    let signature: string | undefined\n    let authorPublicKey: string | undefined\n    try {\n      const signed = await signPost({\n        version: 1,\n        kind: 'post',\n        body: newContent,\n        createdAt: post.createdAt,\n        updatedAt,\n        attachments: post.images?.map(i => i.id),\n      } as any)\n      signature = signed.signature\n      authorPublicKey = signed.authorPublicKey\n    } catch (e) {\n      console.warn('Re-signing edited post failed; proceeding unsigned', e)\n    }\n    // Optimistic local update (magnet will be updated after seeding)\n    set((s) => ({\n      posts: s.posts.map(p => p.id === postId ? { ...p, content: newContent, updatedAt, signature, authorPublicKey, signatureVerified: !!signature, isSeeding: true } : p)\n    }))\n    try {\n      const torrentService = getTorrentService()\n      const magnetUri = await torrentService.seedPost({ ...(post as any), content: newContent, updatedAt, signature, authorPublicKey })\n      set((s) => ({\n        posts: s.posts.map(p => p.id === postId ? { ...p, magnetUri, isSeeding: false, seedProgress: 100 } : p)\n      }))\n    } catch (e) {\n      console.error('Failed to reseed edited post', e)\n      set((s) => ({\n        posts: s.posts.map(p => p.id === postId ? { ...p, isSeeding: false, seedError: 'Edit reseed failed' } : p)\n      }))\n    }\n    await usePostStore.getState().regenerateAuthorIndex(post.author)\n  },\n  regenerateAuthorIndex: async (author) => {\n    try {\n      const allPosts = usePostStore.getState().posts.filter(p => p.author === author && p.magnetUri)\n      const torrentService = getTorrentService()\n      // Use current profile's existing head as previous if present\n      const profileStore = (await import('./profileStore'))\n      const { useProfileStore } = profileStore as any\n      const currentProfile = useProfileStore.getState().currentProfile\n      const previousHead = currentProfile?.postIndexMagnetUri || null\n      const result = await (torrentService as any).seedPostIndex(allPosts as any, author, { previousHeadMagnet: previousHead })\n      if (currentProfile && currentProfile.username === author) {\n        // Update profile with new head and reseed profile\n        useProfileStore.getState().updateProfile(author, { postIndexMagnetUri: result.magnetURI })\n        try { (await import('@/lib/core')).getCore().then(c => c.seedCurrentProfile()) } catch {}\n      }\n    } catch (e) {\n      console.warn('Failed to regenerate post index', e)\n    }\n  },\n  deletePost: async (postId) => {\n    const state = usePostStore.getState()\n    const target = state.posts.find(p => p.id === postId)\n    if (!target) return\n    usePostStore.getState().removePost(postId)\n    await usePostStore.getState().regenerateAuthorIndex(target.author)\n  }\n}))","/**\n * Image processing utilities for profile pictures\n * Handles upload, resize, crop, and optimization\n */\n\nexport interface ProcessedImage {\n  dataUrl: string\n  blob: Blob\n  width: number\n  height: number\n  size: number\n  format: string\n}\n\nexport interface CropArea {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\nexport class ImageProcessor {\n  // Standard profile picture sizes\n  static readonly PROFILE_SIZE = 200 // 200x200px standard\n  static readonly THUMBNAIL_SIZE = 64 // 64x64px thumbnail\n  static readonly MAX_FILE_SIZE = 2 * 1024 * 1024 // 2MB max\n  static readonly SUPPORTED_FORMATS = ['image/jpeg', 'image/png', 'image/webp']\n  static readonly OUTPUT_FORMAT = 'image/jpeg'\n  static readonly OUTPUT_QUALITY = 0.85\n\n  /**\n   * Process uploaded file into profile picture\n   */\n  static async processProfilePicture(file: File): Promise<ProcessedImage> {\n    // Validate file\n    this.validateFile(file)\n\n    // Load image\n    const img = await this.loadImage(file)\n    \n    // Auto-crop to square (largest centered square)\n    const cropArea = this.calculateSquareCrop(img.width, img.height)\n    \n    // Resize and compress\n    const processed = await this.resizeAndCompress(img, cropArea, this.PROFILE_SIZE)\n    \n    return processed\n  }\n\n  /**\n   * Create thumbnail from processed image\n   */\n  static async createThumbnail(processedImage: ProcessedImage): Promise<ProcessedImage> {\n    const img = await this.loadImageFromDataUrl(processedImage.dataUrl)\n    const cropArea = { x: 0, y: 0, width: img.width, height: img.height }\n    return this.resizeAndCompress(img, cropArea, this.THUMBNAIL_SIZE)\n  }\n\n  /**\n   * Process image with custom crop area\n   */\n  static async processWithCrop(file: File, cropArea: CropArea): Promise<ProcessedImage> {\n    this.validateFile(file)\n    const img = await this.loadImage(file)\n    return this.resizeAndCompress(img, cropArea, this.PROFILE_SIZE)\n  }\n\n  /**\n   * Validate uploaded file\n   */\n  private static validateFile(file: File): void {\n    if (!this.SUPPORTED_FORMATS.includes(file.type)) {\n      throw new Error(`Unsupported file format. Please use: ${this.SUPPORTED_FORMATS.join(', ')}`)\n    }\n\n    if (file.size > this.MAX_FILE_SIZE) {\n      throw new Error(`File too large. Maximum size: ${Math.round(this.MAX_FILE_SIZE / 1024 / 1024)}MB`)\n    }\n  }\n\n  /**\n   * Load image from file\n   */\n  private static loadImage(file: File): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      const url = URL.createObjectURL(file)\n      \n      img.onload = () => {\n        URL.revokeObjectURL(url)\n        resolve(img)\n      }\n      \n      img.onerror = () => {\n        URL.revokeObjectURL(url)\n        reject(new Error('Failed to load image'))\n      }\n      \n      img.src = url\n    })\n  }\n\n  /**\n   * Load image from data URL\n   */\n  private static loadImageFromDataUrl(dataUrl: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      \n      img.onload = () => resolve(img)\n      img.onerror = () => reject(new Error('Failed to load image from data URL'))\n      \n      img.src = dataUrl\n    })\n  }\n\n  /**\n   * Calculate the largest centered square crop area\n   */\n  private static calculateSquareCrop(width: number, height: number): CropArea {\n    const size = Math.min(width, height)\n    const x = (width - size) / 2\n    const y = (height - size) / 2\n    \n    return { x, y, width: size, height: size }\n  }\n\n  /**\n   * Resize image and compress\n   */\n  private static async resizeAndCompress(\n    img: HTMLImageElement, \n    cropArea: CropArea, \n    targetSize: number\n  ): Promise<ProcessedImage> {\n    const canvas = document.createElement('canvas')\n    const ctx = canvas.getContext('2d')\n    \n    if (!ctx) {\n      throw new Error('Canvas context not available')\n    }\n\n    // Set canvas size to target dimensions\n    canvas.width = targetSize\n    canvas.height = targetSize\n\n    // Enable image smoothing for better quality\n    ctx.imageSmoothingEnabled = true\n    ctx.imageSmoothingQuality = 'high'\n\n    // Draw cropped and resized image\n    ctx.drawImage(\n      img,\n      cropArea.x, cropArea.y, cropArea.width, cropArea.height, // Source\n      0, 0, targetSize, targetSize // Destination\n    )\n\n    // Convert to blob\n    const blob = await new Promise<Blob>((resolve, reject) => {\n      canvas.toBlob(\n        (blob) => {\n          if (blob) {\n            resolve(blob)\n          } else {\n            reject(new Error('Failed to create blob'))\n          }\n        },\n        this.OUTPUT_FORMAT,\n        this.OUTPUT_QUALITY\n      )\n    })\n\n    // Get data URL\n    const dataUrl = canvas.toDataURL(this.OUTPUT_FORMAT, this.OUTPUT_QUALITY)\n\n    return {\n      dataUrl,\n      blob,\n      width: targetSize,\n      height: targetSize,\n      size: blob.size,\n      format: this.OUTPUT_FORMAT\n    }\n  }\n\n  /**\n   * Convert blob to base64 string for storage\n   */\n  static async blobToBase64(blob: Blob): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => {\n        const result = reader.result as string\n        // Remove data URL prefix to get just the base64 data\n        const base64 = result.split(',')[1]\n        resolve(base64)\n      }\n      reader.onerror = () => reject(new Error('Failed to convert blob to base64'))\n      reader.readAsDataURL(blob)\n    })\n  }\n\n  /**\n   * Convert base64 string back to data URL\n   */\n  static base64ToDataUrl(base64: string, format: string = this.OUTPUT_FORMAT): string {\n    return `data:${format};base64,${base64}`\n  }\n\n  /**\n   * Get formatted file size string\n   */\n  static formatFileSize(bytes: number): string {\n    if (bytes === 0) return '0 B'\n    \n    const k = 1024\n    const sizes = ['B', 'KB', 'MB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i]\n  }\n\n  /**\n   * Check if image dimensions are suitable for profile picture\n   */\n  static validateImageDimensions(width: number, height: number): void {\n    const minSize = 100\n    const maxSize = 4000\n    \n    if (width < minSize || height < minSize) {\n      throw new Error(`Image too small. Minimum size: ${minSize}x${minSize}px`)\n    }\n    \n    if (width > maxSize || height > maxSize) {\n      throw new Error(`Image too large. Maximum size: ${maxSize}x${maxSize}px`)\n    }\n  }\n\n  /**\n   * Generate avatar initials as fallback\n   */\n  static generateAvatarInitials(name: string): string {\n    return name\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase())\n      .join('')\n      .substring(0, 2)\n  }\n\n  /**\n   * Generate gradient avatar background\n   */\n  static generateAvatarGradient(seed: string): string {\n    // Simple hash function for consistent colors\n    let hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      const char = seed.charCodeAt(i)\n      hash = ((hash << 5) - hash) + char\n      hash = hash & hash // Convert to 32-bit integer\n    }\n    \n    // Generate two colors based on hash\n    const hue1 = Math.abs(hash % 360)\n    const hue2 = (hue1 + 60) % 360\n    \n    return `linear-gradient(135deg, hsl(${hue1}, 70%, 50%), hsl(${hue2}, 70%, 70%))`\n  }\n}\n\nexport async function processAndStoreImage(file: File, _type: 'post-image' | 'avatar'): Promise<{ id: string, data: string, filename: string, size: number, mimeType: string } | null> {\n  // For now, we just convert to base64. We can add resizing later.\n  if (!file.type.startsWith('image/')) {\n    console.warn(`File is not an image: ${file.name}`);\n    return null;\n  }\n\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = e.target?.result as string;\n      if (data) {\n        resolve({\n          id: `${file.name}-${file.lastModified}`,\n          data,\n          filename: file.name,\n          size: file.size,\n          mimeType: file.type,\n        });\n      } else {\n        reject(new Error('Failed to read file data.'));\n      }\n    };\n    reader.onerror = (error) => {\n      reject(error);\n    };\n    reader.readAsDataURL(file);\n  });\n}","import { useState, useRef } from 'react'\nimport { useProfileStore } from '@/stores/profileStore'\nimport { usePostStore, PostImage } from '@/stores/postStore'\nimport { processAndStoreImage } from '@/lib/imageProcessor'\n\nexport default function CreatePost() {\n  const [content, setContent] = useState('')\n  const [images, setImages] = useState<PostImage[]>([])\n  const [isPosting, setIsPosting] = useState(false)\n  const { currentProfile } = useProfileStore()\n  const addPost = usePostStore((state) => state.addPost)\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  const handleImageChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const files = Array.from(e.target.files)\n      try {\n        const processedImages = await Promise.all(\n          files.map(file => processAndStoreImage(file, 'post-image'))\n        )\n        setImages(prev => [...prev, ...processedImages.filter((img): img is PostImage => img !== null)])\n      } catch (error) {\n        console.error(\"Error processing images:\", error)\n        // Optionally, show an error message to the user\n      }\n    }\n  }\n\n  const removeImage = (id: string) => {\n    setImages(prev => prev.filter(img => img.id !== id))\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if ((!content.trim() && images.length === 0) || !currentProfile) return\n\n    setIsPosting(true)\n    \n    try {\n      const authorKey = currentProfile.publicKey || currentProfile.username\n      await addPost({\n        author: authorKey,\n        authorDisplayName: currentProfile.displayName || currentProfile.username,\n        authorAvatar: currentProfile.avatar,\n        content,\n        images,\n      })\n\n      console.log('Post created and seeding process initiated.')\n      setContent('')\n      setImages([])\n    } catch (error) {\n      console.error('Failed to create post:', error)\n    } finally {\n      setIsPosting(false)\n    }\n  }\n\n  if (!currentProfile) {\n    return (\n      <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4 mb-6\">\n        <p className=\"text-yellow-700 dark:text-yellow-300\">\n          You need to create a profile before you can make posts.\n        </p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white mb-4\">\n        Create New Post\n      </h2>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <textarea\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          rows={4}\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n          placeholder=\"What's happening on the swarm?\"\n          disabled={isPosting}\n        />\n\n        {images.length > 0 && (\n          <div className=\"grid grid-cols-3 sm:grid-cols-4 md:grid-cols-5 gap-4\">\n            {images.map(image => (\n              <div key={image.id} className=\"relative group\">\n                <img src={image.data} alt=\"Post attachment\" className=\"w-full h-24 object-cover rounded-md\" />\n                <button\n                  type=\"button\"\n                  onClick={() => removeImage(image.id)}\n                  className=\"absolute top-1 right-1 bg-black/50 text-white rounded-full p-1 text-xs opacity-0 group-hover:opacity-100 transition-opacity\"\n                  aria-label=\"Remove image\"\n                >\n                  ✕\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center space-x-2\">\n            <button\n              type=\"button\"\n              onClick={() => fileInputRef.current?.click()}\n              className=\"p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700\"\n              aria-label=\"Add image\"\n              disabled={isPosting}\n            >\n              <svg className=\"w-6 h-6 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" /></svg>\n            </button>\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleImageChange}\n              className=\"hidden\"\n              accept=\"image/*\"\n              multiple\n              disabled={isPosting}\n              aria-label=\"File uploader\"\n            />\n            <span className=\"text-sm text-gray-500\">Posts are seeded as torrents</span>\n          </div>\n          <button\n            type=\"submit\"\n            disabled={isPosting || (!content.trim() && images.length === 0)}\n            className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isPosting ? '🌱 Seeding...' : '🌱 Seed Post'}\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { usePostStore, TorrentPost } from '../stores/postStore'\nimport { useContactStore } from '../stores/contactStore'\nimport { useProfileStore } from '@/stores/profileStore'\nimport { ImageProcessor } from '../lib/imageProcessor'\n\nconst PostTimeline: React.FC = () => {\n  const { posts, loading, loadPostsFromContacts } = usePostStore()\n  const { loadContacts, contacts } = useContactStore()\n  const { currentProfile } = useProfileStore()\n\n  useEffect(() => {\n    // Load contacts and their posts\n    loadContacts()\n    loadPostsFromContacts()\n  }, [loadContacts, loadPostsFromContacts])\n\n\n\n  // Compute allowed author identifiers (username or public key fingerprint basis)\n  const allowedAuthors = useMemo(() => {\n    const set = new Set<string>()\n    if (currentProfile) {\n      if (currentProfile.publicKey) set.add(currentProfile.publicKey)\n      set.add(currentProfile.username)\n    }\n    contacts.forEach(c => {\n      if (c.relationship === 'friend' || c.relationship === 'ring-of-trust') {\n        set.add(c.username)\n        // In future we may map to public key fingerprint\n      }\n    })\n    return set\n  }, [contacts, currentProfile])\n\n  const filteredPosts = useMemo(() => {\n    // If no contacts yet, show all local posts (author = current profile) so user sees own posts\n    if (allowedAuthors.size === 0) return posts\n    return posts.filter(p => allowedAuthors.has(p.author) || (p.authorDisplayName && allowedAuthors.has(p.authorDisplayName)))\n  }, [posts, allowedAuthors])\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Loading timeline...</span>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {filteredPosts.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">🌱</div>\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            No posts yet\n          </h3>\n          <p className=\"text-gray-500 dark:text-gray-400\">\n            Add some friends or seed a post to see activity here.\n          </p>\n        </div>\n      ) : (\n        filteredPosts.map((post: TorrentPost) => (\n          <PostCard key={post.id} post={post} />\n        ))\n      )}\n    </div>\n  )\n}\n\ninterface PostCardProps {\n  post: TorrentPost\n}\n\nconst PostCard: React.FC<PostCardProps> = ({ post }) => {\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700 p-6\">\n      {/* Post header */}\n      <div className=\"flex items-center space-x-3 mb-4\">\n        <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center text-white font-semibold\">\n          {post.authorAvatar ? (\n            <img \n              src={ImageProcessor.base64ToDataUrl(post.authorAvatar)}\n              alt={post.author}\n              className=\"w-10 h-10 rounded-full object-cover\"\n            />\n          ) : (\n            post.author.charAt(0).toUpperCase()\n          )}\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"flex items-center space-x-2\">\n            <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n              {post.authorDisplayName || post.author}\n            </h3>\n            <span className=\"text-gray-500 dark:text-gray-400\">@{post.author}</span>\n            {post.signatureVerified ? (\n              <span\n                className=\"inline-flex items-center px-1.5 py-0.5 rounded text-[10px] font-semibold bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 border border-green-300 dark:border-green-700\"\n                title={`Signature verified${post.fingerprint ? ` • ${post.fingerprint}` : ''}`}\n              >\n                ✅ ver\n              </span>\n            ) : (\n              <span\n                className=\"inline-flex items-center px-1.5 py-0.5 rounded text-[10px] font-semibold bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300 border border-yellow-300 dark:border-yellow-700\"\n                title={post.signatureError === 'missing-signature' ? 'No signature present' : `Signature invalid: ${post.signatureError || 'unknown'}`}\n              >\n                ⚠️ unverified\n              </span>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n            <span>{formatTimeAgo(post.createdAt)}</span>\n            {post.isSeeding && (\n              <span className=\"flex items-center text-green-600 dark:text-green-400\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-1\"></span>\n                Seeding\n              </span>\n            )}\n            {post.magnetUri && (\n              <span className=\"flex items-center text-blue-600 dark:text-blue-400\">\n                🧲 Torrent\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Post content */}\n      {post.content && (\n        <div className=\"mb-4\">\n          <p className=\"text-gray-900 dark:text-gray-100 whitespace-pre-line\">\n            {post.content}\n          </p>\n        </div>\n      )}\n\n      {/* Post images */}\n      {post.images && post.images.length > 0 && (\n        <div className={`mb-4 grid gap-2 ${\n          post.images.length === 1 ? 'grid-cols-1' :\n          post.images.length === 2 ? 'grid-cols-2' :\n          post.images.length === 3 ? 'grid-cols-2' :\n          'grid-cols-2'\n        }`}>\n          {post.images.map((image, index) => (\n            <div \n              key={image.id} \n              className={`${\n                post.images!.length === 3 && index === 0 ? 'col-span-2' : ''\n              }`}\n            >\n              <img\n                src={ImageProcessor.base64ToDataUrl(image.data)}\n                alt={image.filename}\n                className=\"w-full h-64 object-cover rounded-lg border border-gray-200 dark:border-gray-600 cursor-pointer hover:opacity-90 transition-opacity\"\n                onClick={() => {\n                  // TODO: Open image in modal/lightbox\n                  window.open(ImageProcessor.base64ToDataUrl(image.data), '_blank')\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Post tags */}\n      {post.tags && post.tags.length > 0 && (\n        <div className=\"mb-4\">\n          <div className=\"flex flex-wrap gap-2\">\n            {post.tags.map((tag) => (\n              <span\n                key={tag}\n                className=\"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full\"\n              >\n                #{tag}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Post actions */}\n      <div className=\"flex items-center justify-between pt-4 border-t border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center space-x-4\">\n          <button className=\"flex items-center space-x-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n            </svg>\n            <span className=\"text-sm\">Like</span>\n          </button>\n          \n          <button className=\"flex items-center space-x-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n            </svg>\n            <span className=\"text-sm\">Reply</span>\n          </button>\n\n          <button className=\"flex items-center space-x-1 text-gray-500 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400 transition-colors\">\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\n            </svg>\n            <span className=\"text-sm\">Share</span>\n          </button>\n        </div>\n\n        {post.magnetUri && (\n          <button \n            onClick={() => navigator.clipboard.writeText(post.magnetUri!)}\n            className=\"text-xs text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            title=\"Copy magnet link\"\n          >\n            🧲 Copy Magnet\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst formatTimeAgo = (dateString: string) => {\n  const date = new Date(dateString)\n  const now = new Date()\n  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000)\n\n  if (diffInSeconds < 60) return 'just now'\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`\n  if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)}d ago`\n  \n  return date.toLocaleDateString()\n}\n\nexport default PostTimeline","import { useEffect, useState } from 'react'\nimport { useCore } from '@/lib/core'\nimport CreatePost from '@/components/CreatePost'\nimport PostTimeline from '@/components/PostTimeline'\nimport { useProfileStore } from '@/stores/profileStore'\n\nconst HomePage: React.FC = () => {\n  const { core, loading: coreLoading } = useCore()\n  const { currentProfile } = useProfileStore()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (core) {\n      setLoading(false)\n    }\n  }, [core])\n\n  if (coreLoading || loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"text-gray-600 dark:text-gray-300\">Loading SnartNet...</div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n        SnartNet\n      </h1>\n      <p className=\"text-lg text-gray-600 dark:text-gray-300 mb-8\">\n        Decentralized social media, powered by swarms.\n      </p>\n      \n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"lg:col-span-2\">\n          {/* Create Post Section */}\n          {currentProfile && <CreatePost />}\n          \n          {/* Timeline */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h2 className=\"text-xl font-semibold mb-6 flex items-center\">\n              <span>Timeline</span>\n              <span className=\"ml-2 text-sm text-gray-500 dark:text-gray-400\">(Torrent-seeded posts)</span>\n            </h2>\n            <PostTimeline />\n          </div>\n        </div>\n        \n        <div className=\"space-y-6\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h2 className=\"text-xl font-semibold mb-4\">How It Works</h2>\n            <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n              Every post is a torrent seed! Your content is distributed across the swarm, \n              making it censorship-resistant and decentralized.\n            </p>\n            <div className=\"space-y-2\">\n              <p className=\"text-sm text-gray-500\">\n                🌱 Posts are seeded as torrents\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                📷 Images included in torrent files\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                🔐 Content cryptographically signed\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                🤝 Shared through your Ring of Trust\n              </p>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-semibold mb-3\">Features</h3>\n            <div className=\"space-y-2 text-sm\">\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Profile pictures & posts</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Image upload & processing</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Post torrent seeding</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></span>\n                <span>Chronological timeline</span>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"w-2 h-2 bg-yellow-500 rounded-full mr-2\"></span>\n                <span>P2P post sharing (WIP)</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage\n","import { useState } from 'react'\nimport { getCore } from '@/lib/core'\nimport { useProfileStore } from '@/stores/profileStore'\n\nexport default function CreateProfile() {\n  const [username, setUsername] = useState('')\n  const [displayName, setDisplayName] = useState('')\n  const [bio, setBio] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState<string | null>(null)\n\n  const { setCurrentProfile, setLoading, setError: setStoreError } = useProfileStore()\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!username.trim()) {\n      setError('Username is required')\n      return\n    }\n\n    setIsLoading(true)\n    setError(null)\n    setSuccess(null)\n    setStoreError(null)\n    setLoading(true)\n\n    try {\n      console.log('[CreateProfile] Starting profile creation...')\n      \n      // Get the core instance\n      const core = await getCore()\n      console.log('[CreateProfile] Core initialized')\n\n      // Create profile using WASM core\n      const magnetUri = await core.createProfile(\n        username.trim(),\n        displayName.trim() || undefined,\n        bio.trim() || undefined\n      )\n      console.log('[CreateProfile] Profile created with magnet URI:', magnetUri)\n\n      // Get the created profile\n      const profile = await core.getCurrentProfile()\n      console.log('[CreateProfile] Retrieved profile:', profile)\n\n      if (profile) {\n        // Update the store\n        setCurrentProfile(profile)\n        setSuccess(`Profile created successfully! Magnet URI: ${magnetUri}`)\n        \n        // Clear form\n        setUsername('')\n        setDisplayName('')\n        setBio('')\n        \n        console.log('[CreateProfile] Profile creation completed successfully')\n      } else {\n        throw new Error('Failed to retrieve created profile')\n      }\n\n    } catch (err) {\n      console.error('[CreateProfile] Error creating profile:', err)\n      const errorMessage = err instanceof Error ? err.message : 'Failed to create profile'\n      setError(errorMessage)\n      setStoreError(errorMessage)\n    } finally {\n      setIsLoading(false)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\n          Create Your Profile\n        </h2>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          <div>\n            <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Username *\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Enter your username\"\n              disabled={isLoading}\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Display Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"displayName\"\n              value={displayName}\n              onChange={(e) => setDisplayName(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Your display name (optional)\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"bio\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Bio\n            </label>\n            <textarea\n              id=\"bio\"\n              value={bio}\n              onChange={(e) => setBio(e.target.value)}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              placeholder=\"Tell us about yourself (optional)\"\n              disabled={isLoading}\n            />\n          </div>\n\n          {error && (\n            <div className=\"p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md\">\n              <p className=\"text-red-700 dark:text-red-300 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {success && (\n            <div className=\"p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-md\">\n              <p className=\"text-green-700 dark:text-green-300 text-sm\">{success}</p>\n            </div>\n          )}\n\n          <button\n            type=\"submit\"\n            disabled={isLoading || !username.trim()}\n            className=\"w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-medium py-2 px-4 rounded-lg transition-colors disabled:cursor-not-allowed\"\n          >\n            {isLoading ? (\n              <span className=\"flex items-center justify-center\">\n                <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Creating Profile...\n              </span>\n            ) : (\n              'Create Profile'\n            )}\n          </button>\n        </form>\n\n        <div className=\"mt-6 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\n            🔐 What happens when you create a profile?\n          </h3>\n          <ul className=\"text-xs text-gray-600 dark:text-gray-400 space-y-1\">\n            <li>• A new Ed25519 cryptographic key pair is generated</li>\n            <li>• Your profile is signed with your private key</li>\n            <li>• A magnet URI is created for peer-to-peer sharing</li>\n            <li>• Your private keys stay in your browser (never uploaded)</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport { ImageProcessor } from '../lib/imageProcessor'\n\ninterface ProfileAvatarProps {\n  profilePicture?: string\n  username?: string\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  className?: string\n  showOnlineStatus?: boolean\n  isOnline?: boolean\n  alt?: string\n}\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({\n  profilePicture,\n  username = 'User',\n  size = 'md',\n  className = '',\n  showOnlineStatus = false,\n  isOnline = false,\n  alt\n}) => {\n  const sizeClasses = {\n    xs: 'w-6 h-6',\n    sm: 'w-8 h-8',\n    md: 'w-12 h-12',\n    lg: 'w-16 h-16',\n    xl: 'w-24 h-24'\n  }\n\n  const statusSizeClasses = {\n    xs: 'w-1.5 h-1.5 bottom-0 right-0',\n    sm: 'w-2 h-2 bottom-0 right-0',\n    md: 'w-3 h-3 bottom-0.5 right-0.5',\n    lg: 'w-4 h-4 bottom-1 right-1',\n    xl: 'w-6 h-6 bottom-1 right-1'\n  }\n\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase())\n      .slice(0, 2)\n      .join('')\n  }\n\n  const avatarContent = profilePicture ? (\n    <img\n      src={ImageProcessor.base64ToDataUrl(profilePicture)}\n      alt={alt || `${username}'s avatar`}\n      className={`${sizeClasses[size]} rounded-full object-cover ${className}`}\n    />\n  ) : (\n    <div \n      className={`${sizeClasses[size]} rounded-full bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center text-white font-semibold ${className}`}\n      title={username}\n    >\n      <span className={`${\n        size === 'xs' ? 'text-xs' :\n        size === 'sm' ? 'text-sm' :\n        size === 'md' ? 'text-base' :\n        size === 'lg' ? 'text-lg' :\n        'text-xl'\n      }`}>\n        {getInitials(username)}\n      </span>\n    </div>\n  )\n\n  return (\n    <div className=\"relative inline-block\">\n      {avatarContent}\n      \n      {/* Online status indicator */}\n      {showOnlineStatus && (\n        <div\n          className={`absolute ${statusSizeClasses[size]} ${\n            isOnline ? 'bg-green-400' : 'bg-gray-400'\n          } border-2 border-white dark:border-gray-800 rounded-full`}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default ProfileAvatar","import React, { useState, useRef, useCallback } from 'react'\nimport { ImageProcessor, type ProcessedImage } from '../lib/imageProcessor'\nimport { useProfileStore } from '../stores/profileStore'\n\ninterface ProfilePictureUploaderProps {\n  onClose?: () => void\n  onSuccess?: (imageData: string) => void\n}\n\nconst ProfilePictureUploader: React.FC<ProfilePictureUploaderProps> = ({ onClose, onSuccess }) => {\n  const { currentProfile, updateProfilePicture } = useProfileStore()\n  const fileInputRef = useRef<HTMLInputElement>(null)\n  \n  const [dragActive, setDragActive] = useState(false)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [preview, setPreview] = useState<string | null>(null)\n  const [processedImage, setProcessedImage] = useState<ProcessedImage | null>(null)\n  const [status, setStatus] = useState('')\n  const [uploadProgress, setUploadProgress] = useState(0)\n\n  const resetState = () => {\n    setPreview(null)\n    setProcessedImage(null)\n    setStatus('')\n    setUploadProgress(0)\n    if (fileInputRef.current) {\n      fileInputRef.current.value = ''\n    }\n  }\n\n  const handleFiles = useCallback(async (files: FileList | File[]) => {\n    const file = files[0]\n    if (!file) return\n\n    try {\n      setIsProcessing(true)\n      setStatus('📤 Processing image...')\n      setUploadProgress(25)\n\n      // Process the image\n      const processed = await ImageProcessor.processProfilePicture(file)\n      setUploadProgress(75)\n      \n      // Create thumbnail (validation step)\n      await ImageProcessor.createThumbnail(processed)\n      setUploadProgress(90)\n\n      setProcessedImage(processed)\n      setPreview(processed.dataUrl)\n      setStatus(`✅ Image processed successfully! Size: ${ImageProcessor.formatFileSize(processed.size)}`)\n      setUploadProgress(100)\n\n      console.log('Image processed:', {\n        originalSize: file.size,\n        processedSize: processed.size,\n        dimensions: `${processed.width}x${processed.height}`,\n        format: processed.format\n      })\n\n    } catch (error) {\n      console.error('Image processing error:', error)\n      setStatus(`❌ Error: ${error instanceof Error ? error.message : 'Unknown error'}`)\n      resetState()\n    } finally {\n      setIsProcessing(false)\n    }\n  }, [])\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (files && files.length > 0) {\n      handleFiles(files)\n    }\n  }\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragActive(false)\n\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      handleFiles(e.dataTransfer.files)\n    }\n  }, [handleFiles])\n\n  const handleDrag = useCallback((e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true)\n    } else if (e.type === 'dragleave') {\n      setDragActive(false)\n    }\n  }, [])\n\n  const handleSave = async () => {\n    if (!processedImage || !currentProfile) {\n      setStatus('❌ No image to save or no current profile')\n      return\n    }\n\n    try {\n      setIsProcessing(true)\n      setStatus('💾 Saving profile picture...')\n\n      // Convert to base64 for storage\n      const base64 = await ImageProcessor.blobToBase64(processedImage.blob)\n      \n      // Create thumbnail and convert to base64\n      const thumbnail = await ImageProcessor.createThumbnail(processedImage)\n      const thumbnailBase64 = await ImageProcessor.blobToBase64(thumbnail.blob)\n\n      // Update profile store\n      updateProfilePicture(currentProfile.username, base64, thumbnailBase64)\n\n      setStatus('✅ Profile picture saved successfully!')\n      \n      // Call success callback\n      if (onSuccess) {\n        onSuccess(processedImage.dataUrl)\n      }\n\n      // Close after delay\n      setTimeout(() => {\n        if (onClose) {\n          onClose()\n        }\n      }, 1500)\n\n    } catch (error) {\n      console.error('Save error:', error)\n      setStatus(`❌ Failed to save: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleRemove = () => {\n    if (!currentProfile) return\n    \n    if (confirm('Remove your profile picture?')) {\n      // Clear profile picture\n      updateProfilePicture(currentProfile.username, '', '')\n      \n      // Remove from localStorage\n      localStorage.removeItem(`profile-picture-${currentProfile.username}`)\n      localStorage.removeItem(`profile-picture-thumb-${currentProfile.username}`)\n      \n      setStatus('✅ Profile picture removed')\n      \n      if (onSuccess) {\n        onSuccess('')\n      }\n      \n      setTimeout(() => {\n        if (onClose) {\n          onClose()\n        }\n      }, 1000)\n    }\n  }\n\n  const getProgressWidth = () => {\n    if (uploadProgress >= 100) return 'w-full'\n    if (uploadProgress >= 90) return 'w-11/12'\n    if (uploadProgress >= 75) return 'w-3/4'\n    if (uploadProgress >= 50) return 'w-1/2'\n    if (uploadProgress >= 25) return 'w-1/4'\n    return 'w-0'\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n          Profile Picture\n        </h3>\n        {onClose && (\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n          >\n            ✕\n          </button>\n        )}\n      </div>\n\n      {/* Upload Area */}\n      {!preview && (\n        <div\n          className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${\n            dragActive\n              ? 'border-blue-400 bg-blue-50 dark:bg-blue-900/20'\n              : 'border-gray-300 dark:border-gray-600 hover:border-gray-400 dark:hover:border-gray-500'\n          }`}\n          onDragEnter={handleDrag}\n          onDragLeave={handleDrag}\n          onDragOver={handleDrag}\n          onDrop={handleDrop}\n        >\n          <div className=\"text-4xl mb-4\">📷</div>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n            Drag and drop an image here, or click to select\n          </p>\n          <button\n            onClick={() => fileInputRef.current?.click()}\n            disabled={isProcessing}\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white rounded-lg transition-colors\"\n          >\n            Choose Image\n          </button>\n          \n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileSelect}\n            className=\"hidden\"\n            aria-label=\"Select profile picture file\"\n            title=\"Select profile picture file\"\n          />\n          \n          <div className=\"mt-4 text-xs text-gray-500 dark:text-gray-400\">\n            <p>Supported: JPEG, PNG, WebP</p>\n            <p>Max size: 2MB • Auto-cropped to square</p>\n          </div>\n        </div>\n      )}\n\n      {/* Preview */}\n      {preview && (\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-center\">\n            <div className=\"relative\">\n              <img\n                src={preview}\n                alt=\"Profile preview\"\n                className=\"w-32 h-32 rounded-full object-cover border-4 border-gray-200 dark:border-gray-600\"\n              />\n              {isProcessing && (\n                <div className=\"absolute inset-0 bg-black bg-opacity-50 rounded-full flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-white\"></div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {processedImage && (\n            <div className=\"text-center text-sm text-gray-600 dark:text-gray-400\">\n              <p>Size: {ImageProcessor.formatFileSize(processedImage.size)}</p>\n              <p>Dimensions: {processedImage.width}×{processedImage.height}px</p>\n            </div>\n          )}\n\n          <div className=\"flex gap-2\">\n            <button\n              onClick={handleSave}\n              disabled={isProcessing || !processedImage}\n              className=\"flex-1 px-4 py-2 bg-green-600 hover:bg-green-700 disabled:bg-gray-400 text-white rounded-lg transition-colors\"\n            >\n              {isProcessing ? '💾 Saving...' : '💾 Save'}\n            </button>\n            <button\n              onClick={resetState}\n              disabled={isProcessing}\n              className=\"px-4 py-2 bg-gray-500 hover:bg-gray-600 disabled:bg-gray-400 text-white rounded-lg transition-colors\"\n            >\n              🔄 Try Again\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Progress Bar */}\n      {isProcessing && uploadProgress > 0 && (\n        <div className=\"mt-4\">\n          <div className=\"bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div\n              className={`bg-blue-600 h-2 rounded-full transition-all duration-300 ${getProgressWidth()}`}\n            ></div>\n          </div>\n        </div>\n      )}\n\n      {/* Remove existing picture option */}\n      {currentProfile?.profilePicture && !preview && (\n        <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <img\n              src={ImageProcessor.base64ToDataUrl(currentProfile.profilePicture)}\n              alt=\"Current profile\"\n              className=\"w-16 h-16 rounded-full object-cover border-2 border-gray-200 dark:border-gray-600\"\n            />\n          </div>\n          <button\n            onClick={handleRemove}\n            className=\"w-full px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg transition-colors\"\n          >\n            🗑️ Remove Current Picture\n          </button>\n        </div>\n      )}\n\n      {/* Status Message */}\n      {status && (\n        <div className={`mt-4 p-3 rounded-lg text-sm ${\n          status.startsWith('✅') ? 'bg-green-50 dark:bg-green-900/20 text-green-800 dark:text-green-200' :\n          status.startsWith('❌') ? 'bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200' :\n          'bg-blue-50 dark:bg-blue-900/20 text-blue-800 dark:text-blue-200'\n        }`}>\n          {status}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfilePictureUploader","import React, { useState, useMemo } from 'react';\nimport { useProfileStore } from '../stores/profileStore';\nimport { usePostStore } from '../stores/postStore';\n\n// Reworked ProfilePosts: now uses global postStore (signed & seeded posts)\n// instead of the removed mock profileStore post methods.\nconst ProfilePosts: React.FC = () => {\n  const { currentProfile } = useProfileStore();\n  const { posts, addPost, deletePost, editPost } = usePostStore() as any;\n  const [postContent, setPostContent] = useState('');\n  const [posting, setPosting] = useState(false);\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [editContent, setEditContent] = useState('');\n\n  const myPosts = useMemo(() => {\n    if (!currentProfile) return [] as any[];\n    return posts\n      .filter((p: any) => p.author === currentProfile.username)\n      .sort((a: any, b: any) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  }, [posts, currentProfile]);\n\n  if (!currentProfile) return null;\n\n  const handlePost = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!postContent.trim()) return;\n    setPosting(true);\n    try {\n      await addPost({\n        author: currentProfile.username,\n        authorDisplayName: currentProfile.displayName,\n        content: postContent.trim(),\n        images: []\n      } as any);\n      setPostContent('');\n    } finally {\n      setPosting(false);\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-xl mx-auto mt-8\">\n      <form onSubmit={handlePost} className=\"mb-6 flex flex-col gap-2\">\n        <textarea\n          className=\"w-full p-3 border border-gray-300 dark:border-gray-700 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white resize-vertical\"\n          rows={3}\n          placeholder=\"What's on your mind?\"\n          value={postContent}\n          onChange={e => setPostContent(e.target.value)}\n          disabled={posting}\n        />\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n            {postContent.length > 0 && `${postContent.length} chars`}\n          </span>\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg disabled:bg-gray-400\"\n            disabled={posting || !postContent.trim()}\n          >\n            {posting ? 'Posting...' : 'Post'}\n          </button>\n        </div>\n      </form>\n      <div className=\"space-y-4\">\n        {myPosts.length > 0 ? (\n          myPosts.map((post: any) => (\n            <div key={post.id} className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4 relative\">\n              <p className=\"text-gray-900 dark:text-gray-100 mb-2 whitespace-pre-line\">{post.content}</p>\n              <div className=\"text-xs text-gray-500 dark:text-gray-400 flex flex-wrap gap-2 justify-between items-center\">\n                <span>{new Date(post.createdAt).toLocaleString()}</span>\n                <div className=\"flex items-center gap-2\">\n                  {post.signature && (\n                    <span\n                      className={\n                        'inline-flex items-center px-2 py-0.5 rounded text-[10px] font-semibold ' +\n                        (post.signatureVerified ? 'bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-300' : 'bg-red-100 text-red-700 dark:bg-red-900 dark:text-red-300')\n                      }\n                      title={post.signatureVerified ? `Signature verified${post.fingerprint ? ' (' + post.fingerprint + ')' : ''}` : `Signature invalid: ${post.signatureError || 'unknown'}`}\n                    >\n                      {post.signatureVerified ? 'Verified' : 'Invalid'}\n                    </span>\n                  )}\n                  <button\n                    className=\"text-blue-500 hover:text-blue-700 text-xs\"\n                    onClick={() => { setEditingId(post.id); setEditContent(post.content) }}\n                    title=\"Edit post\"\n                  >\n                    ✏️\n                  </button>\n                  <button\n                    className=\"text-red-500 hover:text-red-700 text-xs\"\n                    onClick={() => deletePost(post.id)}\n                    title=\"Delete post\"\n                  >\n                    🗑️\n                  </button>\n                </div>\n              </div>\n              {editingId === post.id && (\n                <div className=\"mt-2 space-y-2\">\n                  <textarea\n                    className=\"w-full p-2 border border-gray-300 dark:border-gray-700 rounded bg-white dark:bg-gray-900 text-sm\"\n                    value={editContent}\n                    onChange={e => setEditContent(e.target.value)}\n                    placeholder=\"Edit your post\"\n                    title=\"Edit post content\"\n                  />\n                  <div className=\"flex gap-2 justify-end\">\n                    <button\n                      className=\"px-3 py-1 text-xs rounded bg-gray-300 dark:bg-gray-700 hover:bg-gray-400 dark:hover:bg-gray-600\"\n                      onClick={() => { setEditingId(null); setEditContent('') }}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className=\"px-3 py-1 text-xs rounded bg-green-600 hover:bg-green-700 text-white\"\n                      disabled={!editContent.trim()}\n                      onClick={async () => { await editPost(post.id, editContent.trim()); setEditingId(null); setEditContent('') }}\n                    >\n                      Save\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">No posts yet.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePosts;\n","import React, { useState } from 'react';\nimport { useProfileStore } from '../stores/profileStore';\nimport ProfileAvatar from './ProfileAvatar';\nimport ProfilePictureUploader from './ProfilePictureUploader';\nimport ProfilePosts from './ProfilePosts';\n\nconst ProfileDisplay: React.FC = () => {\n  const { currentProfile } = useProfileStore();\n  const [showUploader, setShowUploader] = useState(false);\n\n  if (!currentProfile) {\n    return (\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 text-center\">\n        <p className=\"text-gray-700 dark:text-gray-300\">No profile loaded.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 flex flex-col items-center\">\n      <div className=\"mb-4 relative\">\n        <ProfileAvatar\n          profilePicture={currentProfile.profilePicture}\n          username={currentProfile.username}\n          size=\"xl\"\n        />\n        <button\n          className=\"absolute bottom-0 right-0 bg-blue-600 hover:bg-blue-700 text-white rounded-full p-2 shadow-lg border-2 border-white dark:border-gray-800\"\n          onClick={() => setShowUploader(true)}\n          title=\"Change profile picture\"\n        >\n          <span role=\"img\" aria-label=\"Edit\">✏️</span>\n        </button>\n      </div>\n      <div className=\"text-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-1\">\n          {currentProfile.displayName || currentProfile.username}\n        </h2>\n        <p className=\"text-gray-500 dark:text-gray-300 mb-2\">@{currentProfile.username}</p>\n        {currentProfile.bio && (\n          <p className=\"text-gray-700 dark:text-gray-200 mb-2 max-w-xl mx-auto\">{currentProfile.bio}</p>\n        )}\n      </div>\n\n      {showUploader && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-900 rounded-lg shadow-lg p-4 relative w-full max-w-lg\">\n            <button\n              className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              onClick={() => setShowUploader(false)}\n              title=\"Close\"\n            >\n              ✕\n            </button>\n            <ProfilePictureUploader onClose={() => setShowUploader(false)} />\n          </div>\n        </div>\n      )}\n      {/* Profile posts section */}\n      <div className=\"w-full mt-8\">\n        <ProfilePosts />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileDisplay;\n\n","import React, { useState } from 'react'\nimport { useProfileStore } from '../stores/profileStore'\nimport { getCore } from '../lib/core'\n\ninterface EditProfileProps {\n  onCancel: () => void\n}\n\nconst EditProfile: React.FC<EditProfileProps> = ({ onCancel }) => {\n  const { currentProfile, setCurrentProfile } = useProfileStore()\n  \n  const [formData, setFormData] = useState({\n    username: currentProfile?.username || '',\n    displayName: currentProfile?.displayName || '',\n    bio: currentProfile?.bio || '',\n    location: currentProfile?.location || '',\n    website: currentProfile?.website || '',\n    avatar: currentProfile?.avatar || ''\n  })\n  \n  const [errors, setErrors] = useState<{[key: string]: string}>({})\n  const [isLoading, setIsLoading] = useState(false)\n\n  const validateForm = () => {\n    const newErrors: {[key: string]: string} = {}\n    \n    if (formData.website && !formData.website.match(/^https?:\\/\\/.+/)) {\n      newErrors.website = 'Website must be a valid URL (http:// or https://)'\n    }\n    \n    setErrors(newErrors)\n    return Object.keys(newErrors).length === 0\n  }\n\n  const handleSave = async () => {\n    if (!validateForm()) return\n    \n    setIsLoading(true)\n    try {\n      const core = await getCore()\n      \n      // Update core profile data (note: username cannot be changed)\n      core.updateProfile(\n        formData.displayName,\n        formData.bio\n      )\n      \n      // Store extended profile data in localStorage\n      const extendedData = {\n        location: formData.location,\n        website: formData.website,\n        avatar: formData.avatar,\n        updatedAt: new Date().toISOString()\n      }\n      localStorage.setItem(`profile-extended-${formData.username}`, JSON.stringify(extendedData))\n      \n      // Update the store with all data\n      const updatedProfile = {\n        ...currentProfile!,\n        username: formData.username,\n        displayName: formData.displayName,\n        bio: formData.bio,\n        location: formData.location,\n        website: formData.website,\n        avatar: formData.avatar,\n        updatedAt: new Date().toISOString()\n      }\n      \n      setCurrentProfile(updatedProfile)\n      onCancel() // Close the edit form\n      \n    } catch (error) {\n      console.error('Failed to update profile:', error)\n      setErrors({ general: 'Failed to update profile. Please try again.' })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }))\n    }\n  }\n\n  return (\n    <div className=\"space-y-4 p-4 border rounded-lg bg-white dark:bg-gray-800\">\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Edit Profile</h3>\n      \n      {errors.general && (\n        <div className=\"text-red-600 text-sm\">{errors.general}</div>\n      )}\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Username (cannot be changed)\n        </label>\n        <input\n          type=\"text\"\n          value={formData.username}\n          readOnly\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-gray-100 dark:bg-gray-600 text-gray-600 dark:text-gray-400 cursor-not-allowed\"\n          placeholder=\"Enter username\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Display Name\n        </label>\n        <input\n          type=\"text\"\n          value={formData.displayName}\n          onChange={(e) => handleInputChange('displayName', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          placeholder=\"Enter display name\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Bio\n        </label>\n        <textarea\n          value={formData.bio}\n          onChange={(e) => handleInputChange('bio', e.target.value)}\n          rows={3}\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          placeholder=\"Tell us about yourself\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Location\n        </label>\n        <input\n          type=\"text\"\n          value={formData.location}\n          onChange={(e) => handleInputChange('location', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          placeholder=\"Enter your location\"\n        />\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Website\n        </label>\n        <input\n          type=\"url\"\n          value={formData.website}\n          onChange={(e) => handleInputChange('website', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          placeholder=\"https://example.com\"\n        />\n        {errors.website && <div className=\"text-red-600 text-sm mt-1\">{errors.website}</div>}\n      </div>\n      \n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Avatar URL\n        </label>\n        <input\n          type=\"url\"\n          value={formData.avatar}\n          onChange={(e) => handleInputChange('avatar', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n          placeholder=\"https://example.com/avatar.jpg\"\n        />\n      </div>\n      \n      <div className=\"flex gap-2 pt-4\">\n        <button\n          onClick={handleSave}\n          disabled={isLoading}\n          className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md disabled:opacity-50\"\n        >\n          {isLoading ? 'Saving...' : 'Save Changes'}\n        </button>\n        <button\n          onClick={onCancel}\n          disabled={isLoading}\n          className=\"px-4 py-2 bg-gray-300 hover:bg-gray-400 text-gray-700 rounded-md\"\n        >\n          Cancel\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default EditProfile","interface ProgressBarProps {\n  progress: number\n  className?: string\n}\n\nexport default function ProgressBar({ progress, className = \"\" }: ProgressBarProps) {\n  const progressPercentage = Math.max(0, Math.min(100, progress * 100))\n  \n  // Create dynamic width classes based on progress\n  const getProgressClass = () => {\n    if (progressPercentage === 0) return 'w-0'\n    if (progressPercentage >= 100) return 'w-full'\n    if (progressPercentage >= 75) return 'w-3/4'\n    if (progressPercentage >= 50) return 'w-1/2'\n    if (progressPercentage >= 25) return 'w-1/4'\n    return 'w-1/12'\n  }\n  \n  return (\n    <div className={`w-full bg-gray-200 dark:bg-gray-600 rounded-full h-2 overflow-hidden ${className}`}>\n      <div className={`bg-blue-600 h-2 rounded-full transition-all duration-300 ${getProgressClass()}`} />\n    </div>\n  )\n}","import { useState, useEffect } from 'react'\nimport { getTorrentService, TorrentEvent } from '@/lib/torrent'\nimport ProgressBar from '@/components/ProgressBar'\n\ninterface TorrentStats {\n  torrents: number\n  downloadSpeed: number\n  uploadSpeed: number\n  downloaded: number\n  uploaded: number\n  peers: number\n}\n\ninterface ActiveTorrent {\n  infoHash: string\n  name: string | null\n  magnetURI: string\n  progress: number\n  downloadSpeed: number\n  uploadSpeed: number\n  numPeers: number\n  downloaded: number\n  uploaded: number\n}\n\nexport default function WebTorrentStatus() {\n  const [stats, setStats] = useState<TorrentStats>({\n    torrents: 0, downloadSpeed: 0, uploadSpeed: 0, downloaded: 0, uploaded: 0, peers: 0\n  })\n  const [activeTorrents, setActiveTorrents] = useState<ActiveTorrent[]>([])\n  const [events, setEvents] = useState<string[]>([])\n  const [isConnected, setIsConnected] = useState(false)\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout\n\n    const initializeTorrent = () => {\n      try {\n        const torrentService = getTorrentService()\n        setIsConnected(true)\n\n        // Subscribe to torrent events\n        const unsubscribe = torrentService.onEvent((event: TorrentEvent) => {\n          const timestamp = new Date().toLocaleTimeString()\n          \n          switch (event.type) {\n            case 'seeding-started':\n              if ('profile' in event && event.profile) {\n                setEvents(prev => [`[${timestamp}] ✅ Started seeding profile: ${event.profile.username}`, ...prev.slice(0, 9)])\n              } else if ('post' in event && event.post) {\n                setEvents(prev => [`[${timestamp}] ✅ Started seeding post by: ${event.post.authorDisplayName || 'anonymous'}`, ...prev.slice(0, 9)])\n              }\n              break\n            case 'peer-connected':\n              setEvents(prev => [`[${timestamp}] 🔗 Peer connected: ${event.peerId}`, ...prev.slice(0, 9)])\n              break\n            case 'upload-progress':\n              // Don't log every upload progress to avoid spam\n              if (Math.random() < 0.1) { // Log ~10% of upload events\n                setEvents(prev => [`[${timestamp}] ⬆️ Upload: ${formatBytes(event.uploadSpeed)}/s`, ...prev.slice(0, 9)])\n              }\n              break\n            case 'profile-downloaded':\n              if (event.profile) {\n                setEvents(prev => [`[${timestamp}] ⬇️ Downloaded profile: ${event.profile.username}`, ...prev.slice(0, 9)])\n              }\n              break\n            case 'download-progress':\n              if (Math.random() < 0.1) { // Log ~10% of download events\n                setEvents(prev => [`[${timestamp}] ⬇️ Progress: ${(event.progress * 100).toFixed(1)}%`, ...prev.slice(0, 9)])\n              }\n              break\n            case 'error':\n              setEvents(prev => [`[${timestamp}] ❌ Error: ${event.error}`, ...prev.slice(0, 9)])\n              break\n          }\n        })\n\n        // Update stats every 2 seconds\n        interval = setInterval(() => {\n          setStats(torrentService.getStats())\n          setActiveTorrents(torrentService.getActiveTorrents())\n        }, 2000)\n\n        // Initial update\n        setStats(torrentService.getStats())\n        setActiveTorrents(torrentService.getActiveTorrents())\n\n        return unsubscribe\n      } catch (error) {\n        console.error('Failed to initialize torrent service:', error)\n        setIsConnected(false)\n        setEvents(prev => [`Failed to initialize WebTorrent: ${error}`, ...prev.slice(0, 9)])\n      }\n    }\n\n    const unsubscribe = initializeTorrent()\n\n    return () => {\n      if (interval) clearInterval(interval)\n      if (unsubscribe) unsubscribe()\n    }\n  }, [])\n\n  const formatBytes = (bytes: number): string => {\n    if (bytes === 0) return '0 B'\n    const k = 1024\n    const sizes = ['B', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i]\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n          WebTorrent Client\n        </h2>\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n            {isConnected ? 'Connected' : 'Disconnected'}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n        <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-3\">\n          <div className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n            {stats.torrents}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Active Torrents</div>\n        </div>\n\n        <div className=\"bg-green-50 dark:bg-green-900/20 rounded-lg p-3\">\n          <div className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n            {stats.peers}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Connected Peers</div>\n        </div>\n\n        <div className=\"bg-purple-50 dark:bg-purple-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-purple-600 dark:text-purple-400\">\n            ⬆️ {formatBytes(stats.uploadSpeed)}/s\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Upload Speed</div>\n        </div>\n\n        <div className=\"bg-orange-50 dark:bg-orange-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-orange-600 dark:text-orange-400\">\n            ⬇️ {formatBytes(stats.downloadSpeed)}/s\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Download Speed</div>\n        </div>\n\n        <div className=\"bg-indigo-50 dark:bg-indigo-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-indigo-600 dark:text-indigo-400\">\n            {formatBytes(stats.uploaded)}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Uploaded</div>\n        </div>\n\n        <div className=\"bg-pink-50 dark:bg-pink-900/20 rounded-lg p-3\">\n          <div className=\"text-lg font-bold text-pink-600 dark:text-pink-400\">\n            {formatBytes(stats.downloaded)}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Downloaded</div>\n        </div>\n      </div>\n\n      {activeTorrents.length > 0 && (\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\n            Active Torrents\n          </h3>\n          <div className=\"space-y-2\">\n            {activeTorrents.map((torrent) => (\n              <div key={torrent.infoHash} className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"font-medium text-gray-900 dark:text-white truncate\">\n                    {torrent.name || 'Unnamed Torrent'}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {(torrent.progress * 100).toFixed(1)}%\n                  </div>\n                </div>\n                <ProgressBar progress={torrent.progress} className=\"mb-2\" />\n                <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\n                  <span>Peers: {torrent.numPeers}</span>\n                  <span>⬆️ {formatBytes(torrent.uploadSpeed)}/s ⬇️ {formatBytes(torrent.downloadSpeed)}/s</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\n          Recent Activity\n        </h3>\n        <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4 h-48 overflow-y-auto\">\n          {events.length > 0 ? (\n            <div className=\"space-y-1\">\n              {events.map((event, index) => (\n                <div key={index} className=\"text-sm font-mono text-gray-700 dark:text-gray-300\">\n                  {event}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center text-gray-500 dark:text-gray-400 mt-16\">\n              No activity yet. Start seeding a profile to see torrent activity!\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}","import { getCore } from './core'\n\nexport interface ProfileBackup {\n  version: string\n  timestamp: string\n  profile: any\n  keypair: any\n  extendedData: any\n  contacts?: any[]\n  metadata: {\n    username: string\n    fingerprint: string\n    backupId: string\n  }\n}\n\nexport class BackupService {\n  private static readonly BACKUP_VERSION = '1.0.0'\n  private static readonly FILE_EXTENSION = '.snartnet-backup'\n\n  /**\n   * Create a complete backup of the current profile, keys, and associated data\n   */\n  static async createBackup(includeContacts: boolean = true): Promise<ProfileBackup> {\n    try {\n      const core = await getCore()\n      \n      // Get current profile\n      const profile = await core.getCurrentProfile()\n      if (!profile) {\n        throw new Error('No current profile to backup')\n      }\n\n      // Get keypair from localStorage (this is where the WASM core stores it)\n      const keypairData = localStorage.getItem('snartnet_keypair')\n      if (!keypairData) {\n        throw new Error('No keypair found for backup')\n      }\n\n      // Get extended profile data\n      const extendedData = localStorage.getItem(`profile-extended-${profile.username}`)\n      \n      // Get contacts if requested\n      let contacts = null\n      if (includeContacts) {\n        const contactsData = localStorage.getItem('snartnet-contacts')\n        contacts = contactsData ? JSON.parse(contactsData) : []\n      }\n\n      // Create backup object\n      const backup: ProfileBackup = {\n        version: this.BACKUP_VERSION,\n        timestamp: new Date().toISOString(),\n        profile: profile,\n        keypair: JSON.parse(keypairData),\n        extendedData: extendedData ? JSON.parse(extendedData) : null,\n        contacts: contacts,\n        metadata: {\n          username: profile.username,\n          fingerprint: profile.fingerprint || 'unknown',\n          backupId: this.generateBackupId()\n        }\n      }\n\n      console.log('Backup created successfully:', {\n        username: backup.metadata.username,\n        timestamp: backup.timestamp,\n        includesContacts: !!backup.contacts\n      })\n\n      return backup\n    } catch (error) {\n      console.error('Failed to create backup:', error)\n      throw new Error(`Backup creation failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  /**\n   * Download backup as a file\n   */\n  static async downloadBackup(includeContacts: boolean = true, password?: string): Promise<void> {\n    try {\n      const backup = await this.createBackup(includeContacts)\n      \n      let backupData: any = backup\n      \n      // Apply password protection if provided\n      if (password) {\n        backupData = await this.encryptBackup(backup, password)\n      }\n\n      const backupJson = JSON.stringify(backupData, null, 2)\n      const blob = new Blob([backupJson], { type: 'application/json' })\n      \n      // Create download\n      const url = URL.createObjectURL(blob)\n      const link = document.createElement('a')\n      link.href = url\n      link.download = `${backup.metadata.username}_backup_${this.formatDateForFilename(backup.timestamp)}${this.FILE_EXTENSION}`\n      \n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      URL.revokeObjectURL(url)\n\n      console.log('Backup downloaded successfully')\n    } catch (error) {\n      console.error('Failed to download backup:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Restore profile from backup data\n   */\n  static async restoreFromBackup(backupData: any, password?: string): Promise<void> {\n    try {\n      let backup: ProfileBackup\n      \n      // Decrypt if password provided\n      if (password && backupData.encrypted) {\n        backup = await this.decryptBackup(backupData, password)\n      } else {\n        backup = backupData as ProfileBackup\n      }\n\n      // Validate backup format\n      this.validateBackup(backup)\n\n      console.log('Restoring backup:', {\n        version: backup.version,\n        username: backup.metadata.username,\n        timestamp: backup.timestamp\n      })\n\n      // Clear existing data\n      localStorage.removeItem('snartnet_keypair')\n      localStorage.removeItem('snartnet_current_profile')\n      localStorage.removeItem('snartnet-contacts')\n\n      // Restore keypair\n      localStorage.setItem('snartnet_keypair', JSON.stringify(backup.keypair))\n\n      // Restore profile\n      localStorage.setItem('snartnet_current_profile', JSON.stringify({\n        profile: backup.profile,\n        signature: backup.keypair?.signature || 'restored' // Fallback if no signature\n      }))\n\n      // Restore extended data\n      if (backup.extendedData && backup.metadata.username) {\n        localStorage.setItem(`profile-extended-${backup.metadata.username}`, JSON.stringify(backup.extendedData))\n      }\n\n      // Restore contacts\n      if (backup.contacts) {\n        localStorage.setItem('snartnet-contacts', JSON.stringify(backup.contacts))\n      }\n\n      console.log('Backup restored successfully')\n      \n      // Reload page to reinitialize with restored data\n      window.location.reload()\n    } catch (error) {\n      console.error('Failed to restore backup:', error)\n      throw new Error(`Restore failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    }\n  }\n\n  /**\n   * Restore from uploaded file\n   */\n  static async restoreFromFile(file: File, password?: string): Promise<void> {\n    try {\n      if (!file.name.endsWith(this.FILE_EXTENSION) && !file.name.endsWith('.json')) {\n        throw new Error('Invalid backup file format. Please select a .snartnet-backup or .json file.')\n      }\n\n      const fileContent = await this.readFileContent(file)\n      const backupData = JSON.parse(fileContent)\n      \n      await this.restoreFromBackup(backupData, password)\n    } catch (error) {\n      console.error('Failed to restore from file:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Simple encryption using built-in crypto (for basic protection)\n   */\n  private static async encryptBackup(backup: ProfileBackup, _password: string): Promise<any> {\n    // For now, just base64 encode with password hint\n    // In production, you'd want proper encryption with the password\n    // TODO: Implement proper encryption using _password\n    \n    const data = JSON.stringify(backup)\n    const encoded = btoa(unescape(encodeURIComponent(data)))\n    \n    return {\n      encrypted: true,\n      version: backup.version,\n      data: encoded,\n      hint: `Backup for ${backup.metadata.username}`,\n      timestamp: backup.timestamp\n    }\n  }\n\n  /**\n   * Simple decryption (matches encryption method)\n   */\n  private static async decryptBackup(encryptedData: any, _password: string): Promise<ProfileBackup> {\n    try {\n      // TODO: Implement proper decryption with _password\n      \n      const decoded = decodeURIComponent(escape(atob(encryptedData.data)))\n      return JSON.parse(decoded) as ProfileBackup\n    } catch (error) {\n      throw new Error('Invalid password or corrupted backup file')\n    }\n  }\n\n  /**\n   * Validate backup structure\n   */\n  private static validateBackup(backup: any): void {\n    if (!backup || typeof backup !== 'object') {\n      throw new Error('Invalid backup format')\n    }\n\n    if (!backup.version || !backup.timestamp || !backup.profile || !backup.keypair) {\n      throw new Error('Incomplete backup data')\n    }\n\n    if (!backup.metadata || !backup.metadata.username) {\n      throw new Error('Missing backup metadata')\n    }\n\n    // Check version compatibility\n    if (backup.version !== this.BACKUP_VERSION) {\n      console.warn('Backup version mismatch:', backup.version, 'vs', this.BACKUP_VERSION)\n      // For now, proceed anyway, but could add migration logic here\n    }\n  }\n\n  /**\n   * Read file content as text\n   */\n  private static readFileContent(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      \n      reader.onload = (event) => {\n        if (event.target?.result) {\n          resolve(event.target.result as string)\n        } else {\n          reject(new Error('Failed to read file'))\n        }\n      }\n      \n      reader.onerror = () => {\n        reject(new Error('File reading error'))\n      }\n      \n      reader.readAsText(file)\n    })\n  }\n\n  /**\n   * Generate unique backup ID\n   */\n  private static generateBackupId(): string {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2)\n  }\n\n  /**\n   * Format date for filename\n   */\n  private static formatDateForFilename(timestamp: string): string {\n    const date = new Date(timestamp)\n    return date.toISOString().split('T')[0].replace(/-/g, '')\n  }\n\n  /**\n   * Get backup info from file without fully restoring\n   */\n  static async getBackupInfo(file: File, password?: string): Promise<{\n    username: string\n    timestamp: string\n    version: string\n    hasContacts: boolean\n    fingerprint: string\n  }> {\n    try {\n      const content = await this.readFileContent(file)\n      let backupData = JSON.parse(content)\n      \n      // Handle encrypted backups\n      if (backupData.encrypted && password) {\n        backupData = await this.decryptBackup(backupData, password)\n      }\n      \n      return {\n        username: backupData.metadata?.username || 'Unknown',\n        timestamp: backupData.timestamp || 'Unknown',\n        version: backupData.version || 'Unknown',\n        hasContacts: Array.isArray(backupData.contacts) && backupData.contacts.length > 0,\n        fingerprint: backupData.metadata?.fingerprint || 'Unknown'\n      }\n    } catch (error) {\n      throw new Error('Failed to read backup info: ' + (error instanceof Error ? error.message : 'Unknown error'))\n    }\n  }\n}","import React, { useState, useRef } from 'react'\nimport { BackupService } from '../lib/backup'\nimport { useProfileStore } from '../stores/profileStore'\n\ninterface BackupRestoreProps {\n  onClose?: () => void\n}\n\nconst BackupRestore: React.FC<BackupRestoreProps> = ({ onClose }) => {\n  const { currentProfile } = useProfileStore()\n  const fileInputRef = useRef<HTMLInputElement>(null)\n  \n  const [activeTab, setActiveTab] = useState<'backup' | 'restore'>('backup')\n  const [includeContacts, setIncludeContacts] = useState(true)\n  const [usePassword, setUsePassword] = useState(false)\n  const [password, setPassword] = useState('')\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [status, setStatus] = useState('')\n  const [backupInfo, setBackupInfo] = useState<any>(null)\n\n  const handleBackupDownload = async () => {\n    if (!currentProfile) {\n      setStatus('❌ No profile to backup')\n      return\n    }\n\n    if (usePassword && !password.trim()) {\n      setStatus('❌ Password is required')\n      return\n    }\n\n    try {\n      setIsProcessing(true)\n      setStatus('📦 Creating backup...')\n      \n      await BackupService.downloadBackup(includeContacts, usePassword ? password : undefined)\n      \n      setStatus('✅ Backup downloaded successfully!')\n    } catch (error) {\n      console.error('Backup failed:', error)\n      setStatus(`❌ Backup failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]\n    if (!file) return\n\n    try {\n      setIsProcessing(true)\n      setStatus('📄 Reading backup file...')\n      \n      // Try to get backup info\n      const info = await BackupService.getBackupInfo(file, usePassword ? password : undefined)\n      setBackupInfo(info)\n      setStatus('📋 Backup file loaded. Review info below and click Restore.')\n    } catch (error) {\n      console.error('Failed to read backup:', error)\n      setStatus(`❌ Failed to read backup: ${error instanceof Error ? error.message : 'Unknown error'}`)\n      setBackupInfo(null)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const handleRestore = async () => {\n    const file = fileInputRef.current?.files?.[0]\n    if (!file) {\n      setStatus('❌ Please select a backup file')\n      return\n    }\n\n    if (usePassword && !password.trim()) {\n      setStatus('❌ Password is required')\n      return\n    }\n\n    if (!confirm('⚠️ This will replace your current profile and data. Are you sure?')) {\n      return\n    }\n\n    try {\n      setIsProcessing(true)\n      setStatus('🔄 Restoring backup...')\n      \n      await BackupService.restoreFromFile(file, usePassword ? password : undefined)\n      \n      setStatus('✅ Backup restored successfully! Page will reload...')\n    } catch (error) {\n      console.error('Restore failed:', error)\n      setStatus(`❌ Restore failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const resetForm = () => {\n    setPassword('')\n    setStatus('')\n    setBackupInfo(null)\n    if (fileInputRef.current) {\n      fileInputRef.current.value = ''\n    }\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n          Profile Backup & Restore\n        </h2>\n        {onClose && (\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n          >\n            ✕\n          </button>\n        )}\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700 mb-6\">\n        <nav className=\"flex space-x-8\">\n          <button\n            onClick={() => { setActiveTab('backup'); resetForm() }}\n            className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n              activeTab === 'backup'\n                ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400'\n            }`}\n          >\n            📦 Backup\n          </button>\n          <button\n            onClick={() => { setActiveTab('restore'); resetForm() }}\n            className={`py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n              activeTab === 'restore'\n                ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400'\n            }`}\n          >\n            🔄 Restore\n          </button>\n        </nav>\n      </div>\n\n      {/* Backup Tab */}\n      {activeTab === 'backup' && (\n        <div className=\"space-y-6\">\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-lg p-4\">\n            <h3 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\n              📋 What gets backed up:\n            </h3>\n            <ul className=\"text-sm text-blue-800 dark:text-blue-200 space-y-1\">\n              <li>• Your profile information and cryptographic keys</li>\n              <li>• Extended profile data (avatar, location, website)</li>\n              <li>• Your contacts and relationships (optional)</li>\n              <li>• All necessary data to restore your identity</li>\n            </ul>\n          </div>\n\n          {currentProfile ? (\n            <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n              <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">Current Profile:</h4>\n              <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                <strong>Username:</strong> {currentProfile.username}<br/>\n                <strong>Display Name:</strong> {currentProfile.displayName || 'Not set'}<br/>\n                <strong>Public Key:</strong> {currentProfile.publicKey?.slice(0, 16) + '...' || 'Unknown'}\n              </p>\n            </div>\n          ) : (\n            <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg p-4\">\n              <p className=\"text-yellow-800 dark:text-yellow-200\">\n                ⚠️ No profile found to backup. Please create a profile first.\n              </p>\n            </div>\n          )}\n\n          <div className=\"space-y-4\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={includeContacts}\n                onChange={(e) => setIncludeContacts(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-gray-700 dark:text-gray-300\">\n                Include contacts and relationships in backup\n              </span>\n            </label>\n\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={usePassword}\n                onChange={(e) => setUsePassword(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-gray-700 dark:text-gray-300\">\n                Password protect backup (recommended)\n              </span>\n            </label>\n\n            {usePassword && (\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Enter backup password\"\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n            )}\n          </div>\n\n          <button\n            onClick={handleBackupDownload}\n            disabled={isProcessing || !currentProfile}\n            className=\"w-full px-4 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isProcessing ? '📦 Creating Backup...' : '💾 Download Backup'}\n          </button>\n        </div>\n      )}\n\n      {/* Restore Tab */}\n      {activeTab === 'restore' && (\n        <div className=\"space-y-6\">\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg p-4\">\n            <h3 className=\"font-semibold text-yellow-900 dark:text-yellow-100 mb-2\">\n              ⚠️ Important Warning:\n            </h3>\n            <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n              Restoring a backup will completely replace your current profile, keys, and data. \n              Make sure to backup your current profile first if you want to keep it.\n            </p>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Select Backup File:\n              </label>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\".snartnet-backup,.json\"\n                onChange={handleFileSelect}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                Accepts .snartnet-backup and .json files\n              </p>\n            </div>\n\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={usePassword}\n                onChange={(e) => setUsePassword(e.target.checked)}\n                className=\"mr-2\"\n              />\n              <span className=\"text-gray-700 dark:text-gray-300\">\n                Backup is password protected\n              </span>\n            </label>\n\n            {usePassword && (\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Enter backup password\"\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n            )}\n          </div>\n\n          {backupInfo && (\n            <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n              <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">Backup Information:</h4>\n              <div className=\"text-sm text-gray-600 dark:text-gray-300 space-y-1\">\n                <p><strong>Username:</strong> {backupInfo.username}</p>\n                <p><strong>Created:</strong> {new Date(backupInfo.timestamp).toLocaleString()}</p>\n                <p><strong>Version:</strong> {backupInfo.version}</p>\n                <p><strong>Fingerprint:</strong> {backupInfo.fingerprint}</p>\n                <p><strong>Includes Contacts:</strong> {backupInfo.hasContacts ? 'Yes' : 'No'}</p>\n              </div>\n            </div>\n          )}\n\n          <button\n            onClick={handleRestore}\n            disabled={isProcessing || !backupInfo}\n            className=\"w-full px-4 py-3 bg-orange-600 hover:bg-orange-700 disabled:bg-gray-400 text-white font-medium rounded-lg transition-colors\"\n          >\n            {isProcessing ? '🔄 Restoring...' : '🔄 Restore Backup'}\n          </button>\n        </div>\n      )}\n\n      {/* Status Message */}\n      {status && (\n        <div className={`mt-6 p-4 rounded-lg ${\n          status.startsWith('✅') ? 'bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700' :\n          status.startsWith('❌') ? 'bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700' :\n          status.startsWith('⚠️') ? 'bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700' :\n          'bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700'\n        }`}>\n          <p className={`text-sm font-medium ${\n            status.startsWith('✅') ? 'text-green-800 dark:text-green-200' :\n            status.startsWith('❌') ? 'text-red-800 dark:text-red-200' :\n            status.startsWith('⚠️') ? 'text-yellow-800 dark:text-yellow-200' :\n            'text-blue-800 dark:text-blue-200'\n          }`}>\n            {status}\n          </p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default BackupRestore","import { useState } from 'react'\nimport { useProfileStore } from '@/stores/profileStore'\nimport { getCore } from '@/lib/core'\nimport CreateProfile from '@/components/CreateProfile'\nimport ProfileDisplay from '@/components/ProfileDisplay'\nimport EditProfile from '@/components/EditProfile'\nimport WebTorrentStatus from '@/components/WebTorrentStatus'\nimport BackupRestore from '@/components/BackupRestore'\n\n\nconst ProfilePage: React.FC = () => {\n  const { currentProfile, loading, seedProfileEnabled, setSeedProfileEnabled } = useProfileStore()\n  const [showCreateNew, setShowCreateNew] = useState(false)\n  const [showBackupRestore, setShowBackupRestore] = useState(false)\n  const [autoSeedStatus, setAutoSeedStatus] = useState<string>('')\n  const [showEditProfile, setShowEditProfile] = useState(false)\n\n  // Auto seed when toggle ON and profile exists\n  async function ensureSeeding() {\n    if (!currentProfile || !seedProfileEnabled) return\n    try {\n      setAutoSeedStatus('Seeding profile...')\n      const core = await getCore()\n      const magnet = await core.seedCurrentProfile()\n      setAutoSeedStatus(`Seeding ✓ (${magnet.slice(0,40)}...)`)\n    } catch (e:any) {\n      setAutoSeedStatus(`Seeding failed: ${e?.message || 'error'}`)\n    }\n  }\n\n  if (currentProfile && seedProfileEnabled && autoSeedStatus === '') {\n    // fire and forget (simple guard to avoid loops)\n    ensureSeeding()\n  }\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n          Profile Management\n        </h1>\n        \n        <div className=\"flex gap-4 items-center\">\n          <label className=\"flex items-center gap-2 text-sm text-gray-700 dark:text-gray-300 cursor-pointer select-none\">\n            <input\n              type=\"checkbox\"\n              className=\"rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500\"\n              checked={seedProfileEnabled}\n              onChange={e => {\n                setSeedProfileEnabled(e.target.checked)\n                if (e.target.checked) {\n                  ensureSeeding()\n                }\n              }}\n            />\n            <span>Seed my profile (auto)</span>\n            {autoSeedStatus && (\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">{autoSeedStatus}</span>\n            )}\n          </label>\n          {currentProfile && !showCreateNew && !showBackupRestore && !showEditProfile && (\n            <>\n              <button\n                onClick={() => setShowBackupRestore(true)}\n                className=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                💾 Backup & Restore\n              </button>\n              <button\n                onClick={() => setShowCreateNew(true)}\n                className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Create New Profile\n              </button>\n              <button\n                onClick={() => setShowEditProfile(true)}\n                className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Edit Profile\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n      \n      {loading && (\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Loading profile...</span>\n        </div>\n      )}\n\n      {!loading && (\n        <div className=\"space-y-8\">\n          {showBackupRestore && (\n            <div>\n              <BackupRestore onClose={() => setShowBackupRestore(false)} />\n            </div>\n          )}\n\n          {showCreateNew && !showBackupRestore && !showEditProfile && (\n            <div>\n              <div className=\"flex items-center justify-between mb-4\">\n                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Create New Profile\n                </h2>\n                <button\n                  onClick={() => setShowCreateNew(false)}\n                  className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n                >\n                  ✕ Cancel\n                </button>\n              </div>\n              <CreateProfile />\n            </div>\n          )}\n          \n          {!showBackupRestore && !showEditProfile && (\n            <>\n              {currentProfile ? (\n                <div>\n                  {!showCreateNew && (\n                    <>\n                      <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                        Current Profile\n                      </h2>\n                      <ProfileDisplay />\n                    </>\n                  )}\n                </div>\n              ) : (\n                !showCreateNew && <CreateProfile />\n              )}\n              \n              <WebTorrentStatus />\n            </>\n          )}\n          {showEditProfile && currentProfile && !showBackupRestore && !showCreateNew && (\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Edit Profile</h2>\n                <button\n                  onClick={() => setShowEditProfile(false)}\n                  className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n                >\n                  ✕ Close\n                </button>\n              </div>\n              <EditProfile onCancel={() => setShowEditProfile(false)} />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ProfilePage","// Message push transport abstraction (DHT/libp2p or in-memory fallback)\nimport type { Message } from '@/stores/messageStore'\n\nexport interface MessagePushTransport {\n  start(): Promise<void>\n  publish(msg: Message): Promise<void>\n  onMessage(cb: (msg: Message) => void): void\n  stop?(): Promise<void>\n  isStarted(): boolean\n  name: string\n}\n\nconst localListeners: ((msg: Message) => void)[] = []\n\nclass InMemoryMessageTransport implements MessagePushTransport {\n  private listeners: ((msg: Message) => void)[] = []\n  private started = false\n  name = 'in-memory-msg'\n  async start() { this.started = true }\n  async publish(msg: Message) { setTimeout(()=> this.listeners.forEach(l=> l(msg)), 0) }\n  onMessage(cb: (msg: Message)=>void) { this.listeners.push(cb) }\n  isStarted() { return this.started }\n}\n\nlet transport: MessagePushTransport | null = null\n\nexport async function ensureMessageTransport(): Promise<MessagePushTransport> {\n  if (!transport) {\n    // TODO: Add libp2p transport if available\n    transport = new InMemoryMessageTransport()\n    transport.onMessage(msg => localListeners.forEach(l => l(msg)))\n    await transport.start()\n  }\n  return transport\n}\n\nexport async function publishMessage(msg: Message) {\n  const t = await ensureMessageTransport()\n  await t.publish(msg)\n}\n\nexport function onMessage(cb: (msg: Message) => void) {\n  localListeners.push(cb)\n}\n","import { create } from 'zustand'\nimport { nanoid } from 'nanoid'\nimport { publishMessage, onMessage } from '@/lib/push/messages'\n\nexport interface Message {\n  id: string\n  sender: string // public key or username\n  recipient: string // public key or username\n  content: string\n  timestamp: string // ISO\n  encrypted?: boolean\n  signature?: string\n  status?: 'pending' | 'sent' | 'delivered' | 'read' | 'failed'\n}\n\ninterface MessageThread {\n  contactId: string\n  messages: Message[]\n}\n\ninterface MessageState {\n  threads: Record<string, MessageThread>\n  sendMessage: (contactId: string, content: string) => Promise<void>\n  receiveMessage: (contactId: string, message: Message) => void\n  loadMessages: (contactId: string) => void\n  setMessages: (contactId: string, messages: Message[]) => void\n}\n\nexport const useMessageStore = create<MessageState>((set) => ({\n  threads: {},\n\n  async sendMessage(contactId, content) {\n    // TODO: Encrypt, sign, and send via push or torrent\n    const msg: Message = {\n      id: nanoid(),\n      sender: 'me', // TODO: use real sender id\n      recipient: contactId,\n      content,\n      timestamp: new Date().toISOString(),\n      status: 'pending',\n    }\n    set(state => ({\n      threads: {\n        ...state.threads,\n        [contactId]: {\n          contactId,\n          messages: [...(state.threads[contactId]?.messages || []), msg]\n        }\n      }\n    }))\n    try {\n      await publishMessage(msg)\n      set(state => ({\n        threads: {\n          ...state.threads,\n          [contactId]: {\n            contactId,\n            messages: state.threads[contactId].messages.map(m => m.id === msg.id ? { ...m, status: 'sent' } : m)\n          }\n        }\n      }))\n    } catch (e) {\n      set(state => ({\n        threads: {\n          ...state.threads,\n          [contactId]: {\n            contactId,\n            messages: state.threads[contactId].messages.map(m => m.id === msg.id ? { ...m, status: 'failed' } : m)\n          }\n        }\n      }))\n    }\n  },\n\n\n  receiveMessage(contactId, message) {\n    set(state => ({\n      threads: {\n        ...state.threads,\n        [contactId]: {\n          contactId,\n          messages: [...(state.threads[contactId]?.messages || []), message]\n        }\n      }\n    }))\n  },\n\n  loadMessages() {\n    // TODO: Load from localStorage/IndexedDB\n  },\n\n  setMessages(contactId, messages) {\n    set(state => ({\n      threads: {\n        ...state.threads,\n        [contactId]: {\n          contactId,\n          messages\n        }\n      }\n    }))\n  }\n}))\n\n// Listen for incoming messages via push transport (must be outside the store definition)\nonMessage((msg) => {\n  useMessageStore.getState().receiveMessage(msg.sender, msg)\n})\n","import React, { useRef, useState } from 'react'\nimport { useContactStore } from '@/stores/contactStore'\nimport { useMessageStore } from '@/stores/messageStore'\n\nconst ChatThread: React.FC<{ contactId: string }> = ({ contactId }) => {\n  const { contacts } = useContactStore()\n  const thread = useMessageStore(state => state.threads[contactId])\n  const sendMessage = useMessageStore(state => state.sendMessage)\n  const [input, setInput] = useState('')\n  const inputRef = useRef<HTMLInputElement>(null)\n  const contact = contacts.find(c => c.id === contactId)\n\n  const handleSend = async (e: React.FormEvent) => {\n    e.preventDefault()\n    if (input.trim()) {\n      await sendMessage(contactId, input.trim())\n      setInput('')\n      inputRef.current?.focus()\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex items-center border-b px-4 py-2 bg-gray-100 dark:bg-gray-800\">\n        <span className=\"font-semibold text-lg text-gray-800 dark:text-gray-100\">{contact?.displayName || contact?.username}</span>\n      </div>\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-2 bg-white dark:bg-gray-900\">\n        {thread?.messages.map(msg => (\n          <div key={msg.id} className={`flex ${msg.sender === 'me' ? 'justify-end' : 'justify-start'}`}>\n            <div className={`max-w-xs px-3 py-2 rounded-lg shadow text-sm ${msg.sender === 'me' ? 'bg-blue-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100'}`}>\n              <div>{msg.content}</div>\n              <div className=\"text-[10px] mt-1 text-right opacity-60\">\n                {new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                {msg.status === 'pending' && <span className=\"ml-1\">⏳</span>}\n                {msg.status === 'failed' && <span className=\"ml-1 text-red-500\">⚠️</span>}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSend} className=\"flex gap-2 p-4 border-t bg-gray-50 dark:bg-gray-800\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          className=\"flex-1 px-3 py-2 rounded border bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100\"\n          placeholder=\"Type a message...\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n        <button type=\"submit\" className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">Send</button>\n      </form>\n    </div>\n  )\n}\n\nexport default ChatThread\n","import React, { useState } from 'react'\nimport { useContactStore } from '@/stores/contactStore'\nimport { useMessageStore } from '@/stores/messageStore'\nimport ChatThread from '@/components/ChatThread'\n\nconst MessagesPage: React.FC = () => {\n  const { contacts } = useContactStore()\n  const [activeContactId, setActiveContactId] = useState<string | null>(null)\n  const threads = useMessageStore(state => state.threads)\n\n  const activeThread = activeContactId ? threads[activeContactId] : null\n\n  return (\n    <div className=\"flex h-[80vh] border rounded-lg overflow-hidden bg-white dark:bg-gray-900\">\n      {/* Contact list */}\n      <div className=\"w-64 border-r bg-gray-50 dark:bg-gray-800 p-4 overflow-y-auto\">\n        <h2 className=\"font-bold mb-4 text-gray-700 dark:text-gray-200\">Messages</h2>\n        <ul>\n          {contacts.map(c => (\n            <li key={c.id || c.username}>\n              <button\n                className={`w-full text-left px-2 py-2 rounded hover:bg-blue-100 dark:hover:bg-blue-900 ${activeContactId === c.id ? 'bg-blue-100 dark:bg-blue-900' : ''}`}\n                onClick={() => setActiveContactId(c.id)}\n              >\n                <span className=\"font-medium\">{c.displayName || c.username}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {/* Chat area */}\n      <div className=\"flex-1 flex flex-col\">\n        {activeThread ? (\n          <ChatThread contactId={activeThread.contactId} />\n        ) : (\n          <div className=\"flex-1 flex items-center justify-center text-gray-400\">\n            Select a contact to start chatting\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MessagesPage","import React, { useState, useEffect, useRef } from 'react'\nimport QRCode from 'qrcode'\nimport QrScanner from 'qr-scanner'\nimport { useProfileStore } from '@/stores/profileStore'\nimport { useContactStore } from '@/stores/contactStore'\nimport { getCore } from '@/lib/core'\n\ninterface QRCodeManagerProps {\n  onContactAdded?: (contact: any) => void\n}\n\nexport const QRCodeManager: React.FC<QRCodeManagerProps> = ({ onContactAdded }) => {\n  const [showQR, setShowQR] = useState(false)\n  const [showScanner, setShowScanner] = useState(false)\n  const [qrDataURL, setQrDataURL] = useState<string>('')\n  const [scanResult, setScanResult] = useState<string>('')\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const scannerRef = useRef<QrScanner | null>(null)\n\n  const { currentProfile } = useProfileStore()\n  const { addContactFromMagnet } = useContactStore()\n\n  // Generate QR code for current profile\n  useEffect(() => {\n    const generateQRCode = async () => {\n      if (showQR && currentProfile) {\n        let magnetUri = currentProfile.magnetUri\n        \n        // If no magnetUri is available, try to generate one by seeding the profile\n        if (!magnetUri && currentProfile.username) {\n          try {\n            const core = await getCore()\n            magnetUri = await core.seedCurrentProfile()\n            console.log('[QRCodeManager] Generated magnet URI for QR code:', magnetUri)\n          } catch (error) {\n            console.error('[QRCodeManager] Failed to generate magnet URI:', error)\n            return\n          }\n        }\n        \n        if (magnetUri) {\n          const profileData = {\n            username: currentProfile.username,\n            displayName: currentProfile.displayName || currentProfile.username,\n            magnetUri: magnetUri,\n            type: 'snartnet-profile'\n          }\n          \n          QRCode.toDataURL(JSON.stringify(profileData), {\n            width: 256,\n            margin: 2,\n            color: {\n              dark: '#000000',\n              light: '#ffffff'\n            }\n          }).then(setQrDataURL).catch(console.error)\n        }\n      }\n    }\n    \n    generateQRCode()\n  }, [showQR, currentProfile])\n\n  // Initialize QR scanner\n  useEffect(() => {\n    if (showScanner && videoRef.current) {\n      scannerRef.current = new QrScanner(\n        videoRef.current,\n        (result) => {\n          setScanResult(result.data)\n          handleScanResult(result.data)\n        },\n        {\n          highlightScanRegion: true,\n          highlightCodeOutline: true,\n        }\n      )\n      \n      scannerRef.current.start().catch(console.error)\n      \n      return () => {\n        if (scannerRef.current) {\n          scannerRef.current.stop()\n          scannerRef.current.destroy()\n          scannerRef.current = null\n        }\n      }\n    }\n  }, [showScanner])\n\n  const handleScanResult = async (data: string) => {\n    try {\n      // Try to parse as SnartNet profile JSON\n      const profileData = JSON.parse(data)\n      if (profileData.type === 'snartnet-profile' && profileData.magnetUri) {\n        const contact = await addContactFromMagnet(profileData.magnetUri, 'friend')\n        if (contact) {\n          setScanResult(`Added ${profileData.username} as a friend!`)\n          onContactAdded?.(contact)\n          setShowScanner(false)\n        } else {\n          setScanResult('Failed to add contact - profile may be invalid')\n        }\n      } else {\n        // Fallback: try as direct magnet URI\n        if (data.startsWith('magnet:')) {\n          const contact = await addContactFromMagnet(data, 'friend')\n          if (contact) {\n            setScanResult(`Added contact from magnet URI!`)\n            onContactAdded?.(contact)\n            setShowScanner(false)\n          } else {\n            setScanResult('Failed to add contact from magnet URI')\n          }\n        } else {\n          setScanResult('Invalid QR code - not a SnartNet profile or magnet link')\n        }\n      }\n    } catch (error) {\n      // Not valid JSON, try as magnet URI\n      if (data.startsWith('magnet:')) {\n        const contact = await addContactFromMagnet(data, 'friend')\n        if (contact) {\n          setScanResult(`Added contact from magnet URI!`)\n          onContactAdded?.(contact)\n          setShowScanner(false)\n        } else {\n          setScanResult('Failed to add contact from magnet URI')\n        }\n      } else {\n        setScanResult('Invalid QR code format')\n      }\n    }\n  }\n\n  const closeQR = () => {\n    setShowQR(false)\n    setQrDataURL('')\n  }\n\n  const closeScanner = () => {\n    setShowScanner(false)\n    setScanResult('')\n    if (scannerRef.current) {\n      scannerRef.current.stop()\n      scannerRef.current.destroy()\n      scannerRef.current = null\n    }\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex gap-4\">\n        <button\n          onClick={() => setShowQR(true)}\n          disabled={!currentProfile?.username}\n          className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white rounded-lg transition-colors flex items-center gap-2\"\n        >\n          📱 Show My QR Code\n        </button>\n        \n        <button\n          onClick={() => setShowScanner(true)}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors flex items-center gap-2\"\n        >\n          📷 Scan QR Code\n        </button>\n      </div>\n\n      {/* QR Code Display Modal */}\n      {showQR && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg max-w-sm w-full mx-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                My Profile QR Code\n              </h3>\n              <button\n                onClick={closeQR}\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            {qrDataURL ? (\n              <div className=\"text-center\">\n                <img \n                  src={qrDataURL} \n                  alt=\"Profile QR Code\" \n                  className=\"mx-auto mb-4 border rounded\"\n                />\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Share this QR code to let others add you as a friend\n                </p>\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\n                <p className=\"text-sm text-gray-500 mt-2\">Generating QR code...</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* QR Scanner Modal */}\n      {showScanner && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Scan QR Code\n              </h3>\n              <button\n                onClick={closeScanner}\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              >\n                ✕\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <video\n                ref={videoRef}\n                className=\"w-full rounded border aspect-square\"\n              />\n              \n              {scanResult && (\n                <div className={`p-3 rounded text-sm ${\n                  scanResult.includes('Added') || scanResult.includes('success') \n                    ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n                    : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n                }`}>\n                  {scanResult}\n                </div>\n              )}\n              \n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                Point your camera at a SnartNet profile QR code or magnet link QR code\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default QRCodeManager","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport QRCodeManager from '@/components/QRCodeManager'\nimport { useContactStore, type RelationshipType } from '@/stores/contactStore'\nimport { usePostStore } from '@/stores/postStore'\n\nconst relationshipTabs: Array<{ id: RelationshipType | 'all'; label: string; icon: string }> = [\n  { id: 'all', label: 'All', icon: '🌐' },\n  { id: 'friend', label: 'Friends', icon: '👥' },\n  { id: 'ring-of-trust', label: 'Ring of Trust', icon: '🛡️' },\n  { id: 'acquaintance', label: 'Acquaintances', icon: '🤝' },\n  { id: 'group-member', label: 'Groups', icon: '🏠' },\n]\n\nconst NetworkPage: React.FC = () => {\n  const { loadContacts, contacts, addContactFromMagnet, removeContact } = useContactStore()\n  const { loadPostsFromContacts } = usePostStore()\n  const [activeTab, setActiveTab] = useState<'all' | RelationshipType>('all')\n  const [magnetInput, setMagnetInput] = useState('')\n  const [adding, setAdding] = useState(false)\n  const [relationship, setRelationship] = useState<RelationshipType>('friend')\n  const [error, setError] = useState<string | null>(null)\n  \n  // Handle contact addition with automatic post sync\n  const handleContactAdded = async () => {\n    await loadContacts()\n    // Trigger post sync for all contacts (including the newly added one)\n    setTimeout(() => loadPostsFromContacts(), 100)\n  }\n\n  useEffect(() => { loadContacts() }, [loadContacts])\n\n  const filtered = contacts.filter(c => activeTab === 'all' ? true : c.relationship === activeTab)\n\n  const handleAdd = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setError(null)\n    if (!magnetInput.trim()) return\n    setAdding(true)\n    try {\n      const added = await addContactFromMagnet(magnetInput.trim(), relationship)\n      if (!added) {\n        setError('Failed to load profile from magnet (no peers or invalid data)')\n      } else {\n        setMagnetInput('')\n        // Trigger post sync for the newly added contact\n        setTimeout(() => loadPostsFromContacts(), 100)\n      }\n    } catch (e:any) {\n      setError(e?.message || 'Failed to add contact')\n    } finally {\n      setAdding(false)\n    }\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      <div className=\"mb-8\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">Friends & Contacts</h1>\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">Manage your network. Add new contacts with QR codes or magnet links.</p>\n          </div>\n        </div>\n        \n        {/* QR Code Section */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6 mb-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Quick Connect</h2>\n          <QRCodeManager onContactAdded={handleContactAdded} />\n        </div>\n        \n        {/* Manual Magnet Link Form */}\n        <div className=\"bg-gray-50 dark:bg-gray-800/50 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\n          <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-3\">Or add via Magnet Link</h3>\n          <form onSubmit={handleAdd} className=\"flex flex-col sm:flex-row gap-2 w-full md:w-auto\">\n          <input\n            type=\"text\"\n            value={magnetInput}\n            onChange={e => setMagnetInput(e.target.value)}\n            placeholder=\"magnet:?xt=... (profile)\"\n            className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n            disabled={adding}\n          />\n          <select\n            value={relationship}\n            onChange={e => setRelationship(e.target.value as RelationshipType)}\n            className=\"px-2 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n            disabled={adding}\n            aria-label=\"Relationship type\"\n          >\n            <option value=\"friend\">Friend</option>\n            <option value=\"ring-of-trust\">Ring of Trust</option>\n            <option value=\"acquaintance\">Acquaintance</option>\n            <option value=\"group-member\">Group Member</option>\n          </select>\n            <button\n              type=\"submit\"\n              disabled={adding || !magnetInput.trim()}\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white rounded-md text-sm\"\n            >\n              {adding ? 'Adding…' : 'Add'}\n            </button>\n          </form>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 p-3 rounded bg-red-100 dark:bg-red-900/40 text-red-700 dark:text-red-300 text-sm\">{error}</div>\n      )}\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700 mb-6 overflow-x-auto\">\n        <nav className=\"flex space-x-6 min-w-max\">\n          {relationshipTabs.map(tab => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id as any)}\n              className={`py-2 px-1 border-b-2 text-sm font-medium transition-colors flex items-center gap-1 ${activeTab === tab.id ? 'border-blue-500 text-blue-600 dark:text-blue-400' : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'}`}\n            >\n              <span>{tab.icon}</span>{tab.label}\n              <span className=\"ml-1 bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 rounded-full px-2 py-0.5 text-[10px]\">\n                {tab.id === 'all' ? contacts.length : contacts.filter(c => c.relationship === tab.id).length}\n              </span>\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* List */}\n      <div className=\"space-y-4\">\n        {filtered.length === 0 ? (\n          <div className=\"text-center py-16 border border-dashed border-gray-300 dark:border-gray-700 rounded-lg\">\n            <div className=\"text-5xl mb-4\">📭</div>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-2 text-sm\">No contacts in this category yet.</p>\n            <p className=\"text-xs text-gray-400 dark:text-gray-500\">Add one with a profile magnet link above.</p>\n          </div>\n        ) : (\n          filtered.map(c => (\n            <div key={c.id} className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4 flex items-center gap-4\">\n              <Link to={`/contact/${c.id}`} className=\"w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white font-semibold overflow-hidden focus:ring-2 focus:ring-blue-500\">\n                {c.avatar ? <img src={c.avatar} alt={c.displayName} className=\"w-12 h-12 rounded-full object-cover\" /> : c.displayName.charAt(0).toUpperCase()}\n              </Link>\n              <div className=\"flex-1 min-w-0\">\n                <Link to={`/contact/${c.id}`} className=\"flex flex-wrap items-center gap-2 group\">\n                  <span className=\"font-medium text-gray-900 dark:text-white truncate group-hover:underline\">{c.displayName}</span>\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">@{c.username}</span>\n                  <RelationshipBadge rel={c.relationship} />\n                  {c.postIndexMagnetUri && <span className=\"text-[10px] px-2 py-0.5 rounded bg-indigo-100 dark:bg-indigo-900/40 text-indigo-700 dark:text-indigo-300\">posts</span>}\n                </Link>\n                <div className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">Trust {c.trustLevel}/10 • Added {new Date(c.addedDate).toLocaleDateString()}</div>\n              </div>\n              <button\n                onClick={() => removeContact(c.id)}\n                className=\"text-xs px-3 py-1 bg-red-100 hover:bg-red-200 dark:bg-red-900 dark:hover:bg-red-800 text-red-700 dark:text-red-300 rounded\"\n              >Remove</button>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst RelationshipBadge: React.FC<{ rel: RelationshipType }> = ({ rel }) => {\n  const map: Record<RelationshipType, string> = {\n    'friend': 'bg-green-100 dark:bg-green-900/40 text-green-700 dark:text-green-300',\n    'ring-of-trust': 'bg-red-100 dark:bg-red-900/40 text-red-700 dark:text-red-300',\n    'acquaintance': 'bg-blue-100 dark:bg-blue-900/40 text-blue-700 dark:text-blue-300',\n    'group-member': 'bg-purple-100 dark:bg-purple-900/40 text-purple-700 dark:text-purple-300'\n  }\n  return <span className={`px-2 py-0.5 rounded-full text-[10px] font-medium ${map[rel]}`}>{rel.replace('-', ' ')}</span>\n}\n\nexport default NetworkPage\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { useContactStore } from '@/stores/contactStore'\nimport { usePostStore } from '@/stores/postStore'\nimport { ImageProcessor } from '@/lib/imageProcessor'\n\nconst ContactProfilePage: React.FC = () => {\n  const { id } = useParams<{ id: string }>()\n  const { contacts, loadContacts } = useContactStore()\n  const { posts, loadPostsFromContacts } = usePostStore()\n  const syncPostsForContact = usePostStore(s => s.syncPostsForContact)\n  const [syncing, setSyncing] = useState(false)\n  const [syncMsg, setSyncMsg] = useState<string>('')\n\n  useEffect(() => { loadContacts() }, [loadContacts])\n  useEffect(() => { loadPostsFromContacts() }, [loadPostsFromContacts])\n\n  const contact = contacts.find(c => c.id === id)\n\n  const contactPosts = useMemo(() => {\n    if (!contact) return []\n    return posts\n      .filter(p => p.author === contact.username)\n      .sort((a,b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n      .slice(0, 50)\n  }, [posts, contact])\n\n  if (!contact) {\n    return (\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <div className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-8 text-center\">\n          <h1 className=\"text-xl font-semibold mb-2 text-gray-800 dark:text-gray-100\">Contact not found</h1>\n          <p className=\"text-gray-500 dark:text-gray-400 mb-4\">The contact you are looking for does not exist or has been removed.</p>\n          <Link to=\"/network\" className=\"text-blue-600 dark:text-blue-400 hover:underline text-sm\">Back to Network</Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 space-y-8\">\n      <div className=\"flex items-start gap-6 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl p-6 shadow\">\n        <div className=\"w-24 h-24 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white text-3xl font-semibold overflow-hidden\">\n          {contact.avatar ? (\n            <img src={contact.avatar} alt={contact.displayName} className=\"w-24 h-24 object-cover\" />\n          ) : (\n            contact.displayName.charAt(0).toUpperCase()\n          )}\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-1\">{contact.displayName}</h1>\n          <div className=\"flex flex-wrap items-center gap-2 text-sm mb-2\">\n            <span className=\"text-gray-500 dark:text-gray-400\">@{contact.username}</span>\n            {contact.postIndexMagnetUri && (\n              <span className=\"text-[10px] px-2 py-0.5 rounded bg-indigo-100 dark:bg-indigo-900/40 text-indigo-700 dark:text-indigo-300\">posts</span>\n            )}\n            <span className=\"text-[10px] px-2 py-0.5 rounded bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200\">Trust {contact.trustLevel}/10</span>\n            <span className=\"text-[10px] px-2 py-0.5 rounded bg-blue-100 dark:bg-blue-900/40 text-blue-700 dark:text-blue-300\">{contact.relationship}</span>\n          </div>\n          <div className=\"text-xs text-gray-400 dark:text-gray-500\">\n            Added {new Date(contact.addedDate).toLocaleDateString()} • {contact.magnetUri.slice(0,42)}…\n          </div>\n          {contact.notes && contact.notes.trim() && (\n            <p className=\"mt-3 text-sm text-gray-700 dark:text-gray-300 whitespace-pre-line\">{contact.notes}</p>\n          )}\n        </div>\n        <div className=\"flex flex-col gap-2 items-end\">\n          {contact.postIndexMagnetUri && (\n            <span className=\"text-xs text-green-600 dark:text-green-400\">Index ready</span>\n          )}\n          <button\n            disabled={syncing || !contact.postIndexMagnetUri}\n            onClick={async () => {\n              if (!contact.postIndexMagnetUri) return\n              setSyncing(true)\n              setSyncMsg('Syncing…')\n              const start = performance.now()\n              try {\n                await syncPostsForContact(contact.id, { maxPosts: contact.syncMaxPosts, monthsLookback: contact.syncMonthsLookback })\n                const dur = (performance.now() - start)/1000\n                setSyncMsg(`Synced in ${dur.toFixed(1)}s`)\n              } catch (e:any) {\n                setSyncMsg(e?.message || 'Sync failed')\n              } finally {\n                setSyncing(false)\n                setTimeout(()=> setSyncMsg(''), 5000)\n              }\n            }}\n            className=\"px-3 py-1.5 text-xs rounded bg-blue-600 disabled:bg-gray-400 hover:bg-blue-700 text-white font-medium shadow\"\n          >\n            {syncing ? 'Syncing…' : 'Sync Contact'}\n          </button>\n          {syncMsg && <span className=\"text-[10px] text-gray-500 dark:text-gray-400\">{syncMsg}</span>}\n        </div>\n      </div>\n\n      <div>\n        <h2 className=\"text-lg font-semibold text-gray-800 dark:text-gray-100 mb-4\">Recent Posts</h2>\n        {contactPosts.length === 0 ? (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6 text-center\">\n            No posts downloaded yet. Sync will populate as posts arrive.\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {contactPosts.map(post => (\n              <div key={post.id} className=\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"flex items-center gap-2 text-xs text-gray-500 dark:text-gray-400\">\n                    <span>{new Date(post.createdAt).toLocaleString()}</span>\n                    {post.signatureVerified ? (\n                      <span className=\"px-1.5 py-0.5 rounded text-[10px] font-semibold bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 border border-green-300 dark:border-green-700\">ver</span>\n                    ) : (\n                      <span className=\"px-1.5 py-0.5 rounded text-[10px] font-semibold bg-yellow-100 dark:bg-yellow-900 text-yellow-700 dark:text-yellow-300 border border-yellow-300 dark:border-yellow-700\" title={post.signatureError || 'unverified'}>unv</span>\n                    )}\n                    {post.magnetUri && <button onClick={() => navigator.clipboard.writeText(post.magnetUri!)} className=\"text-blue-600 dark:text-blue-400 hover:underline\">🧲</button>}\n                  </div>\n                </div>\n                <p className=\"text-sm text-gray-900 dark:text-gray-100 whitespace-pre-line mb-2\">{post.content}</p>\n                {post.images && post.images.length > 0 && (\n                  <div className=\"grid gap-2 grid-cols-2\">\n                    {post.images.map(img => (\n                      <img key={img.id} src={ImageProcessor.base64ToDataUrl(img.data)} className=\"w-full h-40 object-cover rounded\" alt={img.filename} />\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-center pt-8\">\n        <Link to=\"/network\" className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline\">← Back to Network</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default ContactProfilePage\n","import { Link } from 'react-router-dom'\n\nconst Navigation: React.FC = () => {\n  return (\n    <div className=\"sticky top-0 z-40 backdrop-blur supports-[backdrop-filter]:bg-white/75 dark:supports-[backdrop-filter]:bg-gray-900/75 bg-white/90 dark:bg-gray-800/90 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n      <nav>\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link to=\"/\" className=\"text-xl font-bold text-gray-900 dark:text-white\">\n              SnartNet\n            </Link>\n            <div className=\"flex space-x-4 items-center\">\n              <Link to=\"/\" className=\"text-sm text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">Home</Link>\n              <Link to=\"/profile\" className=\"text-sm text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">Profile</Link>\n              <Link to=\"/network\" className=\"text-sm text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">Network</Link>\n              <Link to=\"/messages\" className=\"text-sm text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white\">Messages</Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-red-600/90 text-white text-center text-xs py-1 tracking-wide font-medium\">\n          Development version – expect things to break & data to reset\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navigation","import React, { useEffect, useState } from 'react'\n\ninterface Stats {\n  transport: string\n  peers: number\n  received: number\n  published: number\n}\n\nexport const PushStatus: React.FC = () => {\n  const [stats, setStats] = useState<Stats>({ transport: 'initializing', peers: 0, received: 0, published: 0 })\n  const [expanded, setExpanded] = useState(false)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const w: any = window as any\n      const node: any = w.snartnetLibp2p\n      const received = (w.__sn_head_sig_cache?.length) || 0\n      // Track published events: increment counter when we publish\n      if (w.lastPublishedHeadUpdate && !w.__sn_head_published_count) {\n        w.__sn_head_published_count = 1\n      }\n      const published = w.__sn_head_published_count || 0\n      setStats({\n        transport: node ? 'libp2p' : 'in-memory',\n        peers: node?.getPeers ? node.getPeers().length : (node?.getConnections ? node.getConnections().length : 0),\n        received,\n        published\n      })\n    }, 2000)\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className=\"fixed bottom-1 right-1 text-[11px] bg-black/70 text-white px-2 py-1 rounded shadow z-50 select-none\">\n      <div className=\"flex gap-2 items-center cursor-pointer\" onClick={()=> setExpanded(e=>!e)}>\n        <span>Push: {stats.transport}</span>\n        <span>| Peers: {stats.peers}</span>\n        <span>| Rx: {stats.received}</span>\n        <span>| Tx: {stats.published}</span>\n        <span>{expanded ? '▾' : '▸'}</span>\n      </div>\n      {expanded && (\n        <div className=\"mt-1 max-w-[260px] leading-tight space-y-0.5\">\n          <div>Transport: {stats.transport}</div>\n          <div>Peers: {stats.peers}</div>\n          <div>Head Updates Received (unique sigs): {stats.received}</div>\n          <div>Head Updates Published: {stats.published}</div>\n          <div className=\"opacity-60\">Click to collapse</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default PushStatus\n","import Navigation from './Navigation'\nimport PushStatus from './PushStatus'\n\n// Build metadata injected at build time via Vite define\nconst APP_VERSION = (import.meta as any).env?.VITE_APP_VERSION || 'dev'\nconst GIT_COMMIT = (import.meta as any).env?.VITE_GIT_COMMIT || 'unknown'\nconst GIT_BRANCH = (import.meta as any).env?.VITE_GIT_BRANCH || 'unknown'\nconst GIT_TAG = (import.meta as any).env?.VITE_GIT_TAG || ''\nconst BUILD_TIME = (import.meta as any).env?.VITE_BUILD_TIME || ''\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      <main className=\"container mx-auto px-4 py-8 flex-1 w-full\">\n        {children}\n      </main>\n      <footer className=\"border-t border-gray-200 dark:border-gray-700 py-4 text-center text-[10px] sm:text-xs text-gray-500 dark:text-gray-400 flex flex-col sm:flex-row gap-1 sm:gap-2 items-center justify-center\">\n        <span>SnartNet v{APP_VERSION}{GIT_TAG ? ` (${GIT_TAG})` : ''}</span>\n        <span className=\"hidden sm:inline\">•</span>\n        <span className=\"font-mono\" title={`Full commit: ${GIT_COMMIT}`}>commit {GIT_COMMIT.slice(0, 7)}</span>\n        <span className=\"hidden sm:inline\">•</span>\n        <span>branch {GIT_BRANCH}</span>\n        {BUILD_TIME && (\n          <>\n            <span className=\"hidden sm:inline\">•</span>\n            <span title={BUILD_TIME}>built {new Date(BUILD_TIME).toLocaleString()}</span>\n          </>\n        )}\n      </footer>\n      <PushStatus />\n    </div>\n  )\n}\n\nexport default Layout","import { useEffect } from 'react'\nimport { getCore } from '@/lib/core'\nimport { useProfileStore } from '@/stores/profileStore'\nimport { getTorrentService } from '@/lib/torrent'\n\n/**\n * Hook to initialize the core and load existing profile\n */\nexport function useInitializeCore() {\n  const { setCurrentProfile, setLoading, setError } = useProfileStore()\n\n  useEffect(() => {\n    let isMounted = true\n\n    const initializeCore = async () => {\n      try {\n        setLoading(true)\n        setError(null)\n        \n        console.log('[useInitializeCore] Initializing core...')\n        const core = await getCore()\n        console.log('[useInitializeCore] Core initialized successfully')\n\n        // Initialize torrent service\n        console.log('[useInitializeCore] Initializing torrent service...')\n        getTorrentService();\n        console.log('[useInitializeCore] Torrent service initialized.')\n\n        // Check if there's an existing profile\n        if (core.hasProfile()) {\n          console.log('[useInitializeCore] Found existing profile, loading...')\n          const profile = await core.getCurrentProfile()\n          if (profile && isMounted) {\n            console.log('[useInitializeCore] Loaded existing profile:', profile)\n            setCurrentProfile(profile)\n          }\n        } else {\n          console.log('[useInitializeCore] No existing profile found')\n        }\n\n      } catch (error) {\n        console.error('[useInitializeCore] Failed to initialize core:', error)\n        if (isMounted) {\n          const errorMessage = error instanceof Error ? error.message : 'Failed to initialize'\n          setError(errorMessage)\n        }\n      } finally {\n        if (isMounted) {\n          setLoading(false)\n        }\n      }\n    }\n\n    initializeCore()\n\n    return () => {\n      isMounted = false\n    }\n  }, [setCurrentProfile, setLoading, setError])\n}","import { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport HomePage from '@/pages/HomePage'\nimport ProfilePage from '@/pages/ProfilePage'\nimport MessagesPage from '@/pages/MessagesPage'\nimport NetworkPage from '@/pages/NetworkPage'\nimport ContactProfilePage from '@/pages/ContactProfilePage'\nimport Layout from '@/components/Layout'\nimport { useInitializeCore } from '@/hooks/useInitializeCore'\nimport './App.css'\n\nfunction App() {\n  // Initialize the WASM core and load existing profile\n  useInitializeCore()\n  return (\n    <BrowserRouter basename=\"/net\">\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/profile/:id?\" element={<ProfilePage />} />\n          <Route path=\"/network\" element={<NetworkPage />} />\n          <Route path=\"/contact/:id\" element={<ContactProfilePage />} />\n          <Route path=\"/messages/:id?\" element={<MessagesPage />} />\n        </Routes>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default App","// src/client/build/register.ts\nvar autoUpdateMode = \"true\";\nvar selfDestroying = \"false\";\nvar auto = autoUpdateMode === \"true\";\nvar autoDestroy = selfDestroying === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisteredSW,\n    onRegisterError\n  } = options;\n  let wb;\n  let registerPromise;\n  let sendSkipWaitingMessage;\n  const updateServiceWorker = async (_reloadPage = true) => {\n    await registerPromise;\n    if (!auto) {\n      sendSkipWaitingMessage?.();\n    }\n  };\n  async function register() {\n    if (\"serviceWorker\" in navigator) {\n      wb = await import(\"workbox-window\").then(({ Workbox }) => {\n        return new Workbox(\"/net/sw.js\", { scope: \"/net/\", type: \"classic\" });\n      }).catch((e) => {\n        onRegisterError?.(e);\n        return void 0;\n      });\n      if (!wb)\n        return;\n      sendSkipWaitingMessage = () => {\n        wb?.messageSkipWaiting();\n      };\n      if (!autoDestroy) {\n        if (auto) {\n          wb.addEventListener(\"activated\", (event) => {\n            if (event.isUpdate || event.isExternal)\n              window.location.reload();\n          });\n          wb.addEventListener(\"installed\", (event) => {\n            if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n        } else {\n          let onNeedRefreshCalled = false;\n          const showSkipWaitingPrompt = () => {\n            onNeedRefreshCalled = true;\n            wb?.addEventListener(\"controlling\", (event) => {\n              if (event.isUpdate)\n                window.location.reload();\n            });\n            onNeedRefresh?.();\n          };\n          wb.addEventListener(\"installed\", (event) => {\n            if (typeof event.isUpdate === \"undefined\") {\n              if (typeof event.isExternal !== \"undefined\") {\n                if (event.isExternal)\n                  showSkipWaitingPrompt();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              } else {\n                !onNeedRefreshCalled && onOfflineReady?.();\n              }\n            } else if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n          wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n        }\n      }\n      wb.register({ immediate }).then((r) => {\n        if (onRegisteredSW)\n          onRegisteredSW(\"/net/sw.js\", r);\n        else\n          onRegistered?.(r);\n      }).catch((e) => {\n        onRegisterError?.(e);\n      });\n    }\n  }\n  registerPromise = register();\n  return updateServiceWorker;\n}\nexport {\n  registerSW\n};\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n// Register service worker with auto-update & immediate activation\nimport { registerSW } from 'virtual:pwa-register'\n\n// Force reload when a new service worker is activated\nconst updateSW = registerSW({\n  immediate: true,\n  onNeedRefresh() {\n    // Immediately update without asking user\n    updateSW(true)\n  },\n  onOfflineReady() {\n    // Optional: could display a toast\n  },\n  onRegisteredSW(swUrl: string, r: ServiceWorkerRegistration | undefined) {\n    // Periodic check for updates (every 30 min)\n  if (r && typeof r.update === 'function') {\n      setInterval(() => {\n        r.update()\n      }, 30 * 60 * 1000)\n    } else if (navigator.serviceWorker.controller) {\n      fetch(swUrl).catch(() => {})\n    }\n  }\n})\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)"],"file":"assets/index-CI8SdRMj.js"}