import { AbstractMessageStream } from '@libp2p/utils';
import type { AbortOptions } from '@libp2p/interface';
import type { MessageStreamInit, SendResult } from '@libp2p/utils';
import type { Uint8ArrayList } from 'uint8arraylist';
export interface WebTransportMessageStreamInit extends MessageStreamInit {
    stream: WebTransportBidirectionalStream;
}
export declare class WebTransportMessageStream extends AbstractMessageStream {
    private writer;
    private reader;
    constructor(init: WebTransportMessageStreamInit);
    close(options?: AbortOptions): Promise<void>;
    sendData(data: Uint8ArrayList): SendResult;
    sendReset(err: Error): void;
    sendPause(): void;
    sendResume(): void;
}
//# sourceMappingURL=webtransport-message-stream.d.ts.map