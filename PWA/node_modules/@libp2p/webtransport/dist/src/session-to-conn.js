import { AbstractMultiaddrConnection } from '@libp2p/utils';
class WebTransportSessionMultiaddrConnection extends AbstractMultiaddrConnection {
    cleanUpWTSession;
    constructor(init) {
        super(init);
        this.cleanUpWTSession = init.cleanUpWTSession;
    }
    sendData(data) {
        return {
            sentBytes: data.byteLength,
            canSendMore: true
        };
    }
    sendReset() {
        this.cleanUpWTSession('abort');
    }
    async sendClose(options) {
        this.cleanUpWTSession('close');
        options?.signal?.throwIfAborted();
    }
    sendPause() {
        // TODO: backpressure?
    }
    sendResume() {
        // TODO: backpressure?
    }
}
/**
 * Convert a socket into a MultiaddrConnection
 * https://github.com/libp2p/interface-transport#multiaddrconnection
 */
export const toMultiaddrConnection = (init) => {
    return new WebTransportSessionMultiaddrConnection(init);
};
//# sourceMappingURL=session-to-conn.js.map